04/05/2021 00:41:21 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/05/2021 00:41:21 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/enar/bert-base-uncased/zero_fc512_lr0.05_frozen.txt
	random_seed: 123
	lr: 0.05
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/enar/bert-base-uncased/zero_fc512_lr0.05_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/05/2021 00:41:21 - INFO - __main__ -   device: cuda
04/05/2021 00:41:21 - INFO - data_utils.load -   considered 451 (100.00 %) samples out of 451 total samples in ../data/prepared/train.en.tsv
04/05/2021 00:41:21 - INFO - data_utils.load -   considered 20 (100.00 %) samples out of 20 total samples in ../data/prepared/dev.ar.tsv
04/05/2021 00:41:21 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   num train samples: 451
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   num val samples: 20
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   num test samples: None
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   train sentence max len: 113
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   val sentence max len: 241
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   train OOV: 78 (0.37%) out of 20885 running tokens are OOV
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   val OOV: 6 (0.21%) out of 2902 running tokens are OOV
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/05/2021 00:41:22 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
04/05/2021 00:41:23 - INFO - data_utils.preprocess_bert -   there are nearly 24 batches in an epoch
04/05/2021 00:41:25 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/05/2021 00:41:25 - INFO - __main__ -   the model has 404,501 trainable parameters
04/05/2021 00:41:25 - INFO - __main__ -   ðŸŒ‹  starting training..
04/05/2021 00:41:27 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:27 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:27 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:27 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:27 - INFO - __main__ -   Epoch: 0001 | Time: 0m_1s | train_loss: 90.448 | val_loss: 7.536
04/05/2021 00:41:27 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5357142857142858, 'f1': 0.47899955249252946, 'precision': 0.47899955249252946, 'recall': 0.47899955249252946}
04/05/2021 00:41:27 - INFO - __main__ -   	--Found new best val f1
04/05/2021 00:41:27 - INFO - __main__ -   	current patience value: 0/10
04/05/2021 00:41:29 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:29 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:29 - INFO - __main__ -   Epoch: 0002 | Time: 0m_1s | train_loss: 6.497 | val_loss: 7.868
04/05/2021 00:41:29 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4357142857142858, 'f1': 0.24938063063063062, 'precision': 0.24938063063063062, 'recall': 0.24938063063063062}
04/05/2021 00:41:29 - INFO - __main__ -   	current patience value: 1/10
04/05/2021 00:41:30 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:30 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:30 - INFO - __main__ -   Epoch: 0003 | Time: 0m_1s | train_loss: 6.628 | val_loss: 6.963
04/05/2021 00:41:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5857142857142856, 'f1': 0.5361691460283172, 'precision': 0.5361691460283172, 'recall': 0.5361691460283172}
04/05/2021 00:41:30 - INFO - __main__ -   	--Found new best val f1
04/05/2021 00:41:35 - INFO - __main__ -   	current patience value: 0/10
04/05/2021 00:41:36 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:36 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:36 - INFO - __main__ -   Epoch: 0004 | Time: 0m_1s | train_loss: 6.360 | val_loss: 6.330
04/05/2021 00:41:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5428571428571429, 'f1': 0.5102044456578618, 'precision': 0.5102044456578618, 'recall': 0.5102044456578618}
04/05/2021 00:41:36 - INFO - __main__ -   	current patience value: 1/10
04/05/2021 00:41:38 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:38 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:38 - INFO - __main__ -   Epoch: 0005 | Time: 0m_1s | train_loss: 5.668 | val_loss: 10.629
04/05/2021 00:41:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4714285714285715, 'f1': 0.3311074431953553, 'precision': 0.3311074431953553, 'recall': 0.3311074431953553}
04/05/2021 00:41:38 - INFO - __main__ -   	current patience value: 2/10
04/05/2021 00:41:39 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:39 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:39 - INFO - __main__ -   Epoch: 0006 | Time: 0m_1s | train_loss: 5.464 | val_loss: 10.441
04/05/2021 00:41:39 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.42857142857142855, 'f1': 0.23169355580069867, 'precision': 0.23169355580069867, 'recall': 0.23169355580069867}
04/05/2021 00:41:39 - INFO - __main__ -   	current patience value: 3/10
04/05/2021 00:41:41 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:41 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:41 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:41 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:41 - INFO - __main__ -   Epoch: 0007 | Time: 0m_1s | train_loss: 5.374 | val_loss: 5.519
04/05/2021 00:41:41 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5857142857142856, 'f1': 0.5294096788512976, 'precision': 0.5294096788512976, 'recall': 0.5294096788512976}
04/05/2021 00:41:41 - INFO - __main__ -   	current patience value: 4/10
04/05/2021 00:41:42 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:42 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:42 - INFO - __main__ -   Epoch: 0008 | Time: 0m_1s | train_loss: 5.966 | val_loss: 6.888
04/05/2021 00:41:42 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5214285714285714, 'f1': 0.45580010850494046, 'precision': 0.45580010850494046, 'recall': 0.45580010850494046}
04/05/2021 00:41:42 - INFO - __main__ -   	current patience value: 5/10
04/05/2021 00:41:44 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:44 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:44 - INFO - training_utils.postprocess -   1 (1.25 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:44 - INFO - __main__ -   Epoch: 0009 | Time: 0m_1s | train_loss: 5.074 | val_loss: 7.632
04/05/2021 00:41:44 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5214285714285715, 'f1': 0.4462435712435712, 'precision': 0.4462435712435712, 'recall': 0.4462435712435712}
04/05/2021 00:41:44 - INFO - __main__ -   	current patience value: 6/10
04/05/2021 00:41:45 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:45 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:45 - INFO - __main__ -   Epoch: 0010 | Time: 0m_1s | train_loss: 5.409 | val_loss: 9.934
04/05/2021 00:41:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4928571428571429, 'f1': 0.41970780542209113, 'precision': 0.41970780542209113, 'recall': 0.41970780542209113}
04/05/2021 00:41:45 - INFO - __main__ -   	current patience value: 7/10
04/05/2021 00:41:47 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:47 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:47 - INFO - __main__ -   Epoch: 0011 | Time: 0m_1s | train_loss: 5.605 | val_loss: 7.927
04/05/2021 00:41:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6, 'f1': 0.5500442163547754, 'precision': 0.5500442163547754, 'recall': 0.5500442163547754}
04/05/2021 00:41:47 - INFO - __main__ -   	--Found new best val f1
04/05/2021 00:41:54 - INFO - __main__ -   	current patience value: 0/10
04/05/2021 00:41:56 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:56 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:56 - INFO - __main__ -   Epoch: 0012 | Time: 0m_1s | train_loss: 5.646 | val_loss: 9.152
04/05/2021 00:41:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5214285714285715, 'f1': 0.4464780463044987, 'precision': 0.4464780463044987, 'recall': 0.4464780463044987}
04/05/2021 00:41:56 - INFO - __main__ -   	current patience value: 1/10
04/05/2021 00:41:57 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:57 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:57 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:57 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:57 - INFO - __main__ -   Epoch: 0013 | Time: 0m_1s | train_loss: 5.431 | val_loss: 8.190
04/05/2021 00:41:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5571428571428572, 'f1': 0.4987776688274736, 'precision': 0.4987776688274736, 'recall': 0.4987776688274736}
04/05/2021 00:41:57 - INFO - __main__ -   	current patience value: 2/10
04/05/2021 00:41:59 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:41:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:59 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:41:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:41:59 - INFO - __main__ -   Epoch: 0014 | Time: 0m_1s | train_loss: 5.241 | val_loss: 7.179
04/05/2021 00:41:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5428571428571429, 'f1': 0.520154131582703, 'precision': 0.520154131582703, 'recall': 0.520154131582703}
04/05/2021 00:41:59 - INFO - __main__ -   	current patience value: 3/10
04/05/2021 00:42:00 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:00 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:00 - INFO - __main__ -   Epoch: 0015 | Time: 0m_1s | train_loss: 5.182 | val_loss: 16.707
04/05/2021 00:42:00 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4571428571428572, 'f1': 0.31263058623672435, 'precision': 0.31263058623672435, 'recall': 0.31263058623672435}
04/05/2021 00:42:00 - INFO - __main__ -   	current patience value: 4/10
04/05/2021 00:42:02 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:02 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:02 - INFO - __main__ -   Epoch: 0016 | Time: 0m_1s | train_loss: 5.024 | val_loss: 12.909
04/05/2021 00:42:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5000000000000001, 'f1': 0.39309209564848663, 'precision': 0.39309209564848663, 'recall': 0.39309209564848663}
04/05/2021 00:42:02 - INFO - __main__ -   	current patience value: 5/10
04/05/2021 00:42:03 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:03 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:03 - INFO - __main__ -   Epoch: 0017 | Time: 0m_1s | train_loss: 5.337 | val_loss: 13.236
04/05/2021 00:42:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.49285714285714294, 'f1': 0.3804891054891055, 'precision': 0.3804891054891055, 'recall': 0.3804891054891055}
04/05/2021 00:42:03 - INFO - __main__ -   	current patience value: 6/10
04/05/2021 00:42:05 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:05 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:05 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:05 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:05 - INFO - __main__ -   Epoch: 0018 | Time: 0m_1s | train_loss: 5.247 | val_loss: 7.410
04/05/2021 00:42:05 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5642857142857143, 'f1': 0.5137876019012684, 'precision': 0.5137876019012684, 'recall': 0.5137876019012684}
04/05/2021 00:42:05 - INFO - __main__ -   	current patience value: 7/10
04/05/2021 00:42:06 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:06 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:06 - INFO - __main__ -   Epoch: 0019 | Time: 0m_1s | train_loss: 5.201 | val_loss: 14.292
04/05/2021 00:42:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4714285714285715, 'f1': 0.32051578307217404, 'precision': 0.32051578307217404, 'recall': 0.32051578307217404}
04/05/2021 00:42:06 - INFO - __main__ -   	current patience value: 8/10
04/05/2021 00:42:07 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:07 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:07 - INFO - __main__ -   Epoch: 0020 | Time: 0m_1s | train_loss: 5.100 | val_loss: 16.325
04/05/2021 00:42:07 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.42142857142857143, 'f1': 0.2177054605626034, 'precision': 0.2177054605626034, 'recall': 0.2177054605626034}
04/05/2021 00:42:07 - INFO - __main__ -   	current patience value: 9/10
04/05/2021 00:42:09 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:09 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:09 - INFO - __main__ -   Epoch: 0021 | Time: 0m_1s | train_loss: 5.035 | val_loss: 14.772
04/05/2021 00:42:09 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.35, 'f1': 0.16902829313543602, 'precision': 0.16902829313543602, 'recall': 0.16902829313543602}
04/05/2021 00:42:09 - INFO - __main__ -   	current patience value: 10/10
04/05/2021 00:42:09 - INFO - __main__ -   	--STOPPING EARLY
04/05/2021 00:42:09 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/enar/bert-base-uncased/zero_fc512_lr0.05_frozen
04/05/2021 00:42:09 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/enar/bert-base-uncased/zero_fc512_lr0.05_frozen
04/05/2021 00:42:09 - INFO - training_utils.train_loop -   postprocessing targets..
04/05/2021 00:42:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:09 - INFO - training_utils.train_loop -   postprocessing predictions..
04/05/2021 00:42:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 80 q2, q3, q4, q5 predictions are changed during postprocessing
04/05/2021 00:42:09 - INFO - __main__ -   best_val_loss: 7.927
04/05/2021 00:42:09 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6, 'f1': 0.5500442163547754, 'precision': 0.5500442163547754, 'recall': 0.5500442163547754}
