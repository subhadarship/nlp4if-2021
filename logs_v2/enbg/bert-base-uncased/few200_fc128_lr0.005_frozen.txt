04/04/2021 20:47:10 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/04/2021 20:47:10 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all,bg_200
	trglang: bg
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/enbg/bert-base-uncased/few200_fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/few200_fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/04/2021 20:47:10 - INFO - __main__ -   device: cuda
04/04/2021 20:47:10 - INFO - data_utils.load -   considered 451 (100.00 %) samples out of 451 total samples in ../data/prepared/train.en.tsv
04/04/2021 20:47:10 - INFO - data_utils.load -   considered 200 (6.67 %) samples out of 3000 total samples in ../data/prepared/train.bg.tsv
04/04/2021 20:47:10 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/prepared/dev.bg.tsv
04/04/2021 20:47:10 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/04/2021 20:47:10 - WARNING - data_utils.bert_data -   trimming sentence 485 of length 1441 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/04/2021 20:47:10 - WARNING - data_utils.bert_data -   trimming sentence 545 of length 7376 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   num train samples: 651
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   num val samples: 350
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   num test samples: None
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   val sentence max len: 246
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   train OOV: 120 (0.28%) out of 43201 running tokens are OOV
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   val OOV: 7 (0.02%) out of 32956 running tokens are OOV
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 20:47:11 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
04/04/2021 20:47:13 - INFO - data_utils.preprocess_bert -   there are nearly 50 batches in an epoch
04/04/2021 20:47:15 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/04/2021 20:47:15 - INFO - __main__ -   the model has 101,141 trainable parameters
04/04/2021 20:47:15 - INFO - __main__ -   ðŸŒ‹  starting training..
04/04/2021 20:47:20 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:47:20 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:20 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:47:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:20 - INFO - __main__ -   Epoch: 0001 | Time: 0m_5s | train_loss: 6.009 | val_loss: 4.084
04/04/2021 20:47:20 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8314285714285715, 'f1': 0.8037697377017798, 'precision': 0.8037697377017798, 'recall': 0.8037697377017798}
04/04/2021 20:47:20 - INFO - __main__ -   	--Found new best val f1
04/04/2021 20:47:21 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 20:47:26 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:47:26 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:26 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:47:26 - INFO - training_utils.postprocess -   8 (0.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:26 - INFO - __main__ -   Epoch: 0002 | Time: 0m_5s | train_loss: 5.166 | val_loss: 5.549
04/04/2021 20:47:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6608163265306123, 'f1': 0.6876838422034137, 'precision': 0.6876838422034137, 'recall': 0.6876838422034137}
04/04/2021 20:47:26 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 20:47:32 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:47:32 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:32 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:47:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:32 - INFO - __main__ -   Epoch: 0003 | Time: 0m_5s | train_loss: 5.010 | val_loss: 3.544
04/04/2021 20:47:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
04/04/2021 20:47:32 - INFO - __main__ -   	current patience value: 2/10
04/04/2021 20:47:38 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:47:38 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:38 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:47:38 - INFO - training_utils.postprocess -   516 (36.86 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:38 - INFO - __main__ -   Epoch: 0004 | Time: 0m_5s | train_loss: 4.750 | val_loss: 5.919
04/04/2021 20:47:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5065306122448979, 'f1': 0.5390509563331537, 'precision': 0.5390509563331537, 'recall': 0.5390509563331537}
04/04/2021 20:47:38 - INFO - __main__ -   	current patience value: 3/10
04/04/2021 20:47:44 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:47:44 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:44 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:47:44 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:44 - INFO - __main__ -   Epoch: 0005 | Time: 0m_5s | train_loss: 4.773 | val_loss: 5.957
04/04/2021 20:47:44 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5448979591836735, 'f1': 0.5596490546394159, 'precision': 0.5596490546394159, 'recall': 0.5596490546394159}
04/04/2021 20:47:44 - INFO - __main__ -   	current patience value: 4/10
04/04/2021 20:47:49 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:47:49 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:49 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:47:49 - INFO - training_utils.postprocess -   7 (0.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:47:49 - INFO - __main__ -   Epoch: 0006 | Time: 0m_5s | train_loss: 4.500 | val_loss: 3.860
04/04/2021 20:47:49 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8379591836734693, 'f1': 0.8116025583215071, 'precision': 0.8116025583215071, 'recall': 0.8116025583215071}
04/04/2021 20:47:49 - INFO - __main__ -   	--Found new best val f1
04/04/2021 20:47:56 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 20:48:01 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:01 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:01 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:01 - INFO - training_utils.postprocess -   302 (21.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:01 - INFO - __main__ -   Epoch: 0007 | Time: 0m_5s | train_loss: 4.421 | val_loss: 5.580
04/04/2021 20:48:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6514285714285715, 'f1': 0.6836664539937943, 'precision': 0.6836664539937943, 'recall': 0.6836664539937943}
04/04/2021 20:48:01 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 20:48:07 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:07 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:07 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:07 - INFO - training_utils.postprocess -   43 (3.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:07 - INFO - __main__ -   Epoch: 0008 | Time: 0m_5s | train_loss: 4.366 | val_loss: 7.073
04/04/2021 20:48:07 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.37551020408163266, 'f1': 0.34998148934574996, 'precision': 0.34998148934574996, 'recall': 0.34998148934574996}
04/04/2021 20:48:07 - INFO - __main__ -   	current patience value: 2/10
04/04/2021 20:48:13 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:13 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:13 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:13 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:13 - INFO - __main__ -   Epoch: 0009 | Time: 0m_5s | train_loss: 4.261 | val_loss: 3.385
04/04/2021 20:48:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8351020408163266, 'f1': 0.808782622807552, 'precision': 0.808782622807552, 'recall': 0.808782622807552}
04/04/2021 20:48:13 - INFO - __main__ -   	current patience value: 3/10
04/04/2021 20:48:18 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:18 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:18 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:18 - INFO - training_utils.postprocess -   8 (0.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:18 - INFO - __main__ -   Epoch: 0010 | Time: 0m_5s | train_loss: 4.139 | val_loss: 3.639
04/04/2021 20:48:18 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8326530612244898, 'f1': 0.8098389752755203, 'precision': 0.8098389752755203, 'recall': 0.8098389752755203}
04/04/2021 20:48:18 - INFO - __main__ -   	current patience value: 4/10
04/04/2021 20:48:24 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:24 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:24 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:24 - INFO - training_utils.postprocess -   16 (1.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:24 - INFO - __main__ -   Epoch: 0011 | Time: 0m_5s | train_loss: 4.042 | val_loss: 3.537
04/04/2021 20:48:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8318367346938775, 'f1': 0.8066811947264511, 'precision': 0.8066811947264511, 'recall': 0.8066811947264511}
04/04/2021 20:48:24 - INFO - __main__ -   	current patience value: 5/10
04/04/2021 20:48:30 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:30 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:30 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:30 - INFO - training_utils.postprocess -   56 (4.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:30 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 4.086 | val_loss: 4.964
04/04/2021 20:48:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6551020408163265, 'f1': 0.6864932151971113, 'precision': 0.6864932151971113, 'recall': 0.6864932151971113}
04/04/2021 20:48:30 - INFO - __main__ -   	current patience value: 6/10
04/04/2021 20:48:36 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:36 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:36 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:36 - INFO - training_utils.postprocess -   88 (6.29 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:36 - INFO - __main__ -   Epoch: 0013 | Time: 0m_5s | train_loss: 3.861 | val_loss: 3.968
04/04/2021 20:48:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7853061224489796, 'f1': 0.7818603756189731, 'precision': 0.7818603756189731, 'recall': 0.7818603756189731}
04/04/2021 20:48:36 - INFO - __main__ -   	current patience value: 7/10
04/04/2021 20:48:41 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:41 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:41 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:41 - INFO - training_utils.postprocess -   93 (6.64 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:41 - INFO - __main__ -   Epoch: 0014 | Time: 0m_5s | train_loss: 3.849 | val_loss: 4.346
04/04/2021 20:48:41 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.709795918367347, 'f1': 0.7323134210056649, 'precision': 0.7323134210056649, 'recall': 0.7323134210056649}
04/04/2021 20:48:41 - INFO - __main__ -   	current patience value: 8/10
04/04/2021 20:48:47 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:47 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:47 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:47 - INFO - __main__ -   Epoch: 0015 | Time: 0m_5s | train_loss: 3.637 | val_loss: 3.792
04/04/2021 20:48:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.830204081632653, 'f1': 0.8052733444428158, 'precision': 0.8052733444428158, 'recall': 0.8052733444428158}
04/04/2021 20:48:47 - INFO - __main__ -   	current patience value: 9/10
04/04/2021 20:48:53 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:53 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:53 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:53 - INFO - training_utils.postprocess -   34 (2.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:53 - INFO - __main__ -   Epoch: 0016 | Time: 0m_5s | train_loss: 3.881 | val_loss: 4.023
04/04/2021 20:48:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7991836734693877, 'f1': 0.7907045149142968, 'precision': 0.7907045149142968, 'recall': 0.7907045149142968}
04/04/2021 20:48:53 - INFO - __main__ -   	current patience value: 10/10
04/04/2021 20:48:53 - INFO - __main__ -   	--STOPPING EARLY
04/04/2021 20:48:53 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/few200_fc128_lr0.005_frozen
04/04/2021 20:48:53 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/few200_fc128_lr0.005_frozen
04/04/2021 20:48:56 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 20:48:56 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:56 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 20:48:56 - INFO - training_utils.postprocess -   7 (0.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 20:48:56 - INFO - __main__ -   best_val_loss: 3.860
04/04/2021 20:48:56 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.8379591836734693, 'f1': 0.8116025583215071, 'precision': 0.8116025583215071, 'recall': 0.8116025583215071}
