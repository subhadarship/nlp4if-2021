04/04/2021 21:04:20 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/04/2021 21:04:20 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all,bg_50
	trglang: bg
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/enbg/bert-base-uncased/few50_fc128_lr0.05_frozen.txt
	random_seed: 123
	lr: 0.05
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/few50_fc128_lr0.05_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/04/2021 21:04:20 - INFO - __main__ -   device: cuda
04/04/2021 21:04:20 - INFO - data_utils.load -   considered 451 (100.00 %) samples out of 451 total samples in ../data/prepared/train.en.tsv
04/04/2021 21:04:20 - INFO - data_utils.load -   considered 50 (1.67 %) samples out of 3000 total samples in ../data/prepared/train.bg.tsv
04/04/2021 21:04:20 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/prepared/dev.bg.tsv
04/04/2021 21:04:20 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/04/2021 21:04:20 - WARNING - data_utils.bert_data -   trimming sentence 485 of length 1441 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   num train samples: 501
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   num val samples: 350
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   num test samples: None
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   val sentence max len: 246
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   train OOV: 85 (0.32%) out of 26659 running tokens are OOV
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   val OOV: 7 (0.02%) out of 32956 running tokens are OOV
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:04:21 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
04/04/2021 21:04:23 - INFO - data_utils.preprocess_bert -   there are nearly 32 batches in an epoch
04/04/2021 21:04:25 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/04/2021 21:04:25 - INFO - __main__ -   the model has 101,141 trainable parameters
04/04/2021 21:04:25 - INFO - __main__ -   ðŸŒ‹  starting training..
04/04/2021 21:04:29 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:04:29 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:29 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:04:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:29 - INFO - __main__ -   Epoch: 0001 | Time: 0m_4s | train_loss: 21.832 | val_loss: 26.591
04/04/2021 21:04:29 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
04/04/2021 21:04:29 - INFO - __main__ -   	--Found new best val f1
04/04/2021 21:04:30 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 21:04:34 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:04:34 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:34 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:04:34 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:34 - INFO - __main__ -   Epoch: 0002 | Time: 0m_4s | train_loss: 7.196 | val_loss: 5.402
04/04/2021 21:04:34 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6383673469387755, 'f1': 0.5880238617924356, 'precision': 0.5880238617924356, 'recall': 0.5880238617924356}
04/04/2021 21:04:34 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 21:04:39 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:04:39 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:39 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:04:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:39 - INFO - __main__ -   Epoch: 0003 | Time: 0m_4s | train_loss: 6.119 | val_loss: 5.316
04/04/2021 21:04:39 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7391836734693876, 'f1': 0.7062325203074449, 'precision': 0.7062325203074449, 'recall': 0.7062325203074449}
04/04/2021 21:04:39 - INFO - __main__ -   	current patience value: 2/10
04/04/2021 21:04:44 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:04:44 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:44 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:04:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:44 - INFO - __main__ -   Epoch: 0004 | Time: 0m_4s | train_loss: 5.750 | val_loss: 5.265
04/04/2021 21:04:44 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5289795918367347, 'f1': 0.46320981717984894, 'precision': 0.46320981717984894, 'recall': 0.46320981717984894}
04/04/2021 21:04:44 - INFO - __main__ -   	current patience value: 3/10
04/04/2021 21:04:49 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:04:49 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:49 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:04:49 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:49 - INFO - __main__ -   Epoch: 0005 | Time: 0m_4s | train_loss: 5.555 | val_loss: 5.819
04/04/2021 21:04:49 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.416734693877551, 'f1': 0.3284304171628939, 'precision': 0.3284304171628939, 'recall': 0.3284304171628939}
04/04/2021 21:04:49 - INFO - __main__ -   	current patience value: 4/10
04/04/2021 21:04:53 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:04:53 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:53 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:04:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:53 - INFO - __main__ -   Epoch: 0006 | Time: 0m_4s | train_loss: 5.581 | val_loss: 5.574
04/04/2021 21:04:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.41714285714285715, 'f1': 0.33203758425660246, 'precision': 0.33203758425660246, 'recall': 0.33203758425660246}
04/04/2021 21:04:53 - INFO - __main__ -   	current patience value: 5/10
04/04/2021 21:04:58 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:04:58 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:58 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:04:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:04:58 - INFO - __main__ -   Epoch: 0007 | Time: 0m_4s | train_loss: 5.572 | val_loss: 5.862
04/04/2021 21:04:58 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.3024489795918367, 'f1': 0.20922330848210105, 'precision': 0.20922330848210105, 'recall': 0.20922330848210105}
04/04/2021 21:04:58 - INFO - __main__ -   	current patience value: 6/10
04/04/2021 21:05:03 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:05:03 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:03 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:05:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:03 - INFO - __main__ -   Epoch: 0008 | Time: 0m_4s | train_loss: 5.128 | val_loss: 5.556
04/04/2021 21:05:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4293877551020408, 'f1': 0.3607870783721915, 'precision': 0.3607870783721915, 'recall': 0.3607870783721915}
04/04/2021 21:05:03 - INFO - __main__ -   	current patience value: 7/10
04/04/2021 21:05:08 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:05:08 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:08 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:05:08 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:08 - INFO - __main__ -   Epoch: 0009 | Time: 0m_4s | train_loss: 5.751 | val_loss: 5.505
04/04/2021 21:05:08 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.416734693877551, 'f1': 0.3284304171628939, 'precision': 0.3284304171628939, 'recall': 0.3284304171628939}
04/04/2021 21:05:08 - INFO - __main__ -   	current patience value: 8/10
04/04/2021 21:05:13 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:05:13 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:13 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:05:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:13 - INFO - __main__ -   Epoch: 0010 | Time: 0m_4s | train_loss: 5.769 | val_loss: 5.925
04/04/2021 21:05:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.3024489795918367, 'f1': 0.20922330848210105, 'precision': 0.20922330848210105, 'recall': 0.20922330848210105}
04/04/2021 21:05:13 - INFO - __main__ -   	current patience value: 9/10
04/04/2021 21:05:17 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:05:17 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:17 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:05:17 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:17 - INFO - __main__ -   Epoch: 0011 | Time: 0m_4s | train_loss: 5.726 | val_loss: 5.778
04/04/2021 21:05:17 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.416734693877551, 'f1': 0.3284304171628939, 'precision': 0.3284304171628939, 'recall': 0.3284304171628939}
04/04/2021 21:05:17 - INFO - __main__ -   	current patience value: 10/10
04/04/2021 21:05:17 - INFO - __main__ -   	--STOPPING EARLY
04/04/2021 21:05:17 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/few50_fc128_lr0.05_frozen
04/04/2021 21:05:18 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/few50_fc128_lr0.05_frozen
04/04/2021 21:05:21 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:05:21 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:21 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:05:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:05:21 - INFO - __main__ -   best_val_loss: 26.591
04/04/2021 21:05:21 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
