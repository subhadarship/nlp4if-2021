05/05/2022 10:51:07 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 10:51:07 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: bg.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enbg/zero/translate_test_bert/fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enbg/zero/translate_test_bert/fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 10:51:08 - INFO - __main__ -   device: cuda
05/05/2022 10:51:08 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 10:51:08 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/translations/dev.bg.en.tsv
05/05/2022 10:51:08 - INFO - data_utils.load -   considered 357 (100.00 %) samples out of 357 total samples in ../data/translations/test.bg.en.tsv
05/05/2022 10:51:08 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   num val samples: 350
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   num test samples: 357
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   val sentence max len: 95
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   test sentence max len: 100
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   val OOV: 0 (0.00%) out of 14823 running tokens are OOV
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   test OOV: 0 (0.00%) out of 15387 running tokens are OOV
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:51:09 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 10:51:11 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 10:51:13 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 10:51:13 - INFO - __main__ -   the model has 101,141 trainable parameters
05/05/2022 10:51:13 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 10:51:17 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:17 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:17 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:17 - INFO - training_utils.postprocess -   8 (0.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:17 - INFO - __main__ -   Epoch: 0001 | Time: 0m_4s | train_loss: 5.228 | val_loss: 3.641
05/05/2022 10:51:17 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8012244897959183, 'f1': 0.7953827294171418, 'precision': 0.7679342662025419, 'recall': 0.8357084443795406}
05/05/2022 10:51:17 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:51:17 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:51:21 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:21 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:21 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:21 - INFO - __main__ -   Epoch: 0002 | Time: 0m_4s | train_loss: 4.543 | val_loss: 3.774
05/05/2022 10:51:21 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8036734693877552, 'f1': 0.7997634909460086, 'precision': 0.8051329887205464, 'recall': 0.8190732965816022}
05/05/2022 10:51:21 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:51:22 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:51:26 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:26 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:26 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:26 - INFO - training_utils.postprocess -   4 (0.29 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:26 - INFO - __main__ -   Epoch: 0003 | Time: 0m_4s | train_loss: 4.088 | val_loss: 4.354
05/05/2022 10:51:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.743265306122449, 'f1': 0.7641770135996422, 'precision': 0.8130784829245912, 'recall': 0.7440620398427706}
05/05/2022 10:51:26 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:51:30 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:30 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:30 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:30 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:30 - INFO - __main__ -   Epoch: 0004 | Time: 0m_4s | train_loss: 3.920 | val_loss: 4.072
05/05/2022 10:51:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7571428571428571, 'f1': 0.7752905865429135, 'precision': 0.7963063536563307, 'recall': 0.7675189336318906}
05/05/2022 10:51:30 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:51:35 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:35 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:35 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:35 - INFO - __main__ -   Epoch: 0005 | Time: 0m_4s | train_loss: 4.068 | val_loss: 3.854
05/05/2022 10:51:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.786530612244898, 'f1': 0.793828615393526, 'precision': 0.786926088647853, 'recall': 0.8055801581216864}
05/05/2022 10:51:35 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:51:39 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:39 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:39 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:39 - INFO - training_utils.postprocess -   6 (0.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:39 - INFO - __main__ -   Epoch: 0006 | Time: 0m_4s | train_loss: 4.012 | val_loss: 4.451
05/05/2022 10:51:39 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7273469387755103, 'f1': 0.7539903928316871, 'precision': 0.7978481031942615, 'recall': 0.7351031969138282}
05/05/2022 10:51:39 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:51:43 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:43 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:43 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:43 - INFO - training_utils.postprocess -   10 (0.71 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:43 - INFO - __main__ -   Epoch: 0007 | Time: 0m_4s | train_loss: 3.764 | val_loss: 4.385
05/05/2022 10:51:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7653061224489797, 'f1': 0.7746830150572891, 'precision': 0.7958797561057969, 'recall': 0.7714800076261871}
05/05/2022 10:51:43 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 10:51:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:47 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:47 - INFO - __main__ -   Epoch: 0008 | Time: 0m_4s | train_loss: 3.457 | val_loss: 5.714
05/05/2022 10:51:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6857142857142857, 'f1': 0.7207892101856828, 'precision': 0.8042306195632725, 'recall': 0.6775830057723746}
05/05/2022 10:51:47 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 10:51:51 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:51 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:51 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:51 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:51 - INFO - __main__ -   Epoch: 0009 | Time: 0m_4s | train_loss: 3.542 | val_loss: 4.137
05/05/2022 10:51:51 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7873469387755102, 'f1': 0.7852146842392586, 'precision': 0.7741930427090199, 'recall': 0.8079441746883608}
05/05/2022 10:51:51 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 10:51:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:55 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:55 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:55 - INFO - __main__ -   Epoch: 0010 | Time: 0m_4s | train_loss: 3.447 | val_loss: 4.448
05/05/2022 10:51:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7338775510204083, 'f1': 0.7620914444091517, 'precision': 0.7890720486320412, 'recall': 0.7438483646290954}
05/05/2022 10:51:55 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 10:51:59 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:59 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:59 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:59 - INFO - training_utils.postprocess -   6 (0.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:59 - INFO - __main__ -   Epoch: 0011 | Time: 0m_4s | train_loss: 3.284 | val_loss: 5.873
05/05/2022 10:51:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.610204081632653, 'f1': 0.6481082592312051, 'precision': 0.8092140680873434, 'recall': 0.6019815105529391}
05/05/2022 10:51:59 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 10:52:04 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:52:04 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:04 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:52:04 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:04 - INFO - __main__ -   Epoch: 0012 | Time: 0m_4s | train_loss: 3.344 | val_loss: 6.041
05/05/2022 10:52:04 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6681632653061225, 'f1': 0.7049726115753211, 'precision': 0.7982831358534376, 'recall': 0.6608362235770874}
05/05/2022 10:52:04 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 10:52:04 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 10:52:04 - INFO - __main__ -   load checkpoint from ../models/translation/enbg/zero/translate_test_bert/fc128_lr0.005_frozen
05/05/2022 10:52:04 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enbg/zero/translate_test_bert/fc128_lr0.005_frozen
05/05/2022 10:52:05 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:52:05 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:05 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:52:05 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:05 - INFO - __main__ -   best_val_loss: 3.774
05/05/2022 10:52:05 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.8036734693877552, 'f1': 0.7997634909460086, 'precision': 0.8051329887205464, 'recall': 0.8190732965816022}
05/05/2022 10:52:05 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 10:52:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:52:06 - INFO - training_utils.postprocess -   19 (1.33 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:52:06 - INFO - training_utils.postprocess -   7 (0.49 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:07 - INFO - __main__ -   test_loss: 3.769
05/05/2022 10:52:07 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.7747098839535814, 'f1': 0.7645060259812002, 'precision': 0.7811907416723484, 'recall': 0.7805608882549228}
