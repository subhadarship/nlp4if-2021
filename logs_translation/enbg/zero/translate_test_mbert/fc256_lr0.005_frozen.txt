05/05/2022 11:07:35 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:07:35 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: bg.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enbg/zero/translate_test_mbert/fc256_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enbg/zero/translate_test_mbert/fc256_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:07:35 - INFO - __main__ -   device: cuda
05/05/2022 11:07:35 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:07:35 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/translations/dev.bg.en.tsv
05/05/2022 11:07:35 - INFO - data_utils.load -   considered 357 (100.00 %) samples out of 357 total samples in ../data/translations/test.bg.en.tsv
05/05/2022 11:07:35 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   num val samples: 350
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   num test samples: 357
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   val sentence max len: 101
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   test sentence max len: 108
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   val OOV: 0 (0.00%) out of 16032 running tokens are OOV
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   test OOV: 0 (0.00%) out of 16688 running tokens are OOV
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:07:36 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:07:38 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 11:07:41 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:07:41 - INFO - __main__ -   the model has 202,261 trainable parameters
05/05/2022 11:07:41 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:07:45 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:07:45 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:07:45 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:07:45 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:07:46 - INFO - __main__ -   Epoch: 0001 | Time: 0m_4s | train_loss: 5.743 | val_loss: 4.551
05/05/2022 11:07:46 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7922448979591836, 'f1': 0.7860843764117947, 'precision': 0.7850522487651128, 'recall': 0.8038770642425127}
05/05/2022 11:07:46 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:07:46 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:07:51 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:07:51 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:07:51 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:07:51 - INFO - training_utils.postprocess -   106 (7.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:07:51 - INFO - __main__ -   Epoch: 0002 | Time: 0m_4s | train_loss: 4.839 | val_loss: 5.129
05/05/2022 11:07:51 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.730204081632653, 'f1': 0.7453460896164487, 'precision': 0.7843098337908417, 'recall': 0.7271102430238642}
05/05/2022 11:07:51 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:07:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:07:55 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:07:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:07:55 - INFO - training_utils.postprocess -   21 (1.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:07:55 - INFO - __main__ -   Epoch: 0003 | Time: 0m_4s | train_loss: 4.776 | val_loss: 4.406
05/05/2022 11:07:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8436734693877551, 'f1': 0.8162351109012952, 'precision': 0.7734464174567997, 'recall': 0.8678778714825227}
05/05/2022 11:07:55 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:07:57 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:08:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:02 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:02 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:02 - INFO - __main__ -   Epoch: 0004 | Time: 0m_4s | train_loss: 4.753 | val_loss: 4.301
05/05/2022 11:08:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.756734693877551, 'f1': 0.7709125310256475, 'precision': 0.7976417989992793, 'recall': 0.7650832795849407}
05/05/2022 11:08:02 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:08:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:06 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:06 - INFO - training_utils.postprocess -   23 (1.64 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:06 - INFO - __main__ -   Epoch: 0005 | Time: 0m_4s | train_loss: 4.590 | val_loss: 4.180
05/05/2022 11:08:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.797142857142857, 'f1': 0.7920582608185792, 'precision': 0.7898489438358458, 'recall': 0.8097755142605642}
05/05/2022 11:08:06 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:08:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:11 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:11 - INFO - __main__ -   Epoch: 0006 | Time: 0m_4s | train_loss: 4.447 | val_loss: 3.505
05/05/2022 11:08:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8428571428571429, 'f1': 0.8178063597118834, 'precision': 0.777022755694998, 'recall': 0.8769600923255408}
05/05/2022 11:08:11 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:08:13 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:08:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:18 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:18 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:18 - INFO - __main__ -   Epoch: 0007 | Time: 0m_4s | train_loss: 4.369 | val_loss: 3.893
05/05/2022 11:08:18 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8008163265306123, 'f1': 0.7943434236352583, 'precision': 0.7861327857336768, 'recall': 0.813477054506955}
05/05/2022 11:08:18 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:08:22 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:22 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:22 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:22 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:22 - INFO - __main__ -   Epoch: 0008 | Time: 0m_4s | train_loss: 4.254 | val_loss: 4.503
05/05/2022 11:08:22 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.786530612244898, 'f1': 0.7864146932750903, 'precision': 0.788981213146222, 'recall': 0.7948561976967292}
05/05/2022 11:08:22 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:08:27 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:27 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:27 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:27 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:27 - INFO - __main__ -   Epoch: 0009 | Time: 0m_4s | train_loss: 4.145 | val_loss: 6.584
05/05/2022 11:08:27 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.49183673469387756, 'f1': 0.5202651597686808, 'precision': 0.8141936698638295, 'recall': 0.45396456256921375}
05/05/2022 11:08:27 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:08:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:31 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:31 - INFO - training_utils.postprocess -   20 (1.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:31 - INFO - __main__ -   Epoch: 0010 | Time: 0m_4s | train_loss: 4.282 | val_loss: 5.725
05/05/2022 11:08:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6048979591836735, 'f1': 0.6417964776301676, 'precision': 0.801322040914128, 'recall': 0.5837787959548757}
05/05/2022 11:08:31 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:08:36 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:36 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:36 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:36 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:36 - INFO - __main__ -   Epoch: 0011 | Time: 0m_4s | train_loss: 4.102 | val_loss: 4.677
05/05/2022 11:08:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7093877551020409, 'f1': 0.7314721380339334, 'precision': 0.8077608569423622, 'recall': 0.7090987307266376}
05/05/2022 11:08:36 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:08:41 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:41 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:41 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:41 - INFO - training_utils.postprocess -   23 (1.64 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:41 - INFO - __main__ -   Epoch: 0012 | Time: 0m_4s | train_loss: 4.256 | val_loss: 6.253
05/05/2022 11:08:41 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.576734693877551, 'f1': 0.6187304111249213, 'precision': 0.8229991167504151, 'recall': 0.5524819385118388}
05/05/2022 11:08:41 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:08:45 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:45 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:45 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:45 - INFO - training_utils.postprocess -   8 (0.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:45 - INFO - __main__ -   Epoch: 0013 | Time: 0m_4s | train_loss: 3.955 | val_loss: 5.443
05/05/2022 11:08:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6559183673469388, 'f1': 0.6937716641032532, 'precision': 0.7995021119536512, 'recall': 0.6457063958558974}
05/05/2022 11:08:45 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:08:50 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:50 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:50 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:50 - INFO - training_utils.postprocess -   17 (1.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:50 - INFO - __main__ -   Epoch: 0014 | Time: 0m_4s | train_loss: 4.052 | val_loss: 4.675
05/05/2022 11:08:50 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7257142857142858, 'f1': 0.7416002647417532, 'precision': 0.8003080288821487, 'recall': 0.7259358913511738}
05/05/2022 11:08:50 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:08:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:55 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:55 - INFO - training_utils.postprocess -   24 (1.71 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:55 - INFO - __main__ -   Epoch: 0015 | Time: 0m_4s | train_loss: 3.822 | val_loss: 5.164
05/05/2022 11:08:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.740408163265306, 'f1': 0.7532670637261629, 'precision': 0.7937282548489595, 'recall': 0.7417948109476349}
05/05/2022 11:08:55 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:08:59 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:08:59 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:59 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:08:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:08:59 - INFO - __main__ -   Epoch: 0016 | Time: 0m_4s | train_loss: 4.025 | val_loss: 4.328
05/05/2022 11:08:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7179591836734692, 'f1': 0.756558470326031, 'precision': 0.7919140506186402, 'recall': 0.7342985733351182}
05/05/2022 11:08:59 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:08:59 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:08:59 - INFO - __main__ -   load checkpoint from ../models/translation/enbg/zero/translate_test_mbert/fc256_lr0.005_frozen
05/05/2022 11:09:00 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enbg/zero/translate_test_mbert/fc256_lr0.005_frozen
05/05/2022 11:09:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:09:01 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:09:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:09:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:09:01 - INFO - __main__ -   best_val_loss: 3.505
05/05/2022 11:09:01 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.8428571428571429, 'f1': 0.8178063597118834, 'precision': 0.777022755694998, 'recall': 0.8769600923255408}
05/05/2022 11:09:01 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:09:03 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:09:03 - INFO - training_utils.postprocess -   19 (1.33 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:09:03 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:09:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:09:03 - INFO - __main__ -   test_loss: 3.801
05/05/2022 11:09:03 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.8079231692677071, 'f1': 0.7770372777870164, 'precision': 0.747847583233549, 'recall': 0.8347165836180052}
