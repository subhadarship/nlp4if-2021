05/05/2022 11:18:36 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:18:36 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: bg.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enbg/zero/translate_test_mbert/fc512_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enbg/zero/translate_test_mbert/fc512_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:18:36 - INFO - __main__ -   device: cuda
05/05/2022 11:18:36 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:18:36 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/translations/dev.bg.en.tsv
05/05/2022 11:18:36 - INFO - data_utils.load -   considered 357 (100.00 %) samples out of 357 total samples in ../data/translations/test.bg.en.tsv
05/05/2022 11:18:36 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   num val samples: 350
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   num test samples: 357
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   val sentence max len: 101
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   test sentence max len: 108
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   val OOV: 0 (0.00%) out of 16032 running tokens are OOV
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   test OOV: 0 (0.00%) out of 16688 running tokens are OOV
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:18:37 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:18:39 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 11:18:42 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:18:42 - INFO - __main__ -   the model has 404,501 trainable parameters
05/05/2022 11:18:42 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:18:46 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:46 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:46 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:47 - INFO - __main__ -   Epoch: 0001 | Time: 0m_4s | train_loss: 5.592 | val_loss: 3.825
05/05/2022 11:18:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.830204081632653, 'f1': 0.8032660359128135, 'precision': 0.7372566180517585, 'recall': 0.8844791273694929}
05/05/2022 11:18:47 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:18:47 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:18:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:52 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:52 - INFO - training_utils.postprocess -   18 (1.29 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:52 - INFO - __main__ -   Epoch: 0002 | Time: 0m_4s | train_loss: 5.011 | val_loss: 4.065
05/05/2022 11:18:52 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.833469387755102, 'f1': 0.8079153945814689, 'precision': 0.7559021677050808, 'recall': 0.8736112023819665}
05/05/2022 11:18:52 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:18:54 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:18:59 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:59 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:59 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:59 - INFO - training_utils.postprocess -   83 (5.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:59 - INFO - __main__ -   Epoch: 0003 | Time: 0m_4s | train_loss: 4.792 | val_loss: 4.857
05/05/2022 11:18:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.746530612244898, 'f1': 0.7554707516814653, 'precision': 0.789769057462907, 'recall': 0.741025438201518}
05/05/2022 11:18:59 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:19:03 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:03 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:03 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:03 - INFO - __main__ -   Epoch: 0004 | Time: 0m_4s | train_loss: 4.650 | val_loss: 3.687
05/05/2022 11:19:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8293877551020408, 'f1': 0.8107262034287573, 'precision': 0.7905547838467519, 'recall': 0.856965751118575}
05/05/2022 11:19:03 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:19:05 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:19:10 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:10 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:10 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:10 - INFO - training_utils.postprocess -   7 (0.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:10 - INFO - __main__ -   Epoch: 0005 | Time: 0m_4s | train_loss: 4.574 | val_loss: 4.197
05/05/2022 11:19:10 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7844897959183674, 'f1': 0.7864062874267175, 'precision': 0.8094405123696983, 'recall': 0.7867719932337873}
05/05/2022 11:19:10 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:19:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:14 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:14 - INFO - training_utils.postprocess -   2 (0.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:14 - INFO - __main__ -   Epoch: 0006 | Time: 0m_4s | train_loss: 4.464 | val_loss: 4.191
05/05/2022 11:19:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7808163265306122, 'f1': 0.7786173959629232, 'precision': 0.7893694055739031, 'recall': 0.7878531675043303}
05/05/2022 11:19:14 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:19:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:19 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:19 - INFO - __main__ -   Epoch: 0007 | Time: 0m_4s | train_loss: 4.330 | val_loss: 3.996
05/05/2022 11:19:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8016326530612244, 'f1': 0.794261564540263, 'precision': 0.8182477127140864, 'recall': 0.8121784122116348}
05/05/2022 11:19:19 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:19:24 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:24 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:24 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:24 - INFO - training_utils.postprocess -   35 (2.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:24 - INFO - __main__ -   Epoch: 0008 | Time: 0m_4s | train_loss: 4.154 | val_loss: 4.318
05/05/2022 11:19:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.777142857142857, 'f1': 0.7774789792990966, 'precision': 0.7914634351830967, 'recall': 0.7860281966095919}
05/05/2022 11:19:24 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:19:28 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:28 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:28 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:28 - INFO - training_utils.postprocess -   6 (0.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:28 - INFO - __main__ -   Epoch: 0009 | Time: 0m_4s | train_loss: 4.086 | val_loss: 5.327
05/05/2022 11:19:28 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6404081632653061, 'f1': 0.668603057117937, 'precision': 0.8054755103495467, 'recall': 0.6201604135989518}
05/05/2022 11:19:28 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:19:33 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:33 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:33 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:33 - INFO - training_utils.postprocess -   14 (1.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:33 - INFO - __main__ -   Epoch: 0010 | Time: 0m_4s | train_loss: 4.285 | val_loss: 4.887
05/05/2022 11:19:33 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7089795918367346, 'f1': 0.7292748277883764, 'precision': 0.7999923284319321, 'recall': 0.7010404066218019}
05/05/2022 11:19:33 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:19:38 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:38 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:38 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:38 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:38 - INFO - __main__ -   Epoch: 0011 | Time: 0m_4s | train_loss: 4.146 | val_loss: 3.713
05/05/2022 11:19:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8142857142857143, 'f1': 0.801904736313397, 'precision': 0.7896843183859776, 'recall': 0.8336671615575272}
05/05/2022 11:19:38 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:19:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:42 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:42 - INFO - training_utils.postprocess -   15 (1.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:42 - INFO - __main__ -   Epoch: 0012 | Time: 0m_4s | train_loss: 4.174 | val_loss: 5.305
05/05/2022 11:19:42 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6575510204081632, 'f1': 0.6873835505866733, 'precision': 0.7988390346251534, 'recall': 0.6408544980305777}
05/05/2022 11:19:42 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:19:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:47 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:47 - INFO - training_utils.postprocess -   22 (1.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:47 - INFO - __main__ -   Epoch: 0013 | Time: 0m_4s | train_loss: 4.016 | val_loss: 4.485
05/05/2022 11:19:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7371428571428572, 'f1': 0.7516265265719271, 'precision': 0.793750260425109, 'recall': 0.7371025357071869}
05/05/2022 11:19:47 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:19:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:52 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:52 - INFO - training_utils.postprocess -   6 (0.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:52 - INFO - __main__ -   Epoch: 0014 | Time: 0m_4s | train_loss: 4.134 | val_loss: 4.529
05/05/2022 11:19:52 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7289795918367347, 'f1': 0.7441219520323515, 'precision': 0.7983392553701284, 'recall': 0.7269195275009228}
05/05/2022 11:19:52 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:19:52 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:19:52 - INFO - __main__ -   load checkpoint from ../models/translation/enbg/zero/translate_test_mbert/fc512_lr0.0005_frozen
05/05/2022 11:19:52 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enbg/zero/translate_test_mbert/fc512_lr0.0005_frozen
05/05/2022 11:19:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:53 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:53 - INFO - __main__ -   best_val_loss: 3.687
05/05/2022 11:19:53 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.8293877551020408, 'f1': 0.8107262034287573, 'precision': 0.7905547838467519, 'recall': 0.856965751118575}
05/05/2022 11:19:53 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:19:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:55 - INFO - training_utils.postprocess -   19 (1.33 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:55 - INFO - __main__ -   test_loss: 3.921
05/05/2022 11:19:55 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.8099239695878352, 'f1': 0.780764017290097, 'precision': 0.7832407040870176, 'recall': 0.828124225827551}
