05/05/2022 10:49:35 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 10:49:35 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: bg
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/prepared_additional
	test_data_dir: ../data/prepared_test_data
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enbg/zero/baseline_mbert/fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enbg/zero/baseline_mbert/fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 10:49:35 - INFO - __main__ -   device: cuda
05/05/2022 10:49:35 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 10:49:35 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/prepared_additional/dev.bg.tsv
05/05/2022 10:49:35 - INFO - data_utils.load -   considered 357 (100.00 %) samples out of 357 total samples in ../data/prepared_test_data/test.bg.tsv
05/05/2022 10:49:35 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   num val samples: 350
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   num test samples: 357
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   val sentence max len: 125
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   test sentence max len: 133
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   val OOV: 65 (0.33%) out of 19421 running tokens are OOV
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   test OOV: 86 (0.42%) out of 20404 running tokens are OOV
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:49:36 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 10:49:38 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 10:49:41 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 10:49:41 - INFO - __main__ -   the model has 101,141 trainable parameters
05/05/2022 10:49:41 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 10:49:46 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:49:46 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:49:46 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:49:46 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:49:46 - INFO - __main__ -   Epoch: 0001 | Time: 0m_4s | train_loss: 5.684 | val_loss: 4.686
05/05/2022 10:49:46 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7640816326530613, 'f1': 0.7641998213806775, 'precision': 0.7759591431793519, 'recall': 0.7682127746745687}
05/05/2022 10:49:46 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:49:47 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:49:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:49:52 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:49:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:49:52 - INFO - training_utils.postprocess -   198 (14.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:49:52 - INFO - __main__ -   Epoch: 0002 | Time: 0m_4s | train_loss: 4.834 | val_loss: 5.843
05/05/2022 10:49:52 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5644897959183673, 'f1': 0.6012691158787128, 'precision': 0.78653682325569, 'recall': 0.5380549166595678}
05/05/2022 10:49:52 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:49:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:49:56 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:49:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:49:56 - INFO - training_utils.postprocess -   95 (6.79 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:49:56 - INFO - __main__ -   Epoch: 0003 | Time: 0m_4s | train_loss: 4.797 | val_loss: 4.982
05/05/2022 10:49:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.756734693877551, 'f1': 0.7626120873100939, 'precision': 0.7720619447398701, 'recall': 0.7642279499754583}
05/05/2022 10:49:56 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:50:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:01 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:01 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:01 - INFO - __main__ -   Epoch: 0004 | Time: 0m_4s | train_loss: 4.664 | val_loss: 5.570
05/05/2022 10:50:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5587755102040816, 'f1': 0.5933836396607697, 'precision': 0.8004304566285038, 'recall': 0.5274697082172165}
05/05/2022 10:50:01 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:50:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:06 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:06 - INFO - training_utils.postprocess -   72 (5.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:06 - INFO - __main__ -   Epoch: 0005 | Time: 0m_4s | train_loss: 4.563 | val_loss: 4.825
05/05/2022 10:50:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6702040816326532, 'f1': 0.7046969496989338, 'precision': 0.782944983076244, 'recall': 0.6635443718334084}
05/05/2022 10:50:06 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:50:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:11 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:11 - INFO - training_utils.postprocess -   8 (0.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:11 - INFO - __main__ -   Epoch: 0006 | Time: 0m_4s | train_loss: 4.425 | val_loss: 3.655
05/05/2022 10:50:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8359183673469388, 'f1': 0.8095413857217394, 'precision': 0.7566589800947098, 'recall': 0.877976423723932}
05/05/2022 10:50:11 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:50:13 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:50:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:18 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:18 - INFO - training_utils.postprocess -   14 (1.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:18 - INFO - __main__ -   Epoch: 0007 | Time: 0m_4s | train_loss: 4.284 | val_loss: 4.764
05/05/2022 10:50:18 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6959183673469387, 'f1': 0.7188954566082634, 'precision': 0.7915626863202906, 'recall': 0.6875054661101173}
05/05/2022 10:50:18 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:50:23 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:23 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:23 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:23 - INFO - training_utils.postprocess -   26 (1.86 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:23 - INFO - __main__ -   Epoch: 0008 | Time: 0m_4s | train_loss: 4.227 | val_loss: 5.491
05/05/2022 10:50:23 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.596734693877551, 'f1': 0.6366582915905148, 'precision': 0.7854960379272823, 'recall': 0.5767702489463288}
05/05/2022 10:50:23 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:50:28 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:28 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:28 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:28 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:28 - INFO - __main__ -   Epoch: 0009 | Time: 0m_4s | train_loss: 4.125 | val_loss: 7.607
05/05/2022 10:50:28 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.3983673469387755, 'f1': 0.38773280344232613, 'precision': 0.8329979314560215, 'recall': 0.3501560528803053}
05/05/2022 10:50:28 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:50:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:32 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:32 - INFO - training_utils.postprocess -   67 (4.79 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:32 - INFO - __main__ -   Epoch: 0010 | Time: 0m_4s | train_loss: 4.244 | val_loss: 6.881
05/05/2022 10:50:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4387755102040817, 'f1': 0.45203032372142943, 'precision': 0.8163877536281372, 'recall': 0.39613023742591846}
05/05/2022 10:50:32 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:50:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:37 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:37 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:37 - INFO - __main__ -   Epoch: 0011 | Time: 0m_4s | train_loss: 4.101 | val_loss: 5.571
05/05/2022 10:50:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5877551020408164, 'f1': 0.6275067678165802, 'precision': 0.8004957974077673, 'recall': 0.5651189969130168}
05/05/2022 10:50:37 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 10:50:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:42 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:42 - INFO - training_utils.postprocess -   15 (1.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:42 - INFO - __main__ -   Epoch: 0012 | Time: 0m_4s | train_loss: 4.305 | val_loss: 6.763
05/05/2022 10:50:42 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.509795918367347, 'f1': 0.5441154031936358, 'precision': 0.7905997501104668, 'recall': 0.47596599045104027}
05/05/2022 10:50:42 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 10:50:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:47 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:47 - INFO - training_utils.postprocess -   30 (2.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:47 - INFO - __main__ -   Epoch: 0013 | Time: 0m_4s | train_loss: 3.963 | val_loss: 6.080
05/05/2022 10:50:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5559183673469388, 'f1': 0.5966902558496855, 'precision': 0.8015979416914372, 'recall': 0.5298881627785282}
05/05/2022 10:50:47 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 10:50:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:52 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:52 - INFO - training_utils.postprocess -   18 (1.29 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:52 - INFO - __main__ -   Epoch: 0014 | Time: 0m_4s | train_loss: 4.100 | val_loss: 4.544
05/05/2022 10:50:52 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7359183673469388, 'f1': 0.7482233545453116, 'precision': 0.770804211432352, 'recall': 0.741762399652765}
05/05/2022 10:50:52 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 10:50:57 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:50:57 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:57 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:50:57 - INFO - training_utils.postprocess -   5 (0.36 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:50:57 - INFO - __main__ -   Epoch: 0015 | Time: 0m_4s | train_loss: 3.797 | val_loss: 6.557
05/05/2022 10:50:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.626530612244898, 'f1': 0.6619046867317527, 'precision': 0.78322935033175, 'recall': 0.6089253161013959}
05/05/2022 10:50:57 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 10:51:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:02 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:02 - INFO - training_utils.postprocess -   10 (0.71 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:02 - INFO - __main__ -   Epoch: 0016 | Time: 0m_4s | train_loss: 4.058 | val_loss: 4.308
05/05/2022 10:51:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7791836734693878, 'f1': 0.7779853843504129, 'precision': 0.779538721205481, 'recall': 0.7959715072671881}
05/05/2022 10:51:02 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 10:51:02 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 10:51:02 - INFO - __main__ -   load checkpoint from ../models/translation/enbg/zero/baseline_mbert/fc128_lr0.005_frozen
05/05/2022 10:51:02 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enbg/zero/baseline_mbert/fc128_lr0.005_frozen
05/05/2022 10:51:04 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:04 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:04 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:04 - INFO - training_utils.postprocess -   8 (0.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:04 - INFO - __main__ -   best_val_loss: 3.655
05/05/2022 10:51:04 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.8359183673469388, 'f1': 0.8095413857217394, 'precision': 0.7566589800947098, 'recall': 0.877976423723932}
05/05/2022 10:51:04 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 10:51:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:51:06 - INFO - training_utils.postprocess -   19 (1.33 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:51:06 - INFO - training_utils.postprocess -   13 (0.91 %) out of 1428 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:51:06 - INFO - __main__ -   test_loss: 3.838
05/05/2022 10:51:06 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.8147258903561425, 'f1': 0.7761301940694734, 'precision': 0.7322634401246881, 'recall': 0.8429422105791948}
