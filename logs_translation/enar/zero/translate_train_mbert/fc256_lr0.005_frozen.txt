05/05/2022 11:52:15 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:52:15 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en.ar_all
	trglang: ar
	train_data_dir: ../data/translations
	dev_data_dir: ../data/prepared_additional
	test_data_dir: ../data/prepared_test_data
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_train_mbert/fc256_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_train_mbert/fc256_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:52:15 - INFO - __main__ -   device: cuda
05/05/2022 11:52:15 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/translations/train.en.ar.tsv
05/05/2022 11:52:15 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
05/05/2022 11:52:15 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/prepared_test_data/test.ar.tsv
05/05/2022 11:52:15 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 11:52:15 - WARNING - data_utils.bert_data -   trimming sentence 28 of length 563 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:52:15 - WARNING - data_utils.bert_data -   trimming sentence 153 of length 519 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:52:15 - WARNING - data_utils.bert_data -   trimming sentence 311 of length 519 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:52:16 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1110 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:52:16 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:52:16 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:52:16 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:52:16 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
05/05/2022 11:52:16 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:52:16 - INFO - data_utils.preprocess_bert -   test sentence max len: 156
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   train OOV: 1 (0.00%) out of 66987 running tokens are OOV
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   val OOV: 237 (0.53%) out of 44965 running tokens are OOV
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   test OOV: 375 (0.55%) out of 68677 running tokens are OOV
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   look at some train samples 👀
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: بالنسبة لمتوسط أمريكان المتوسط أفضل طريقة لمعرفة ما إذا كان لديك covid-19 هو السعال في وجه شخص غني, text ids: [101, 59183, 16849, 40041, 11091, 14286, 64143, 10582, 92981, 39596, 81414, 16849, 57458, 10382, 12441, 29615, 12326, 787, 18914, 12497, 11170, 32194, 118, 10270, 11917, 59901, 82397, 13154, 10210, 83607, 27767, 782, 24148, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: هذا هراء, text ids: [101, 13498, 17534, 12700, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: هل يمكنكم من فضلكم أن تتبعوا تعليمات الحكومة حتى نتمكن من التخلص من هذا الكوفيد-19 وننتهي؟ أشعر وكأنني أحد الرواد الذين يستمرون بفقدان المزيد من وقت الراحة لأن طفل أو طفلين لا يستطيع اتباع الإتجاهات., text ids: [101, 790, 10961, 19375, 82225, 10289, 784, 98357, 82225, 11341, 55684, 14556, 766, 64171, 10564, 34981, 15164, 789, 31498, 32195, 10289, 59901, 10502, 61783, 15470, 10289, 13498, 59901, 39494, 64059, 118, 10270, 791, 10582, 31898, 10388, 10461, 756, 759, 11626, 69861, 791, 12497, 35849, 10582, 24148, 21922, 59901, 25683, 13761, 23541, 793, 15450, 24639, 11326, 764, 45797, 22841, 59901, 89798, 14472, 10289, 22198, 59901, 105196, 10382, 52516, 779, 37408, 11843, 779, 37408, 11294, 13879, 793, 80997, 763, 66709, 21337, 59901, 111171, 51731, 23984, 10564, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: لا أقصد الإهانة لكن فيروس الكورونا يختفي قبل ابريل في الواقع تمتص قبل ابريل ابريل في الواقع, text ids: [101, 13879, 759, 83899, 59901, 111171, 49428, 10382, 30964, 10210, 53797, 59901, 77739, 88325, 793, 29399, 21970, 14020, 76295, 21034, 10961, 10210, 90780, 28621, 15470, 14020, 76295, 21034, 10961, 76295, 21034, 10961, 10210, 90780, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:52:17 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: هذا هو وجه الشخص الذي قضى للتو 9 ساعات في معدات الحماية الشخصية تتحرك بشكل خطير المرضى في جميع أنحاء لندن. أشعر بالكسر - ونحن فقط في البداية. أنا أتوسّل إلى الناس، رجاءً قوموا بالعزل الاجتماعي وعزلة ذاتية #covid19 URL., text ids: [101, 13498, 11917, 83607, 105570, 13121, 785, 90751, 787, 33691, 11145, 130, 775, 58076, 10210, 11797, 31835, 59901, 96478, 84490, 766, 10502, 54969, 21216, 26729, 15089, 93108, 11832, 10210, 23136, 76069, 36361, 119, 759, 11626, 69861, 10909, 30990, 31190, 118, 791, 10582, 64488, 23155, 10210, 94049, 119, 11341, 10429, 759, 40041, 11091, 82722, 10863, 40305, 752, 773, 39515, 12611, 16275, 89049, 14556, 10909, 10961, 11693, 31951, 89566, 791, 109519, 28259, 10535, 108, 11170, 32194, 54055, 31191, 119, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:52:20 - INFO - data_utils.preprocess_bert -   there are nearly 74 batches in an epoch
05/05/2022 11:52:24 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:52:24 - INFO - __main__ -   the model has 202,261 trainable parameters
05/05/2022 11:52:24 - INFO - __main__ -   🌋  starting training..
05/05/2022 11:52:39 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:52:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:52:39 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:52:39 - INFO - training_utils.postprocess -   31 (1.49 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:52:40 - INFO - __main__ -   Epoch: 0001 | Time: 0m_15s | train_loss: 5.711 | val_loss: 5.598
05/05/2022 11:52:40 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5876373626373627, 'f1': 0.41431750235371023, 'precision': 0.5674295028918481, 'recall': 0.4131369837841762}
05/05/2022 11:52:40 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:52:40 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:52:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:52:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:52:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:52:56 - INFO - training_utils.postprocess -   157 (7.55 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:52:56 - INFO - __main__ -   Epoch: 0002 | Time: 0m_15s | train_loss: 5.200 | val_loss: 6.122
05/05/2022 11:52:56 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6200549450549452, 'f1': 0.5480967091298238, 'precision': 0.5226130750851907, 'recall': 0.6807493665751305}
05/05/2022 11:52:56 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:52:57 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:53:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:53:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:53:14 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:14 - INFO - __main__ -   Epoch: 0003 | Time: 0m_16s | train_loss: 4.927 | val_loss: 5.299
05/05/2022 11:53:14 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.623076923076923, 'f1': 0.5596014131613266, 'precision': 0.5815562462930021, 'recall': 0.6657306036992247}
05/05/2022 11:53:14 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:53:15 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:53:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:53:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:53:32 - INFO - training_utils.postprocess -   10 (0.48 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:32 - INFO - __main__ -   Epoch: 0004 | Time: 0m_16s | train_loss: 4.973 | val_loss: 5.737
05/05/2022 11:53:32 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6013736263736263, 'f1': 0.5397346429896567, 'precision': 0.5789095634054832, 'recall': 0.6807077688549612}
05/05/2022 11:53:32 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:53:41 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:53:41 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:41 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:53:41 - INFO - training_utils.postprocess -   38 (1.83 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:41 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 4.646 | val_loss: 6.764
05/05/2022 11:53:41 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5678571428571428, 'f1': 0.5216929107492286, 'precision': 0.5681653196985609, 'recall': 0.699764221304271}
05/05/2022 11:53:41 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:53:50 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:53:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:50 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:53:50 - INFO - training_utils.postprocess -   148 (7.12 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:53:50 - INFO - __main__ -   Epoch: 0006 | Time: 0m_8s | train_loss: 4.657 | val_loss: 5.984
05/05/2022 11:53:50 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6442307692307692, 'f1': 0.5421571688823956, 'precision': 0.6144730357772499, 'recall': 0.5331103982518103}
05/05/2022 11:53:50 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:54:04 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:54:04 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:04 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:54:04 - INFO - training_utils.postprocess -   84 (4.04 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:04 - INFO - __main__ -   Epoch: 0007 | Time: 0m_14s | train_loss: 4.810 | val_loss: 5.903
05/05/2022 11:54:04 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6475274725274726, 'f1': 0.5504368133908695, 'precision': 0.5988884619591823, 'recall': 0.6185445165131374}
05/05/2022 11:54:04 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:54:17 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:54:17 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:17 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:54:17 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:17 - INFO - __main__ -   Epoch: 0008 | Time: 0m_13s | train_loss: 4.616 | val_loss: 5.471
05/05/2022 11:54:17 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6197802197802197, 'f1': 0.5758466153393113, 'precision': 0.5930625767555681, 'recall': 0.7015329180234217}
05/05/2022 11:54:17 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:54:19 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:54:35 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:54:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:35 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:54:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:35 - INFO - __main__ -   Epoch: 0009 | Time: 0m_15s | train_loss: 4.415 | val_loss: 4.951
05/05/2022 11:54:35 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6486263736263737, 'f1': 0.5499634443275828, 'precision': 0.6139070592032637, 'recall': 0.5627240590855372}
05/05/2022 11:54:35 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:54:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:54:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:54:47 - INFO - training_utils.postprocess -   13 (0.62 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:54:47 - INFO - __main__ -   Epoch: 0010 | Time: 0m_12s | train_loss: 4.776 | val_loss: 5.630
05/05/2022 11:54:47 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6315934065934066, 'f1': 0.5014497101152048, 'precision': 0.6016503529242925, 'recall': 0.5103764838808191}
05/05/2022 11:54:47 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:55:03 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:55:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:03 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:55:03 - INFO - training_utils.postprocess -   31 (1.49 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:03 - INFO - __main__ -   Epoch: 0011 | Time: 0m_15s | train_loss: 4.483 | val_loss: 6.377
05/05/2022 11:55:03 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6431318681318682, 'f1': 0.49030764189415316, 'precision': 0.6379806884323685, 'recall': 0.48343058979206793}
05/05/2022 11:55:03 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:55:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:55:18 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:55:18 - INFO - training_utils.postprocess -   31 (1.49 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:18 - INFO - __main__ -   Epoch: 0012 | Time: 0m_15s | train_loss: 4.443 | val_loss: 6.290
05/05/2022 11:55:18 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6521978021978023, 'f1': 0.5605520864904123, 'precision': 0.6422195913701892, 'recall': 0.6040109876144145}
05/05/2022 11:55:18 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:55:33 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:55:33 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:33 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:55:33 - INFO - training_utils.postprocess -   28 (1.35 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:33 - INFO - __main__ -   Epoch: 0013 | Time: 0m_14s | train_loss: 4.435 | val_loss: 6.069
05/05/2022 11:55:33 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6565934065934066, 'f1': 0.530987841412492, 'precision': 0.6208029387507679, 'recall': 0.5512409609952963}
05/05/2022 11:55:33 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:55:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:55:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:55:48 - INFO - training_utils.postprocess -   47 (2.26 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:55:48 - INFO - __main__ -   Epoch: 0014 | Time: 0m_14s | train_loss: 4.309 | val_loss: 6.232
05/05/2022 11:55:48 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6406593406593407, 'f1': 0.5133715629840133, 'precision': 0.6158747001626328, 'recall': 0.5323765628451838}
05/05/2022 11:55:48 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:56:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:56:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:56:02 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:02 - INFO - __main__ -   Epoch: 0015 | Time: 0m_14s | train_loss: 4.422 | val_loss: 6.482
05/05/2022 11:56:02 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5953296703296703, 'f1': 0.5398611545331393, 'precision': 0.570094736486055, 'recall': 0.6890731250279145}
05/05/2022 11:56:02 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:56:17 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:56:17 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:17 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:56:17 - INFO - training_utils.postprocess -   48 (2.31 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:17 - INFO - __main__ -   Epoch: 0016 | Time: 0m_14s | train_loss: 4.357 | val_loss: 6.090
05/05/2022 11:56:17 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6678571428571429, 'f1': 0.5765929199033194, 'precision': 0.6391751465797386, 'recall': 0.5986693747335778}
05/05/2022 11:56:17 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:56:19 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:56:34 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:56:34 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:34 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:56:34 - INFO - training_utils.postprocess -   45 (2.16 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:34 - INFO - __main__ -   Epoch: 0017 | Time: 0m_15s | train_loss: 4.407 | val_loss: 6.230
05/05/2022 11:56:34 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6115384615384615, 'f1': 0.5587615449927495, 'precision': 0.5905669921726149, 'recall': 0.6823593674708456}
05/05/2022 11:56:34 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:56:49 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:56:49 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:49 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:56:49 - INFO - training_utils.postprocess -   19 (0.91 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:56:49 - INFO - __main__ -   Epoch: 0018 | Time: 0m_15s | train_loss: 4.253 | val_loss: 6.294
05/05/2022 11:56:49 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6458791208791209, 'f1': 0.5621767669474645, 'precision': 0.6220468977242801, 'recall': 0.6281390227147866}
05/05/2022 11:56:49 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:57:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:06 - INFO - training_utils.postprocess -   6 (0.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:06 - INFO - __main__ -   Epoch: 0019 | Time: 0m_16s | train_loss: 4.272 | val_loss: 7.556
05/05/2022 11:57:06 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5758241758241758, 'f1': 0.5255014418638505, 'precision': 0.5448831553502417, 'recall': 0.6860620124234906}
05/05/2022 11:57:06 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:57:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:14 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:14 - INFO - __main__ -   Epoch: 0020 | Time: 0m_7s | train_loss: 4.317 | val_loss: 6.300
05/05/2022 11:57:14 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.618956043956044, 'f1': 0.5521933869642949, 'precision': 0.5930408876567338, 'recall': 0.6567191678525288}
05/05/2022 11:57:14 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:57:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:25 - INFO - training_utils.postprocess -   20 (0.96 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:25 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 4.363 | val_loss: 5.644
05/05/2022 11:57:25 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6513736263736264, 'f1': 0.5153659577157064, 'precision': 0.6686300463571181, 'recall': 0.49479527771435283}
05/05/2022 11:57:25 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:57:39 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:39 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:39 - INFO - training_utils.postprocess -   42 (2.02 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:39 - INFO - __main__ -   Epoch: 0022 | Time: 0m_14s | train_loss: 4.354 | val_loss: 5.968
05/05/2022 11:57:39 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6604395604395605, 'f1': 0.5401037977964872, 'precision': 0.6518674659554399, 'recall': 0.5500180397228291}
05/05/2022 11:57:39 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:57:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:53 - INFO - training_utils.postprocess -   6 (0.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:53 - INFO - __main__ -   Epoch: 0023 | Time: 0m_13s | train_loss: 4.272 | val_loss: 5.943
05/05/2022 11:57:53 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6126373626373626, 'f1': 0.5613589241300759, 'precision': 0.5990912606464468, 'recall': 0.6793835159534994}
05/05/2022 11:57:53 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:58:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:06 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:06 - INFO - __main__ -   Epoch: 0024 | Time: 0m_12s | train_loss: 4.256 | val_loss: 6.058
05/05/2022 11:58:06 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6417582417582418, 'f1': 0.5657124290771698, 'precision': 0.6139391410279261, 'recall': 0.6369662673853426}
05/05/2022 11:58:06 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:58:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:18 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:18 - INFO - training_utils.postprocess -   6 (0.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:18 - INFO - __main__ -   Epoch: 0025 | Time: 0m_12s | train_loss: 4.329 | val_loss: 6.234
05/05/2022 11:58:18 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6123626373626374, 'f1': 0.5608257885732396, 'precision': 0.5836042182928427, 'recall': 0.6636142654619119}
05/05/2022 11:58:18 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:58:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:32 - INFO - training_utils.postprocess -   13 (0.62 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:32 - INFO - __main__ -   Epoch: 0026 | Time: 0m_14s | train_loss: 4.190 | val_loss: 5.670
05/05/2022 11:58:32 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6505494505494506, 'f1': 0.551429689812568, 'precision': 0.6610580695498508, 'recall': 0.5970821682155291}
05/05/2022 11:58:32 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:58:32 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:58:32 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_train_mbert/fc256_lr0.005_frozen
05/05/2022 11:58:33 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_train_mbert/fc256_lr0.005_frozen
05/05/2022 11:58:39 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:39 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:39 - INFO - training_utils.postprocess -   48 (2.31 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:39 - INFO - __main__ -   best_val_loss: 6.090
05/05/2022 11:58:39 - INFO - __main__ -   📣 best validation metrics 📣 {'acc': 0.6678571428571429, 'f1': 0.5765929199033194, 'precision': 0.6391751465797386, 'recall': 0.5986693747335778}
05/05/2022 11:58:39 - INFO - __main__ -   🔥 start testing..
05/05/2022 11:58:49 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:49 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:49 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:49 - INFO - training_utils.postprocess -   28 (0.70 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:49 - INFO - __main__ -   test_loss: 5.273
05/05/2022 11:58:49 - INFO - __main__ -   📣 test metrics 📣 {'acc': 0.6882857142857144, 'f1': 0.5449824394463284, 'precision': 0.5939215950958524, 'recall': 0.5847768724928744}
