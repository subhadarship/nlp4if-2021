05/05/2022 11:38:47 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:38:47 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en.ar_all
	trglang: ar
	train_data_dir: ../data/translations
	dev_data_dir: ../data/prepared_additional
	test_data_dir: ../data/prepared_test_data
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_train_mbert/fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_train_mbert/fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:38:47 - INFO - __main__ -   device: cuda
05/05/2022 11:38:47 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/translations/train.en.ar.tsv
05/05/2022 11:38:47 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
05/05/2022 11:38:47 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/prepared_test_data/test.ar.tsv
05/05/2022 11:38:47 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 11:38:47 - WARNING - data_utils.bert_data -   trimming sentence 28 of length 563 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:38:47 - WARNING - data_utils.bert_data -   trimming sentence 153 of length 519 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:38:48 - WARNING - data_utils.bert_data -   trimming sentence 311 of length 519 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:38:48 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1110 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   test sentence max len: 156
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   train OOV: 1 (0.00%) out of 66987 running tokens are OOV
05/05/2022 11:38:49 - INFO - data_utils.preprocess_bert -   val OOV: 237 (0.53%) out of 44965 running tokens are OOV
05/05/2022 11:38:50 - INFO - data_utils.preprocess_bert -   test OOV: 375 (0.55%) out of 68677 running tokens are OOV
05/05/2022 11:38:50 - INFO - data_utils.preprocess_bert -   look at some train samples 👀
05/05/2022 11:38:50 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: بالنسبة لمتوسط أمريكان المتوسط أفضل طريقة لمعرفة ما إذا كان لديك covid-19 هو السعال في وجه شخص غني, text ids: [101, 59183, 16849, 40041, 11091, 14286, 64143, 10582, 92981, 39596, 81414, 16849, 57458, 10382, 12441, 29615, 12326, 787, 18914, 12497, 11170, 32194, 118, 10270, 11917, 59901, 82397, 13154, 10210, 83607, 27767, 782, 24148, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:38:50 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: هذا هراء, text ids: [101, 13498, 17534, 12700, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:38:50 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: هل يمكنكم من فضلكم أن تتبعوا تعليمات الحكومة حتى نتمكن من التخلص من هذا الكوفيد-19 وننتهي؟ أشعر وكأنني أحد الرواد الذين يستمرون بفقدان المزيد من وقت الراحة لأن طفل أو طفلين لا يستطيع اتباع الإتجاهات., text ids: [101, 790, 10961, 19375, 82225, 10289, 784, 98357, 82225, 11341, 55684, 14556, 766, 64171, 10564, 34981, 15164, 789, 31498, 32195, 10289, 59901, 10502, 61783, 15470, 10289, 13498, 59901, 39494, 64059, 118, 10270, 791, 10582, 31898, 10388, 10461, 756, 759, 11626, 69861, 791, 12497, 35849, 10582, 24148, 21922, 59901, 25683, 13761, 23541, 793, 15450, 24639, 11326, 764, 45797, 22841, 59901, 89798, 14472, 10289, 22198, 59901, 105196, 10382, 52516, 779, 37408, 11843, 779, 37408, 11294, 13879, 793, 80997, 763, 66709, 21337, 59901, 111171, 51731, 23984, 10564, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:38:50 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: لا أقصد الإهانة لكن فيروس الكورونا يختفي قبل ابريل في الواقع تمتص قبل ابريل ابريل في الواقع, text ids: [101, 13879, 759, 83899, 59901, 111171, 49428, 10382, 30964, 10210, 53797, 59901, 77739, 88325, 793, 29399, 21970, 14020, 76295, 21034, 10961, 10210, 90780, 28621, 15470, 14020, 76295, 21034, 10961, 76295, 21034, 10961, 10210, 90780, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:38:50 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: هذا هو وجه الشخص الذي قضى للتو 9 ساعات في معدات الحماية الشخصية تتحرك بشكل خطير المرضى في جميع أنحاء لندن. أشعر بالكسر - ونحن فقط في البداية. أنا أتوسّل إلى الناس، رجاءً قوموا بالعزل الاجتماعي وعزلة ذاتية #covid19 URL., text ids: [101, 13498, 11917, 83607, 105570, 13121, 785, 90751, 787, 33691, 11145, 130, 775, 58076, 10210, 11797, 31835, 59901, 96478, 84490, 766, 10502, 54969, 21216, 26729, 15089, 93108, 11832, 10210, 23136, 76069, 36361, 119, 759, 11626, 69861, 10909, 30990, 31190, 118, 791, 10582, 64488, 23155, 10210, 94049, 119, 11341, 10429, 759, 40041, 11091, 82722, 10863, 40305, 752, 773, 39515, 12611, 16275, 89049, 14556, 10909, 10961, 11693, 31951, 89566, 791, 109519, 28259, 10535, 108, 11170, 32194, 54055, 31191, 119, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:38:53 - INFO - data_utils.preprocess_bert -   there are nearly 74 batches in an epoch
05/05/2022 11:38:56 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:38:56 - INFO - __main__ -   the model has 101,141 trainable parameters
05/05/2022 11:38:56 - INFO - __main__ -   🌋  starting training..
05/05/2022 11:39:12 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:39:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:12 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:39:12 - INFO - training_utils.postprocess -   49 (2.36 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:12 - INFO - __main__ -   Epoch: 0001 | Time: 0m_15s | train_loss: 5.657 | val_loss: 5.415
05/05/2022 11:39:12 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6151098901098901, 'f1': 0.4734701060129875, 'precision': 0.5570779618216926, 'recall': 0.451390386323293}
05/05/2022 11:39:12 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:39:12 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:39:27 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:39:27 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:27 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:39:27 - INFO - training_utils.postprocess -   107 (5.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:27 - INFO - __main__ -   Epoch: 0002 | Time: 0m_14s | train_loss: 5.127 | val_loss: 5.990
05/05/2022 11:39:27 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6313186813186814, 'f1': 0.5476167597281737, 'precision': 0.5273262646093009, 'recall': 0.6553441615270683}
05/05/2022 11:39:27 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:39:29 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:39:44 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:39:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:44 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:39:44 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:44 - INFO - __main__ -   Epoch: 0003 | Time: 0m_15s | train_loss: 4.902 | val_loss: 5.593
05/05/2022 11:39:44 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5854395604395604, 'f1': 0.5421220027655764, 'precision': 0.5779707731355378, 'recall': 0.6921918864105073}
05/05/2022 11:39:44 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:39:59 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:39:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:59 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:39:59 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:39:59 - INFO - __main__ -   Epoch: 0004 | Time: 0m_15s | train_loss: 4.970 | val_loss: 5.909
05/05/2022 11:39:59 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5225274725274724, 'f1': 0.49318150625331925, 'precision': 0.5509023612998233, 'recall': 0.701910885236649}
05/05/2022 11:39:59 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:40:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:40:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:40:14 - INFO - training_utils.postprocess -   36 (1.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:14 - INFO - __main__ -   Epoch: 0005 | Time: 0m_14s | train_loss: 4.634 | val_loss: 6.587
05/05/2022 11:40:14 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5263736263736264, 'f1': 0.5020369728909428, 'precision': 0.5449441377312946, 'recall': 0.7052994298256479}
05/05/2022 11:40:14 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:40:29 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:40:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:29 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:40:29 - INFO - training_utils.postprocess -   91 (4.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:29 - INFO - __main__ -   Epoch: 0006 | Time: 0m_14s | train_loss: 4.637 | val_loss: 5.940
05/05/2022 11:40:29 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6236263736263735, 'f1': 0.49558872585376423, 'precision': 0.60984072008323, 'recall': 0.4692132951887288}
05/05/2022 11:40:29 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:40:44 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:40:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:44 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:40:44 - INFO - training_utils.postprocess -   33 (1.59 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:44 - INFO - __main__ -   Epoch: 0007 | Time: 0m_15s | train_loss: 4.829 | val_loss: 5.609
05/05/2022 11:40:44 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6354395604395604, 'f1': 0.553963128452417, 'precision': 0.5923141948014944, 'recall': 0.6458788396907719}
05/05/2022 11:40:44 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:40:46 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:40:54 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:40:54 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:54 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:40:54 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:40:54 - INFO - __main__ -   Epoch: 0008 | Time: 0m_8s | train_loss: 4.681 | val_loss: 5.434
05/05/2022 11:40:54 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.61510989010989, 'f1': 0.571491927595825, 'precision': 0.5905952273441114, 'recall': 0.6845911548316586}
05/05/2022 11:40:54 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:40:56 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:41:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:41:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:41:11 - INFO - training_utils.postprocess -   39 (1.88 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:11 - INFO - __main__ -   Epoch: 0009 | Time: 0m_14s | train_loss: 4.509 | val_loss: 5.208
05/05/2022 11:41:11 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6576923076923077, 'f1': 0.5782019684201206, 'precision': 0.609314624386806, 'recall': 0.6224717031188954}
05/05/2022 11:41:11 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:41:13 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:41:26 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:41:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:26 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:41:26 - INFO - training_utils.postprocess -   16 (0.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:26 - INFO - __main__ -   Epoch: 0010 | Time: 0m_13s | train_loss: 4.773 | val_loss: 5.388
05/05/2022 11:41:26 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6219780219780219, 'f1': 0.4672849687196678, 'precision': 0.5936017016995534, 'recall': 0.45034878255357197}
05/05/2022 11:41:26 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:41:40 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:41:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:40 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:41:40 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:40 - INFO - __main__ -   Epoch: 0011 | Time: 0m_14s | train_loss: 4.523 | val_loss: 6.044
05/05/2022 11:41:40 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6403846153846154, 'f1': 0.4633760767143746, 'precision': 0.6421691428014936, 'recall': 0.4401991970963895}
05/05/2022 11:41:40 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:41:54 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:41:54 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:54 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:41:54 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:41:54 - INFO - __main__ -   Epoch: 0012 | Time: 0m_14s | train_loss: 4.472 | val_loss: 5.741
05/05/2022 11:41:54 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.643956043956044, 'f1': 0.5504748738040475, 'precision': 0.6169471495620112, 'recall': 0.5797320168077806}
05/05/2022 11:41:54 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:42:08 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:42:08 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:08 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:42:08 - INFO - training_utils.postprocess -   7 (0.34 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:08 - INFO - __main__ -   Epoch: 0013 | Time: 0m_14s | train_loss: 4.449 | val_loss: 6.036
05/05/2022 11:42:08 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6414835164835164, 'f1': 0.5420716740995263, 'precision': 0.6304330277105109, 'recall': 0.606033091273595}
05/05/2022 11:42:08 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:42:23 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:42:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:23 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:42:23 - INFO - training_utils.postprocess -   12 (0.58 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:23 - INFO - __main__ -   Epoch: 0014 | Time: 0m_14s | train_loss: 4.326 | val_loss: 5.570
05/05/2022 11:42:23 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6387362637362637, 'f1': 0.5552562707171679, 'precision': 0.5976631427515844, 'recall': 0.6173341057888952}
05/05/2022 11:42:23 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:42:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:42:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:42:37 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:37 - INFO - __main__ -   Epoch: 0015 | Time: 0m_14s | train_loss: 4.438 | val_loss: 6.407
05/05/2022 11:42:37 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5854395604395605, 'f1': 0.5417666892731193, 'precision': 0.5799219110402692, 'recall': 0.6930087138344776}
05/05/2022 11:42:37 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:42:51 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:42:51 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:51 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:42:51 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:42:51 - INFO - __main__ -   Epoch: 0016 | Time: 0m_13s | train_loss: 4.377 | val_loss: 5.462
05/05/2022 11:42:51 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6590659340659341, 'f1': 0.5701256441384303, 'precision': 0.6243627042518157, 'recall': 0.6062580561909628}
05/05/2022 11:42:51 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:43:05 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:43:05 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:05 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:43:05 - INFO - training_utils.postprocess -   53 (2.55 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:05 - INFO - __main__ -   Epoch: 0017 | Time: 0m_14s | train_loss: 4.357 | val_loss: 5.877
05/05/2022 11:43:05 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6217032967032967, 'f1': 0.5612546091199482, 'precision': 0.586472974557133, 'recall': 0.6681832486518696}
05/05/2022 11:43:05 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:43:20 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:43:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:20 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:43:20 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:20 - INFO - __main__ -   Epoch: 0018 | Time: 0m_14s | train_loss: 4.287 | val_loss: 6.365
05/05/2022 11:43:20 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6288461538461538, 'f1': 0.5584220023902101, 'precision': 0.6027358316883297, 'recall': 0.6416125885097809}
05/05/2022 11:43:20 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:43:35 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:43:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:35 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:43:35 - INFO - training_utils.postprocess -   7 (0.34 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:35 - INFO - __main__ -   Epoch: 0019 | Time: 0m_15s | train_loss: 4.320 | val_loss: 6.290
05/05/2022 11:43:35 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.637087912087912, 'f1': 0.5653536816694261, 'precision': 0.5995708572236426, 'recall': 0.6498137223756547}
05/05/2022 11:43:35 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:43:35 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:43:35 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_train_mbert/fc128_lr0.005_frozen
05/05/2022 11:43:35 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_train_mbert/fc128_lr0.005_frozen
05/05/2022 11:43:40 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:43:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:40 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:43:40 - INFO - training_utils.postprocess -   39 (1.88 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:40 - INFO - __main__ -   best_val_loss: 5.208
05/05/2022 11:43:40 - INFO - __main__ -   📣 best validation metrics 📣 {'acc': 0.6576923076923077, 'f1': 0.5782019684201206, 'precision': 0.609314624386806, 'recall': 0.6224717031188954}
05/05/2022 11:43:40 - INFO - __main__ -   🔥 start testing..
05/05/2022 11:43:46 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:43:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:46 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:43:46 - INFO - training_utils.postprocess -   22 (0.55 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:43:46 - INFO - __main__ -   test_loss: 4.813
05/05/2022 11:43:46 - INFO - __main__ -   📣 test metrics 📣 {'acc': 0.6815714285714286, 'f1': 0.5508235799821393, 'precision': 0.5804041144086912, 'recall': 0.6170005448898228}
