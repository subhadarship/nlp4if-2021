05/05/2022 10:52:34 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 10:52:34 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/prepared_additional
	test_data_dir: ../data/prepared_test_data
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/baseline_mbert/fc128_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/baseline_mbert/fc128_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 10:52:34 - INFO - __main__ -   device: cuda
05/05/2022 10:52:34 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 10:52:34 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
05/05/2022 10:52:34 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/prepared_test_data/test.ar.tsv
05/05/2022 10:52:34 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 10:52:35 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1110 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   test sentence max len: 156
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 10:52:36 - INFO - data_utils.preprocess_bert -   val OOV: 237 (0.53%) out of 44965 running tokens are OOV
05/05/2022 10:52:37 - INFO - data_utils.preprocess_bert -   test OOV: 375 (0.55%) out of 68677 running tokens are OOV
05/05/2022 10:52:37 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 10:52:37 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:52:37 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:52:37 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:52:37 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:52:37 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 10:52:38 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 10:52:42 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 10:52:42 - INFO - __main__ -   the model has 101,141 trainable parameters
05/05/2022 10:52:42 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 10:52:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:52:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:52:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:48 - INFO - __main__ -   Epoch: 0001 | Time: 0m_6s | train_loss: 5.917 | val_loss: 6.415
05/05/2022 10:52:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44053085586382895, 'precision': 0.33895417414490375, 'recall': 0.7106831602589241}
05/05/2022 10:52:48 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:52:49 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:52:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:52:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:52:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:52:55 - INFO - __main__ -   Epoch: 0002 | Time: 0m_6s | train_loss: 5.211 | val_loss: 6.015
05/05/2022 10:52:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43818681318681313, 'f1': 0.4406301236395939, 'precision': 0.3390496459986075, 'recall': 0.7106831602589241}
05/05/2022 10:52:55 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:52:57 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:53:04 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:04 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:04 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:04 - INFO - training_utils.postprocess -   425 (20.43 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:04 - INFO - __main__ -   Epoch: 0003 | Time: 0m_6s | train_loss: 5.005 | val_loss: 5.792
05/05/2022 10:53:04 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6145604395604396, 'f1': 0.5333011046683742, 'precision': 0.48040082867878164, 'recall': 0.6479436978766046}
05/05/2022 10:53:04 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:53:06 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:53:12 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:12 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:12 - INFO - training_utils.postprocess -   62 (2.98 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:12 - INFO - __main__ -   Epoch: 0004 | Time: 0m_6s | train_loss: 4.844 | val_loss: 5.549
05/05/2022 10:53:12 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6096153846153847, 'f1': 0.5273331977562696, 'precision': 0.5530554884322952, 'recall': 0.646767482414675}
05/05/2022 10:53:12 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:53:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:19 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:19 - INFO - __main__ -   Epoch: 0005 | Time: 0m_6s | train_loss: 4.754 | val_loss: 5.333
05/05/2022 10:53:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6304945054945056, 'f1': 0.495061607945161, 'precision': 0.5427746646810886, 'recall': 0.511080392263299}
05/05/2022 10:53:19 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:53:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:25 - INFO - training_utils.postprocess -   178 (8.56 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:25 - INFO - __main__ -   Epoch: 0006 | Time: 0m_6s | train_loss: 4.672 | val_loss: 5.598
05/05/2022 10:53:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6131868131868133, 'f1': 0.5325365271115647, 'precision': 0.4760938851365809, 'recall': 0.6556113910800121}
05/05/2022 10:53:25 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:53:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:31 - INFO - training_utils.postprocess -   113 (5.43 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:31 - INFO - __main__ -   Epoch: 0007 | Time: 0m_6s | train_loss: 4.509 | val_loss: 5.550
05/05/2022 10:53:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6271978021978023, 'f1': 0.500596435216984, 'precision': 0.4887879279253175, 'recall': 0.5341000190329257}
05/05/2022 10:53:31 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:53:38 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:38 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:38 - INFO - training_utils.postprocess -   159 (7.64 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:38 - INFO - __main__ -   Epoch: 0008 | Time: 0m_6s | train_loss: 4.372 | val_loss: 5.519
05/05/2022 10:53:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6373626373626375, 'f1': 0.5018990139332252, 'precision': 0.5048585450333045, 'recall': 0.5228375791990573}
05/05/2022 10:53:38 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 10:53:44 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:44 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:44 - INFO - training_utils.postprocess -   16 (0.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:44 - INFO - __main__ -   Epoch: 0009 | Time: 0m_6s | train_loss: 4.266 | val_loss: 5.490
05/05/2022 10:53:44 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6109890109890111, 'f1': 0.4157935258289078, 'precision': 0.49082661842440517, 'recall': 0.40552349902783424}
05/05/2022 10:53:44 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 10:53:51 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:51 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:51 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:51 - INFO - training_utils.postprocess -   244 (11.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:51 - INFO - __main__ -   Epoch: 0010 | Time: 0m_6s | train_loss: 4.458 | val_loss: 5.701
05/05/2022 10:53:51 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6563186813186813, 'f1': 0.5257538091040381, 'precision': 0.5198213619022736, 'recall': 0.5528407318807814}
05/05/2022 10:53:51 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 10:53:57 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:53:57 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:57 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:53:57 - INFO - training_utils.postprocess -   32 (1.54 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:53:57 - INFO - __main__ -   Epoch: 0011 | Time: 0m_6s | train_loss: 4.256 | val_loss: 5.618
05/05/2022 10:53:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6384615384615386, 'f1': 0.5383730449227961, 'precision': 0.4974908084008817, 'recall': 0.6195483303740943}
05/05/2022 10:53:57 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:54:00 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:54:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:06 - INFO - training_utils.postprocess -   82 (3.94 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:06 - INFO - __main__ -   Epoch: 0012 | Time: 0m_6s | train_loss: 4.321 | val_loss: 5.781
05/05/2022 10:54:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6126373626373628, 'f1': 0.43665971635919465, 'precision': 0.48740322849410134, 'recall': 0.4318624871525367}
05/05/2022 10:54:06 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:54:13 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:13 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:13 - INFO - training_utils.postprocess -   28 (1.35 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:13 - INFO - __main__ -   Epoch: 0013 | Time: 0m_6s | train_loss: 4.239 | val_loss: 5.465
05/05/2022 10:54:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6326923076923078, 'f1': 0.4945403724144849, 'precision': 0.5161788780360916, 'recall': 0.5120585721700502}
05/05/2022 10:54:13 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:54:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:19 - INFO - training_utils.postprocess -   41 (1.97 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:19 - INFO - __main__ -   Epoch: 0014 | Time: 0m_6s | train_loss: 4.275 | val_loss: 5.626
05/05/2022 10:54:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6285714285714287, 'f1': 0.4936290133561044, 'precision': 0.5159189242621954, 'recall': 0.5159064703036627}
05/05/2022 10:54:19 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:54:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:25 - INFO - training_utils.postprocess -   78 (3.75 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:25 - INFO - __main__ -   Epoch: 0015 | Time: 0m_6s | train_loss: 4.075 | val_loss: 5.772
05/05/2022 10:54:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6445054945054945, 'f1': 0.5278621425340922, 'precision': 0.5054501123694853, 'recall': 0.5753439729554511}
05/05/2022 10:54:25 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:54:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:32 - INFO - training_utils.postprocess -   37 (1.78 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:32 - INFO - __main__ -   Epoch: 0016 | Time: 0m_6s | train_loss: 4.142 | val_loss: 5.560
05/05/2022 10:54:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6288461538461539, 'f1': 0.5388126936078467, 'precision': 0.5890066951618417, 'recall': 0.6255331986803911}
05/05/2022 10:54:32 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:54:34 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:54:40 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:40 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:40 - INFO - training_utils.postprocess -   85 (4.09 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:40 - INFO - __main__ -   Epoch: 0017 | Time: 0m_6s | train_loss: 4.101 | val_loss: 5.573
05/05/2022 10:54:40 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6412087912087913, 'f1': 0.5194945594096432, 'precision': 0.5959351713202076, 'recall': 0.548254269437176}
05/05/2022 10:54:40 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:54:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:47 - INFO - training_utils.postprocess -   170 (8.17 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:47 - INFO - __main__ -   Epoch: 0018 | Time: 0m_6s | train_loss: 4.111 | val_loss: 6.025
05/05/2022 10:54:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6313186813186814, 'f1': 0.5381797856907707, 'precision': 0.48945398835605847, 'recall': 0.6325560417746628}
05/05/2022 10:54:47 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:54:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:54:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:54:53 - INFO - training_utils.postprocess -   65 (3.12 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:54:53 - INFO - __main__ -   Epoch: 0019 | Time: 0m_6s | train_loss: 4.085 | val_loss: 5.892
05/05/2022 10:54:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6247252747252748, 'f1': 0.538352465634736, 'precision': 0.6591377415668997, 'recall': 0.6428844804959587}
05/05/2022 10:54:53 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:55:00 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:00 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:00 - INFO - training_utils.postprocess -   84 (4.04 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:00 - INFO - __main__ -   Epoch: 0020 | Time: 0m_6s | train_loss: 4.031 | val_loss: 5.999
05/05/2022 10:55:00 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5755494505494506, 'f1': 0.5270173932016929, 'precision': 0.567554705445415, 'recall': 0.683466589292353}
05/05/2022 10:55:00 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:55:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:06 - INFO - training_utils.postprocess -   41 (1.97 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:06 - INFO - __main__ -   Epoch: 0021 | Time: 0m_6s | train_loss: 3.971 | val_loss: 5.613
05/05/2022 10:55:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6450549450549451, 'f1': 0.522961914068006, 'precision': 0.6470635351240912, 'recall': 0.5503131768532264}
05/05/2022 10:55:06 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 10:55:12 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:12 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:12 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:12 - INFO - __main__ -   Epoch: 0022 | Time: 0m_6s | train_loss: 3.918 | val_loss: 5.783
05/05/2022 10:55:12 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6085164835164835, 'f1': 0.5371543399664783, 'precision': 0.5736280211575295, 'recall': 0.6697085632128985}
05/05/2022 10:55:12 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 10:55:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:19 - INFO - training_utils.postprocess -   88 (4.23 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:19 - INFO - __main__ -   Epoch: 0023 | Time: 0m_6s | train_loss: 3.854 | val_loss: 6.154
05/05/2022 10:55:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6071428571428571, 'f1': 0.5218749238592535, 'precision': 0.5754276450726028, 'recall': 0.6260377691849615}
05/05/2022 10:55:19 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 10:55:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:25 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:25 - INFO - __main__ -   Epoch: 0024 | Time: 0m_6s | train_loss: 3.975 | val_loss: 5.202
05/05/2022 10:55:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6307692307692309, 'f1': 0.5022625044188949, 'precision': 0.5815433039312035, 'recall': 0.5099678197221549}
05/05/2022 10:55:25 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 10:55:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:32 - INFO - training_utils.postprocess -   36 (1.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:32 - INFO - __main__ -   Epoch: 0025 | Time: 0m_6s | train_loss: 3.887 | val_loss: 5.565
05/05/2022 10:55:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.63489010989011, 'f1': 0.46165788482828013, 'precision': 0.6415905527684255, 'recall': 0.4448703458746811}
05/05/2022 10:55:32 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 10:55:38 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:38 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:38 - INFO - training_utils.postprocess -   49 (2.36 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:38 - INFO - __main__ -   Epoch: 0026 | Time: 0m_6s | train_loss: 3.884 | val_loss: 6.205
05/05/2022 10:55:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6142857142857144, 'f1': 0.4432776609498622, 'precision': 0.5561824816447828, 'recall': 0.4411791271834624}
05/05/2022 10:55:38 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 10:55:38 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 10:55:38 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/baseline_mbert/fc128_lr0.0005_frozen
05/05/2022 10:55:38 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/baseline_mbert/fc128_lr0.0005_frozen
05/05/2022 10:55:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:42 - INFO - training_utils.postprocess -   37 (1.78 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:42 - INFO - __main__ -   best_val_loss: 5.560
05/05/2022 10:55:42 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6288461538461539, 'f1': 0.5388126936078467, 'precision': 0.5890066951618417, 'recall': 0.6255331986803911}
05/05/2022 10:55:42 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 10:55:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:55:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:55:48 - INFO - training_utils.postprocess -   45 (1.12 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:55:48 - INFO - __main__ -   test_loss: 5.238
05/05/2022 10:55:48 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6565714285714286, 'f1': 0.5127789080621101, 'precision': 0.574286356623914, 'recall': 0.6251947154485826}
