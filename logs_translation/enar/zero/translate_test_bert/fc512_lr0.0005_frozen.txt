05/05/2022 11:57:08 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:57:08 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_bert/fc512_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_bert/fc512_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:57:08 - INFO - __main__ -   device: cuda
05/05/2022 11:57:08 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:57:08 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 11:57:08 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 11:57:08 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   test sentence max len: 346
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   val OOV: 160 (0.53%) out of 30124 running tokens are OOV
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   test OOV: 128 (0.27%) out of 47211 running tokens are OOV
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:57:10 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:57:14 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 11:57:16 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:57:16 - INFO - __main__ -   the model has 404,501 trainable parameters
05/05/2022 11:57:16 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:57:28 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:28 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:28 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:28 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:28 - INFO - __main__ -   Epoch: 0001 | Time: 0m_12s | train_loss: 5.522 | val_loss: 6.242
05/05/2022 11:57:28 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4697802197802198, 'f1': 0.45236185568094, 'precision': 0.4293383509536633, 'recall': 0.7019678279721633}
05/05/2022 11:57:28 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:57:28 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:57:40 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:40 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:40 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:40 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 4.724 | val_loss: 5.623
05/05/2022 11:57:40 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6140109890109889, 'f1': 0.5595444087007422, 'precision': 0.6085688206980883, 'recall': 0.662916885349792}
05/05/2022 11:57:40 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:57:41 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:57:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:57:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:57:53 - INFO - training_utils.postprocess -   193 (9.28 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:57:53 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 4.424 | val_loss: 5.943
05/05/2022 11:57:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6785714285714287, 'f1': 0.5811808555072705, 'precision': 0.6368706231674556, 'recall': 0.6436541768013694}
05/05/2022 11:57:53 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:57:54 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:58:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:06 - INFO - training_utils.postprocess -   82 (3.94 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:06 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 4.148 | val_loss: 5.826
05/05/2022 11:58:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6373626373626374, 'f1': 0.590051979023336, 'precision': 0.629249438898812, 'recall': 0.6982280510676464}
05/05/2022 11:58:06 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:58:07 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:58:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:19 - INFO - training_utils.postprocess -   32 (1.54 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:19 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 4.162 | val_loss: 5.497
05/05/2022 11:58:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6895604395604397, 'f1': 0.5740890385800999, 'precision': 0.7324666417855575, 'recall': 0.5768399999871924}
05/05/2022 11:58:19 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:58:30 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:30 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:30 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:30 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 3.975 | val_loss: 5.182
05/05/2022 11:58:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.685989010989011, 'f1': 0.5839648129726743, 'precision': 0.7109258551455936, 'recall': 0.5675747956920542}
05/05/2022 11:58:30 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:58:43 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:43 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:43 - INFO - training_utils.postprocess -   41 (1.97 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:43 - INFO - __main__ -   Epoch: 0007 | Time: 0m_12s | train_loss: 3.896 | val_loss: 6.866
05/05/2022 11:58:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5917582417582418, 'f1': 0.554271059879549, 'precision': 0.6266503153517885, 'recall': 0.6900233971187728}
05/05/2022 11:58:43 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:58:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:52 - INFO - training_utils.postprocess -   10 (0.48 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:52 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 3.638 | val_loss: 5.664
05/05/2022 11:58:52 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6854395604395604, 'f1': 0.6112513352947267, 'precision': 0.6936837349652534, 'recall': 0.6564905265720709}
05/05/2022 11:58:52 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:58:53 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:58:59 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:58:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:59 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:58:59 - INFO - training_utils.postprocess -   38 (1.83 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:58:59 - INFO - __main__ -   Epoch: 0009 | Time: 0m_5s | train_loss: 3.706 | val_loss: 6.574
05/05/2022 11:58:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6255494505494505, 'f1': 0.5811220486801817, 'precision': 0.648790797235694, 'recall': 0.6956843288511332}
05/05/2022 11:58:59 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:59:10 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:59:10 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:10 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:59:10 - INFO - training_utils.postprocess -   25 (1.20 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:10 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 3.618 | val_loss: 5.792
05/05/2022 11:59:10 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6752747252747253, 'f1': 0.6089504003763037, 'precision': 0.678875185540322, 'recall': 0.6758026152689655}
05/05/2022 11:59:10 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:59:21 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:59:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:21 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:59:21 - INFO - training_utils.postprocess -   26 (1.25 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:21 - INFO - __main__ -   Epoch: 0011 | Time: 0m_10s | train_loss: 3.450 | val_loss: 5.522
05/05/2022 11:59:21 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6684065934065934, 'f1': 0.6150944482232706, 'precision': 0.6462775402080725, 'recall': 0.6767456757557913}
05/05/2022 11:59:21 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:59:22 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:59:34 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:59:34 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:34 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:59:34 - INFO - training_utils.postprocess -   36 (1.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:34 - INFO - __main__ -   Epoch: 0012 | Time: 0m_12s | train_loss: 3.454 | val_loss: 6.237
05/05/2022 11:59:34 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6821428571428572, 'f1': 0.59403995396577, 'precision': 0.7063892840868828, 'recall': 0.6473919352810765}
05/05/2022 11:59:34 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:59:46 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:59:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:46 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:59:46 - INFO - training_utils.postprocess -   31 (1.49 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:46 - INFO - __main__ -   Epoch: 0013 | Time: 0m_12s | train_loss: 3.348 | val_loss: 6.794
05/05/2022 11:59:46 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6208791208791208, 'f1': 0.567615424460611, 'precision': 0.6387604107256664, 'recall': 0.6764754959222341}
05/05/2022 11:59:46 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:59:58 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:59:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:58 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:59:58 - INFO - training_utils.postprocess -   12 (0.58 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:59:58 - INFO - __main__ -   Epoch: 0014 | Time: 0m_12s | train_loss: 3.299 | val_loss: 7.436
05/05/2022 11:59:58 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5818681318681319, 'f1': 0.557793117117929, 'precision': 0.596057431726351, 'recall': 0.6918851362523947}
05/05/2022 11:59:58 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 12:00:10 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:00:10 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:10 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:00:10 - INFO - training_utils.postprocess -   20 (0.96 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:10 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 3.279 | val_loss: 6.808
05/05/2022 12:00:10 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6313186813186814, 'f1': 0.581623963854554, 'precision': 0.6338528126731776, 'recall': 0.6802872334044919}
05/05/2022 12:00:10 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 12:00:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:00:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:00:19 - INFO - training_utils.postprocess -   45 (2.16 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:19 - INFO - __main__ -   Epoch: 0016 | Time: 0m_8s | train_loss: 3.102 | val_loss: 6.239
05/05/2022 12:00:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6703296703296704, 'f1': 0.5980030031293506, 'precision': 0.673197696085108, 'recall': 0.6525095283848381}
05/05/2022 12:00:19 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 12:00:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:00:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:00:31 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:31 - INFO - __main__ -   Epoch: 0017 | Time: 0m_12s | train_loss: 3.003 | val_loss: 6.891
05/05/2022 12:00:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6365384615384615, 'f1': 0.5893379498073157, 'precision': 0.6406611148881982, 'recall': 0.6747079649680805}
05/05/2022 12:00:31 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 12:00:43 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:00:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:43 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:00:43 - INFO - training_utils.postprocess -   40 (1.92 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:43 - INFO - __main__ -   Epoch: 0018 | Time: 0m_12s | train_loss: 3.184 | val_loss: 6.344
05/05/2022 12:00:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6684065934065935, 'f1': 0.5980086087730935, 'precision': 0.6696928890080642, 'recall': 0.6554553401301957}
05/05/2022 12:00:43 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 12:00:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:00:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:00:55 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:00:55 - INFO - __main__ -   Epoch: 0019 | Time: 0m_12s | train_loss: 2.972 | val_loss: 6.291
05/05/2022 12:00:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6601648351648352, 'f1': 0.6022032843364428, 'precision': 0.6504056137909655, 'recall': 0.6639834079935235}
05/05/2022 12:00:55 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 12:01:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:01:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:01:06 - INFO - training_utils.postprocess -   43 (2.07 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:06 - INFO - __main__ -   Epoch: 0020 | Time: 0m_11s | train_loss: 2.960 | val_loss: 8.294
05/05/2022 12:01:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6, 'f1': 0.5583355118091037, 'precision': 0.6185127959316663, 'recall': 0.6831586890040647}
05/05/2022 12:01:06 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 12:01:17 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:01:17 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:17 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:01:17 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:17 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 2.834 | val_loss: 6.609
05/05/2022 12:01:17 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.646978021978022, 'f1': 0.5990960950213912, 'precision': 0.6305878572652907, 'recall': 0.665143112675111}
05/05/2022 12:01:17 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 12:01:17 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 12:01:17 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_bert/fc512_lr0.0005_frozen
05/05/2022 12:01:18 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_bert/fc512_lr0.0005_frozen
05/05/2022 12:01:24 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:01:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:24 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:01:24 - INFO - training_utils.postprocess -   26 (1.25 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:24 - INFO - __main__ -   best_val_loss: 5.522
05/05/2022 12:01:24 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6684065934065934, 'f1': 0.6150944482232706, 'precision': 0.6462775402080725, 'recall': 0.6767456757557913}
05/05/2022 12:01:24 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 12:01:33 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:01:33 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:33 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:01:33 - INFO - training_utils.postprocess -   51 (1.27 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:33 - INFO - __main__ -   test_loss: 5.561
05/05/2022 12:01:33 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6682857142857144, 'f1': 0.5695309248361814, 'precision': 0.5693027752001015, 'recall': 0.6622486580916224}
