05/05/2022 12:12:29 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 12:12:29 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_bert/fc512_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_bert/fc512_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 12:12:29 - INFO - __main__ -   device: cuda
05/05/2022 12:12:29 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 12:12:29 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 12:12:29 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 12:12:29 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 12:12:31 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 12:12:31 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 12:12:31 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 12:12:31 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 12:12:31 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 12:12:31 - INFO - data_utils.preprocess_bert -   test sentence max len: 346
05/05/2022 12:12:31 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   val OOV: 160 (0.53%) out of 30124 running tokens are OOV
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   test OOV: 128 (0.27%) out of 47211 running tokens are OOV
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:12:32 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 12:12:33 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 12:12:36 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 12:12:36 - INFO - __main__ -   the model has 404,501 trainable parameters
05/05/2022 12:12:36 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 12:12:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:12:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:12:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:12:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:12:48 - INFO - __main__ -   Epoch: 0001 | Time: 0m_12s | train_loss: 5.407 | val_loss: 6.802
05/05/2022 12:12:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5315934065934066, 'f1': 0.5423732390294502, 'precision': 0.5738164037484034, 'recall': 0.6762420411264342}
05/05/2022 12:12:48 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:12:48 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:12:58 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:12:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:12:58 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:12:58 - INFO - training_utils.postprocess -   5 (0.24 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:12:58 - INFO - __main__ -   Epoch: 0002 | Time: 0m_10s | train_loss: 4.541 | val_loss: 6.693
05/05/2022 12:12:58 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5598901098901099, 'f1': 0.5432839515083194, 'precision': 0.5959690320386315, 'recall': 0.7031407521508678}
05/05/2022 12:12:58 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:12:59 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:13:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:13:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:13:11 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:11 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 4.078 | val_loss: 5.620
05/05/2022 12:13:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.693956043956044, 'f1': 0.5602830843097188, 'precision': 0.7581408107718799, 'recall': 0.5348278032526588}
05/05/2022 12:13:11 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:13:12 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:13:24 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:13:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:24 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:13:24 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:24 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 3.948 | val_loss: 5.967
05/05/2022 12:13:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6604395604395605, 'f1': 0.5917700270332883, 'precision': 0.6546442302431776, 'recall': 0.6671538420867488}
05/05/2022 12:13:24 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:13:25 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:13:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:13:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:13:37 - INFO - training_utils.postprocess -   6 (0.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:37 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 4.177 | val_loss: 7.075
05/05/2022 12:13:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.606043956043956, 'f1': 0.561317910248832, 'precision': 0.6144259945244902, 'recall': 0.6935558838459334}
05/05/2022 12:13:37 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 12:13:49 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:13:49 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:49 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:13:49 - INFO - training_utils.postprocess -   36 (1.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:13:49 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 3.866 | val_loss: 5.498
05/05/2022 12:13:49 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6846153846153846, 'f1': 0.6128316382605229, 'precision': 0.6725295065948425, 'recall': 0.6279728409115279}
05/05/2022 12:13:49 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:13:50 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:14:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:14:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:14:02 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:02 - INFO - __main__ -   Epoch: 0007 | Time: 0m_12s | train_loss: 3.810 | val_loss: 6.256
05/05/2022 12:14:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6274725274725274, 'f1': 0.5655383885661039, 'precision': 0.6638140563018481, 'recall': 0.6661916592593718}
05/05/2022 12:14:02 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 12:14:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:14:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:14:14 - INFO - training_utils.postprocess -   21 (1.01 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:14 - INFO - __main__ -   Epoch: 0008 | Time: 0m_12s | train_loss: 3.491 | val_loss: 6.787
05/05/2022 12:14:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6840659340659342, 'f1': 0.5845193045042063, 'precision': 0.7006977049026046, 'recall': 0.618345540927085}
05/05/2022 12:14:14 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 12:14:26 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:14:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:26 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:14:26 - INFO - training_utils.postprocess -   62 (2.98 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:26 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 3.617 | val_loss: 7.313
05/05/2022 12:14:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6423076923076924, 'f1': 0.5672182650343134, 'precision': 0.6615211270185908, 'recall': 0.6725271431743355}
05/05/2022 12:14:26 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 12:14:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:14:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:14:37 - INFO - training_utils.postprocess -   38 (1.83 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:37 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 3.476 | val_loss: 6.266
05/05/2022 12:14:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.623076923076923, 'f1': 0.5886218760777379, 'precision': 0.610327109531174, 'recall': 0.6837418282680463}
05/05/2022 12:14:37 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 12:14:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:14:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:14:48 - INFO - training_utils.postprocess -   17 (0.82 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:14:48 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 3.303 | val_loss: 6.121
05/05/2022 12:14:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6728021978021979, 'f1': 0.6192509477255407, 'precision': 0.6461189593199025, 'recall': 0.6465659582845793}
05/05/2022 12:14:48 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:14:49 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:15:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:01 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:01 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 3.338 | val_loss: 8.860
05/05/2022 12:15:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6049450549450549, 'f1': 0.5425859314537195, 'precision': 0.6069344678794354, 'recall': 0.650797067257637}
05/05/2022 12:15:01 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 12:15:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:14 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:14 - INFO - __main__ -   Epoch: 0013 | Time: 0m_12s | train_loss: 3.112 | val_loss: 7.411
05/05/2022 12:15:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6450549450549449, 'f1': 0.5902314675785194, 'precision': 0.633362900258674, 'recall': 0.6732499822600978}
05/05/2022 12:15:14 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 12:15:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:25 - INFO - training_utils.postprocess -   38 (1.83 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:25 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 3.051 | val_loss: 7.181
05/05/2022 12:15:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6453296703296703, 'f1': 0.5983165384673582, 'precision': 0.6419031540811931, 'recall': 0.6735814499129942}
05/05/2022 12:15:25 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 12:15:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:31 - INFO - training_utils.postprocess -   47 (2.26 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:31 - INFO - __main__ -   Epoch: 0015 | Time: 0m_5s | train_loss: 3.101 | val_loss: 9.200
05/05/2022 12:15:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5824175824175823, 'f1': 0.5391186620248682, 'precision': 0.5994017609829418, 'recall': 0.6764884886633441}
05/05/2022 12:15:31 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 12:15:36 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:36 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:36 - INFO - training_utils.postprocess -   36 (1.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:36 - INFO - __main__ -   Epoch: 0016 | Time: 0m_5s | train_loss: 2.966 | val_loss: 7.800
05/05/2022 12:15:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6516483516483518, 'f1': 0.5571016937031666, 'precision': 0.6534173134294574, 'recall': 0.581378860905079}
05/05/2022 12:15:36 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 12:15:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:42 - INFO - training_utils.postprocess -   42 (2.02 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:42 - INFO - __main__ -   Epoch: 0017 | Time: 0m_5s | train_loss: 2.869 | val_loss: 7.284
05/05/2022 12:15:42 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6543956043956045, 'f1': 0.5744500833813052, 'precision': 0.6594131176966497, 'recall': 0.5999723925838707}
05/05/2022 12:15:42 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 12:15:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:47 - INFO - training_utils.postprocess -   21 (1.01 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:47 - INFO - __main__ -   Epoch: 0018 | Time: 0m_5s | train_loss: 2.989 | val_loss: 7.317
05/05/2022 12:15:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6642857142857144, 'f1': 0.5761539402740345, 'precision': 0.6675626665903637, 'recall': 0.5971387730140826}
05/05/2022 12:15:47 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 12:15:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:53 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:53 - INFO - __main__ -   Epoch: 0019 | Time: 0m_5s | train_loss: 2.927 | val_loss: 7.138
05/05/2022 12:15:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6598901098901099, 'f1': 0.5915482473341445, 'precision': 0.6500448461673223, 'recall': 0.6369756772657268}
05/05/2022 12:15:53 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 12:15:58 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:15:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:58 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:15:58 - INFO - training_utils.postprocess -   26 (1.25 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:15:58 - INFO - __main__ -   Epoch: 0020 | Time: 0m_5s | train_loss: 2.769 | val_loss: 8.483
05/05/2022 12:15:58 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6266483516483516, 'f1': 0.5794151895412459, 'precision': 0.6312148270893309, 'recall': 0.6680061612028994}
05/05/2022 12:15:58 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 12:16:04 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:16:04 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:16:04 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:16:04 - INFO - training_utils.postprocess -   29 (1.39 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:16:04 - INFO - __main__ -   Epoch: 0021 | Time: 0m_5s | train_loss: 2.754 | val_loss: 9.190
05/05/2022 12:16:04 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6203296703296705, 'f1': 0.5721800157788284, 'precision': 0.6179763212543191, 'recall': 0.6573890083334758}
05/05/2022 12:16:04 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 12:16:04 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 12:16:04 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_bert/fc512_lr0.005_frozen
05/05/2022 12:16:04 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_bert/fc512_lr0.005_frozen
05/05/2022 12:16:07 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:16:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:16:07 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:16:07 - INFO - training_utils.postprocess -   17 (0.82 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:16:07 - INFO - __main__ -   best_val_loss: 6.121
05/05/2022 12:16:07 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6728021978021979, 'f1': 0.6192509477255407, 'precision': 0.6461189593199025, 'recall': 0.6465659582845793}
05/05/2022 12:16:07 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 12:16:12 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:16:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:16:12 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:16:12 - INFO - training_utils.postprocess -   40 (1.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:16:12 - INFO - __main__ -   test_loss: 6.010
05/05/2022 12:16:12 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6762857142857143, 'f1': 0.5775258862406323, 'precision': 0.5784778869016243, 'recall': 0.6289070349631966}
