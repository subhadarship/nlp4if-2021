05/05/2022 10:55:49 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 10:55:49 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_bert/fc128_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_bert/fc128_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 10:55:49 - INFO - __main__ -   device: cuda
05/05/2022 10:55:49 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 10:55:49 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 10:55:49 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 10:55:49 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   test sentence max len: 346
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 10:55:51 - INFO - data_utils.preprocess_bert -   val OOV: 160 (0.53%) out of 30124 running tokens are OOV
05/05/2022 10:55:52 - INFO - data_utils.preprocess_bert -   test OOV: 128 (0.27%) out of 47211 running tokens are OOV
05/05/2022 10:55:52 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 10:55:52 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:55:52 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:55:52 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:55:52 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 10:55:52 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 10:55:53 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 10:55:55 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 10:55:55 - INFO - __main__ -   the model has 101,141 trainable parameters
05/05/2022 10:55:55 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 10:56:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:01 - INFO - __main__ -   Epoch: 0001 | Time: 0m_5s | train_loss: 5.731 | val_loss: 5.928
05/05/2022 10:56:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.46483516483516485, 'f1': 0.44624631775936574, 'precision': 0.3460160224682281, 'recall': 0.6992149062906702}
05/05/2022 10:56:01 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:56:01 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:56:07 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:07 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:07 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:07 - INFO - __main__ -   Epoch: 0002 | Time: 0m_5s | train_loss: 4.974 | val_loss: 6.163
05/05/2022 10:56:07 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4947802197802198, 'f1': 0.4775127504823241, 'precision': 0.4552409868860864, 'recall': 0.6930051840095193}
05/05/2022 10:56:07 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:56:08 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:56:13 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:13 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:13 - INFO - training_utils.postprocess -   97 (4.66 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:13 - INFO - __main__ -   Epoch: 0003 | Time: 0m_5s | train_loss: 4.728 | val_loss: 5.779
05/05/2022 10:56:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.559065934065934, 'f1': 0.5256923902099061, 'precision': 0.5614018786871245, 'recall': 0.6870598862785072}
05/05/2022 10:56:13 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:56:15 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:56:20 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:20 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:20 - INFO - training_utils.postprocess -   26 (1.25 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:20 - INFO - __main__ -   Epoch: 0004 | Time: 0m_5s | train_loss: 4.464 | val_loss: 6.185
05/05/2022 10:56:20 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5489010989010988, 'f1': 0.5245431858953831, 'precision': 0.5701906346650233, 'recall': 0.6946965417723057}
05/05/2022 10:56:20 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:56:26 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:26 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:26 - INFO - training_utils.postprocess -   43 (2.07 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:26 - INFO - __main__ -   Epoch: 0005 | Time: 0m_5s | train_loss: 4.439 | val_loss: 5.451
05/05/2022 10:56:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6695054945054946, 'f1': 0.5778638316635863, 'precision': 0.6834490792189137, 'recall': 0.6386673768145693}
05/05/2022 10:56:26 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:56:27 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:56:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:32 - INFO - training_utils.postprocess -   16 (0.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:32 - INFO - __main__ -   Epoch: 0006 | Time: 0m_5s | train_loss: 4.284 | val_loss: 5.322
05/05/2022 10:56:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6714285714285715, 'f1': 0.6002012385129659, 'precision': 0.6557474148053871, 'recall': 0.6508729437620849}
05/05/2022 10:56:32 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:56:33 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:56:39 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:39 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:39 - INFO - training_utils.postprocess -   35 (1.68 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:39 - INFO - __main__ -   Epoch: 0007 | Time: 0m_5s | train_loss: 4.138 | val_loss: 6.496
05/05/2022 10:56:39 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5637362637362637, 'f1': 0.5447888069806595, 'precision': 0.5836820804456525, 'recall': 0.7002473220650346}
05/05/2022 10:56:39 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:56:44 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:44 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:44 - INFO - training_utils.postprocess -   26 (1.25 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:44 - INFO - __main__ -   Epoch: 0008 | Time: 0m_5s | train_loss: 3.966 | val_loss: 5.642
05/05/2022 10:56:44 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6527472527472528, 'f1': 0.5926854839752697, 'precision': 0.6469601194267227, 'recall': 0.6846208940676323}
05/05/2022 10:56:44 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:56:50 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:50 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:50 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:50 - INFO - __main__ -   Epoch: 0009 | Time: 0m_5s | train_loss: 3.973 | val_loss: 5.846
05/05/2022 10:56:50 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6126373626373626, 'f1': 0.5802367521722716, 'precision': 0.6037042167718347, 'recall': 0.6955047123420368}
05/05/2022 10:56:50 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:56:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:56:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:56:55 - INFO - training_utils.postprocess -   71 (3.41 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:56:55 - INFO - __main__ -   Epoch: 0010 | Time: 0m_5s | train_loss: 3.900 | val_loss: 6.038
05/05/2022 10:56:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6337912087912088, 'f1': 0.5837348429098961, 'precision': 0.6421177082285003, 'recall': 0.6941104640134368}
05/05/2022 10:56:55 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:57:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:01 - INFO - training_utils.postprocess -   39 (1.88 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:01 - INFO - __main__ -   Epoch: 0011 | Time: 0m_5s | train_loss: 3.730 | val_loss: 5.414
05/05/2022 10:57:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6821428571428572, 'f1': 0.609639501545064, 'precision': 0.6889564553892854, 'recall': 0.6577804389334118}
05/05/2022 10:57:01 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:57:02 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:57:07 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:07 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:07 - INFO - training_utils.postprocess -   48 (2.31 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:07 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 3.748 | val_loss: 6.197
05/05/2022 10:57:07 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6695054945054946, 'f1': 0.5878946479580199, 'precision': 0.6848038803613593, 'recall': 0.6677715260972901}
05/05/2022 10:57:07 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:57:13 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:13 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:13 - INFO - training_utils.postprocess -   46 (2.21 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:13 - INFO - __main__ -   Epoch: 0013 | Time: 0m_5s | train_loss: 3.633 | val_loss: 6.809
05/05/2022 10:57:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5978021978021978, 'f1': 0.5542609459076683, 'precision': 0.6225711004033395, 'recall': 0.6861377769635408}
05/05/2022 10:57:13 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:57:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:18 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:18 - INFO - training_utils.postprocess -   32 (1.54 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:18 - INFO - __main__ -   Epoch: 0014 | Time: 0m_5s | train_loss: 3.633 | val_loss: 6.298
05/05/2022 10:57:18 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6101648351648352, 'f1': 0.5753199508540325, 'precision': 0.6221065693144707, 'recall': 0.6929851972234301}
05/05/2022 10:57:18 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:57:24 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:24 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:24 - INFO - training_utils.postprocess -   28 (1.35 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:24 - INFO - __main__ -   Epoch: 0015 | Time: 0m_5s | train_loss: 3.582 | val_loss: 6.209
05/05/2022 10:57:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6129120879120878, 'f1': 0.5762436783523185, 'precision': 0.6085269086800909, 'recall': 0.6884819194563206}
05/05/2022 10:57:24 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:57:29 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:29 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:29 - INFO - training_utils.postprocess -   37 (1.78 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:29 - INFO - __main__ -   Epoch: 0016 | Time: 0m_5s | train_loss: 3.483 | val_loss: 5.790
05/05/2022 10:57:29 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.676098901098901, 'f1': 0.6061339965470418, 'precision': 0.6796371382326931, 'recall': 0.6681870995186436}
05/05/2022 10:57:29 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 10:57:35 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:35 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:35 - INFO - training_utils.postprocess -   16 (0.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:35 - INFO - __main__ -   Epoch: 0017 | Time: 0m_5s | train_loss: 3.393 | val_loss: 6.121
05/05/2022 10:57:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6450549450549449, 'f1': 0.6015521850765057, 'precision': 0.6414841116558001, 'recall': 0.688125780191222}
05/05/2022 10:57:35 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 10:57:40 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:40 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:40 - INFO - training_utils.postprocess -   27 (1.30 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:41 - INFO - __main__ -   Epoch: 0018 | Time: 0m_5s | train_loss: 3.536 | val_loss: 6.258
05/05/2022 10:57:41 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6464285714285714, 'f1': 0.5959775674065172, 'precision': 0.6554080189168472, 'recall': 0.6859474628642672}
05/05/2022 10:57:41 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 10:57:46 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:46 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:46 - INFO - training_utils.postprocess -   21 (1.01 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:46 - INFO - __main__ -   Epoch: 0019 | Time: 0m_5s | train_loss: 3.355 | val_loss: 6.142
05/05/2022 10:57:46 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6434065934065935, 'f1': 0.592898299633755, 'precision': 0.6380066633309548, 'recall': 0.6793104175763135}
05/05/2022 10:57:46 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 10:57:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:52 - INFO - training_utils.postprocess -   36 (1.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:52 - INFO - __main__ -   Epoch: 0020 | Time: 0m_5s | train_loss: 3.364 | val_loss: 6.654
05/05/2022 10:57:52 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6428571428571429, 'f1': 0.5837725354495066, 'precision': 0.6530454870932935, 'recall': 0.6769662799545129}
05/05/2022 10:57:52 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 10:57:57 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:57:57 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:57 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:57:57 - INFO - training_utils.postprocess -   12 (0.58 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:57:57 - INFO - __main__ -   Epoch: 0021 | Time: 0m_5s | train_loss: 3.242 | val_loss: 5.790
05/05/2022 10:57:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.668956043956044, 'f1': 0.6153095476304358, 'precision': 0.65403353065374, 'recall': 0.6734886314273184}
05/05/2022 10:57:57 - INFO - __main__ -   	--Found new best val f1
05/05/2022 10:57:58 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 10:58:03 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:03 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:03 - INFO - training_utils.postprocess -   42 (2.02 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:03 - INFO - __main__ -   Epoch: 0022 | Time: 0m_5s | train_loss: 3.263 | val_loss: 6.261
05/05/2022 10:58:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6642857142857144, 'f1': 0.5962984900947925, 'precision': 0.673704336916325, 'recall': 0.6593914582725483}
05/05/2022 10:58:03 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 10:58:09 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:09 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:09 - INFO - training_utils.postprocess -   15 (0.72 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:09 - INFO - __main__ -   Epoch: 0023 | Time: 0m_5s | train_loss: 3.234 | val_loss: 6.061
05/05/2022 10:58:09 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6804945054945055, 'f1': 0.604690918929526, 'precision': 0.6965658894677335, 'recall': 0.6334099076481406}
05/05/2022 10:58:09 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 10:58:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:14 - INFO - training_utils.postprocess -   20 (0.96 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:15 - INFO - __main__ -   Epoch: 0024 | Time: 0m_5s | train_loss: 3.161 | val_loss: 5.865
05/05/2022 10:58:15 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6728021978021979, 'f1': 0.60667097451212, 'precision': 0.6627343163123085, 'recall': 0.6548284553166882}
05/05/2022 10:58:15 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 10:58:20 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:20 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:20 - INFO - training_utils.postprocess -   26 (1.25 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:20 - INFO - __main__ -   Epoch: 0025 | Time: 0m_5s | train_loss: 3.208 | val_loss: 7.095
05/05/2022 10:58:20 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6299450549450549, 'f1': 0.5764235505470781, 'precision': 0.6431916339218728, 'recall': 0.6755876054410325}
05/05/2022 10:58:20 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 10:58:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:25 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:26 - INFO - __main__ -   Epoch: 0026 | Time: 0m_5s | train_loss: 3.092 | val_loss: 6.463
05/05/2022 10:58:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6324175824175825, 'f1': 0.5916278577748019, 'precision': 0.62366507235645, 'recall': 0.683139497992925}
05/05/2022 10:58:26 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 10:58:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:31 - INFO - training_utils.postprocess -   38 (1.83 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:31 - INFO - __main__ -   Epoch: 0027 | Time: 0m_5s | train_loss: 3.091 | val_loss: 6.468
05/05/2022 10:58:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.673901098901099, 'f1': 0.5936472277806841, 'precision': 0.6845379569536388, 'recall': 0.6410755491133279}
05/05/2022 10:58:31 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 10:58:36 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:36 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:36 - INFO - training_utils.postprocess -   25 (1.20 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:37 - INFO - __main__ -   Epoch: 0028 | Time: 0m_5s | train_loss: 3.026 | val_loss: 5.950
05/05/2022 10:58:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6752747252747252, 'f1': 0.6058721919039227, 'precision': 0.6710150988460866, 'recall': 0.6471562284578386}
05/05/2022 10:58:37 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 10:58:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:42 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:42 - INFO - __main__ -   Epoch: 0029 | Time: 0m_5s | train_loss: 3.063 | val_loss: 6.973
05/05/2022 10:58:42 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6532967032967033, 'f1': 0.5900884437848803, 'precision': 0.6669159007564099, 'recall': 0.6730816270122629}
05/05/2022 10:58:42 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 10:58:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:48 - INFO - training_utils.postprocess -   19 (0.91 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:48 - INFO - __main__ -   Epoch: 0030 | Time: 0m_5s | train_loss: 3.104 | val_loss: 5.998
05/05/2022 10:58:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6744505494505495, 'f1': 0.6091878366846547, 'precision': 0.668405111141903, 'recall': 0.6567399448272695}
05/05/2022 10:58:48 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 10:58:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:53 - INFO - training_utils.postprocess -   19 (0.91 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:53 - INFO - __main__ -   Epoch: 0031 | Time: 0m_5s | train_loss: 2.957 | val_loss: 6.440
05/05/2022 10:58:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6634615384615384, 'f1': 0.588814421957165, 'precision': 0.6801587362905009, 'recall': 0.6536612590008544}
05/05/2022 10:58:53 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 10:58:53 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 10:58:53 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_bert/fc128_lr0.0005_frozen
05/05/2022 10:58:53 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_bert/fc128_lr0.0005_frozen
05/05/2022 10:58:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:58:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:58:56 - INFO - training_utils.postprocess -   12 (0.58 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:58:56 - INFO - __main__ -   best_val_loss: 5.790
05/05/2022 10:58:56 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.668956043956044, 'f1': 0.6153095476304358, 'precision': 0.65403353065374, 'recall': 0.6734886314273184}
05/05/2022 10:58:56 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 10:59:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 10:59:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:59:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 10:59:01 - INFO - training_utils.postprocess -   29 (0.72 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 10:59:01 - INFO - __main__ -   test_loss: 5.783
05/05/2022 10:59:01 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6551428571428571, 'f1': 0.5595068640041951, 'precision': 0.5764709190034029, 'recall': 0.6434845259000245}
