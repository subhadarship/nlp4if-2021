05/05/2022 11:22:00 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:22:00 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_bert/fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_bert/fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:22:00 - INFO - __main__ -   device: cuda
05/05/2022 11:22:00 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:22:00 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 11:22:00 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 11:22:00 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   test sentence max len: 346
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   val OOV: 160 (0.53%) out of 30124 running tokens are OOV
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   test OOV: 128 (0.27%) out of 47211 running tokens are OOV
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:22:02 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:22:04 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 11:22:06 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:22:06 - INFO - __main__ -   the model has 202,261 trainable parameters
05/05/2022 11:22:06 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:22:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:11 - INFO - __main__ -   Epoch: 0001 | Time: 0m_5s | train_loss: 5.624 | val_loss: 6.290
05/05/2022 11:22:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.46428571428571425, 'f1': 0.44634525141871706, 'precision': 0.37851348894691345, 'recall': 0.6998526613927111}
05/05/2022 11:22:11 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:22:12 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:22:17 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:17 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:17 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:17 - INFO - training_utils.postprocess -   9 (0.43 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:17 - INFO - __main__ -   Epoch: 0002 | Time: 0m_5s | train_loss: 4.843 | val_loss: 5.929
05/05/2022 11:22:17 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.556043956043956, 'f1': 0.5178727019350294, 'precision': 0.5721807507831709, 'recall': 0.6758371633196159}
05/05/2022 11:22:17 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:22:19 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:22:24 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:24 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:24 - INFO - training_utils.postprocess -   257 (12.36 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:24 - INFO - __main__ -   Epoch: 0003 | Time: 0m_5s | train_loss: 4.552 | val_loss: 5.943
05/05/2022 11:22:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6387362637362637, 'f1': 0.5642987365730036, 'precision': 0.6558250243137665, 'recall': 0.6687119504305714}
05/05/2022 11:22:24 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:22:26 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:22:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:31 - INFO - training_utils.postprocess -   59 (2.84 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:31 - INFO - __main__ -   Epoch: 0004 | Time: 0m_5s | train_loss: 4.288 | val_loss: 6.133
05/05/2022 11:22:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5903846153846154, 'f1': 0.555930710263398, 'precision': 0.5913995140922707, 'recall': 0.6969025575992959}
05/05/2022 11:22:31 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:22:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:37 - INFO - training_utils.postprocess -   43 (2.07 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:37 - INFO - __main__ -   Epoch: 0005 | Time: 0m_5s | train_loss: 4.275 | val_loss: 5.420
05/05/2022 11:22:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6821428571428572, 'f1': 0.5751544620139574, 'precision': 0.7174556780872612, 'recall': 0.5925550164164946}
05/05/2022 11:22:37 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:22:38 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:22:43 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:43 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:43 - INFO - training_utils.postprocess -   25 (1.20 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:43 - INFO - __main__ -   Epoch: 0006 | Time: 0m_5s | train_loss: 4.101 | val_loss: 5.134
05/05/2022 11:22:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6868131868131869, 'f1': 0.6009482949870959, 'precision': 0.6841598731410935, 'recall': 0.6064101517693591}
05/05/2022 11:22:43 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:22:45 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:22:50 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:50 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:50 - INFO - training_utils.postprocess -   54 (2.60 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:50 - INFO - __main__ -   Epoch: 0007 | Time: 0m_5s | train_loss: 3.980 | val_loss: 6.542
05/05/2022 11:22:50 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5920329670329672, 'f1': 0.5566105248924421, 'precision': 0.6105155323761903, 'recall': 0.6862720005102334}
05/05/2022 11:22:50 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:22:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:22:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:22:56 - INFO - training_utils.postprocess -   26 (1.25 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:22:56 - INFO - __main__ -   Epoch: 0008 | Time: 0m_5s | train_loss: 3.759 | val_loss: 5.659
05/05/2022 11:22:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6733516483516484, 'f1': 0.6124433047738574, 'precision': 0.6680915590346687, 'recall': 0.6863770054366668}
05/05/2022 11:22:56 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:22:57 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:23:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:02 - INFO - training_utils.postprocess -   46 (2.21 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:02 - INFO - __main__ -   Epoch: 0009 | Time: 0m_5s | train_loss: 3.832 | val_loss: 6.090
05/05/2022 11:23:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.625, 'f1': 0.5852346910832635, 'precision': 0.6209757245278104, 'recall': 0.6946801801188672}
05/05/2022 11:23:02 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:23:08 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:08 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:08 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:08 - INFO - training_utils.postprocess -   60 (2.88 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:08 - INFO - __main__ -   Epoch: 0010 | Time: 0m_5s | train_loss: 3.721 | val_loss: 5.993
05/05/2022 11:23:08 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6489010989010989, 'f1': 0.5954300179284767, 'precision': 0.6441742110492036, 'recall': 0.6891672712131011}
05/05/2022 11:23:08 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:23:13 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:13 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:13 - INFO - training_utils.postprocess -   39 (1.88 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:13 - INFO - __main__ -   Epoch: 0011 | Time: 0m_5s | train_loss: 3.546 | val_loss: 5.481
05/05/2022 11:23:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6788461538461538, 'f1': 0.6167057168185585, 'precision': 0.6688019909583254, 'recall': 0.6697983732727746}
05/05/2022 11:23:13 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:23:15 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:23:20 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:20 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:20 - INFO - training_utils.postprocess -   71 (3.41 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:20 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 3.566 | val_loss: 6.309
05/05/2022 11:23:20 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6755494505494506, 'f1': 0.5912506751064448, 'precision': 0.6833248139470511, 'recall': 0.6593506837478761}
05/05/2022 11:23:20 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:23:26 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:26 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:26 - INFO - training_utils.postprocess -   34 (1.63 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:26 - INFO - __main__ -   Epoch: 0013 | Time: 0m_5s | train_loss: 3.453 | val_loss: 7.074
05/05/2022 11:23:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5953296703296703, 'f1': 0.5542802256918054, 'precision': 0.6331786027290432, 'recall': 0.6856698119022644}
05/05/2022 11:23:26 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:23:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:31 - INFO - training_utils.postprocess -   17 (0.82 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:31 - INFO - __main__ -   Epoch: 0014 | Time: 0m_5s | train_loss: 3.428 | val_loss: 7.311
05/05/2022 11:23:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5733516483516483, 'f1': 0.5512215233649596, 'precision': 0.5878891869374089, 'recall': 0.6916860694461849}
05/05/2022 11:23:31 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:23:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:37 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:37 - INFO - __main__ -   Epoch: 0015 | Time: 0m_5s | train_loss: 3.384 | val_loss: 6.508
05/05/2022 11:23:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6244505494505493, 'f1': 0.5832580374344023, 'precision': 0.6194564704097633, 'recall': 0.6870130928584686}
05/05/2022 11:23:37 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:23:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:42 - INFO - training_utils.postprocess -   38 (1.83 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:43 - INFO - __main__ -   Epoch: 0016 | Time: 0m_5s | train_loss: 3.256 | val_loss: 5.983
05/05/2022 11:23:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6717032967032966, 'f1': 0.6009577993456894, 'precision': 0.6674322148883606, 'recall': 0.6545031241779797}
05/05/2022 11:23:43 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:23:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:48 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:48 - INFO - __main__ -   Epoch: 0017 | Time: 0m_5s | train_loss: 3.160 | val_loss: 6.607
05/05/2022 11:23:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6357142857142856, 'f1': 0.5877352223480238, 'precision': 0.6266243256943802, 'recall': 0.6736769212089195}
05/05/2022 11:23:48 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:23:54 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:54 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:54 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:54 - INFO - training_utils.postprocess -   33 (1.59 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:54 - INFO - __main__ -   Epoch: 0018 | Time: 0m_5s | train_loss: 3.318 | val_loss: 6.210
05/05/2022 11:23:54 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6686813186813187, 'f1': 0.6016861240810826, 'precision': 0.6792674039838413, 'recall': 0.6629319454639437}
05/05/2022 11:23:54 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:23:59 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:23:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:59 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:23:59 - INFO - training_utils.postprocess -   18 (0.87 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:23:59 - INFO - __main__ -   Epoch: 0019 | Time: 0m_5s | train_loss: 3.125 | val_loss: 6.444
05/05/2022 11:23:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6445054945054945, 'f1': 0.5945959439095788, 'precision': 0.6322982955279067, 'recall': 0.6757014781044509}
05/05/2022 11:23:59 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:24:05 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:05 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:05 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:05 - INFO - training_utils.postprocess -   39 (1.88 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:05 - INFO - __main__ -   Epoch: 0020 | Time: 0m_5s | train_loss: 3.136 | val_loss: 7.669
05/05/2022 11:24:05 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6175824175824177, 'f1': 0.5662432050321822, 'precision': 0.6318340992761052, 'recall': 0.6804115374573675}
05/05/2022 11:24:05 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:24:10 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:10 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:10 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:10 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:10 - INFO - __main__ -   Epoch: 0021 | Time: 0m_5s | train_loss: 2.986 | val_loss: 6.205
05/05/2022 11:24:10 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.656043956043956, 'f1': 0.6091775910553717, 'precision': 0.642470615848661, 'recall': 0.6670771364939407}
05/05/2022 11:24:10 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:24:10 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:24:10 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_bert/fc256_lr0.0005_frozen
05/05/2022 11:24:10 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_bert/fc256_lr0.0005_frozen
05/05/2022 11:24:13 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:13 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:13 - INFO - training_utils.postprocess -   39 (1.88 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:13 - INFO - __main__ -   best_val_loss: 5.481
05/05/2022 11:24:13 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6788461538461538, 'f1': 0.6167057168185585, 'precision': 0.6688019909583254, 'recall': 0.6697983732727746}
05/05/2022 11:24:13 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:24:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:18 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:18 - INFO - training_utils.postprocess -   58 (1.45 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:18 - INFO - __main__ -   test_loss: 5.464
05/05/2022 11:24:18 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6735714285714286, 'f1': 0.5639459033508415, 'precision': 0.5792027143432422, 'recall': 0.6543534927760634}
