05/05/2022 11:30:13 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:30:13 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_bert/fc256_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_bert/fc256_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:30:13 - INFO - __main__ -   device: cuda
05/05/2022 11:30:13 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:30:13 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 11:30:13 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 11:30:13 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   test sentence max len: 346
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   val OOV: 160 (0.53%) out of 30124 running tokens are OOV
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   test OOV: 128 (0.27%) out of 47211 running tokens are OOV
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:30:15 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:30:17 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 11:30:19 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:30:19 - INFO - __main__ -   the model has 202,261 trainable parameters
05/05/2022 11:30:19 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:30:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:30:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:30:25 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:25 - INFO - __main__ -   Epoch: 0001 | Time: 0m_5s | train_loss: 5.335 | val_loss: 7.075
05/05/2022 11:30:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.48076923076923084, 'f1': 0.508399934835745, 'precision': 0.5530749432207543, 'recall': 0.7104203954523938}
05/05/2022 11:30:25 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:30:25 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:30:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:30:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:30:31 - INFO - training_utils.postprocess -   50 (2.40 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:31 - INFO - __main__ -   Epoch: 0002 | Time: 0m_5s | train_loss: 4.605 | val_loss: 6.947
05/05/2022 11:30:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5835164835164836, 'f1': 0.5593988359863908, 'precision': 0.6149247790824866, 'recall': 0.702934438145008}
05/05/2022 11:30:31 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:30:32 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:30:38 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:30:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:38 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:30:38 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:38 - INFO - __main__ -   Epoch: 0003 | Time: 0m_5s | train_loss: 4.154 | val_loss: 4.865
05/05/2022 11:30:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7035714285714285, 'f1': 0.5983581748494667, 'precision': 0.7305237537349051, 'recall': 0.5891900443015224}
05/05/2022 11:30:38 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:30:39 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:30:45 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:30:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:45 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:30:45 - INFO - training_utils.postprocess -   16 (0.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:45 - INFO - __main__ -   Epoch: 0004 | Time: 0m_5s | train_loss: 3.928 | val_loss: 5.993
05/05/2022 11:30:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6612637362637362, 'f1': 0.5937098592858002, 'precision': 0.6633656396851783, 'recall': 0.6508857430605985}
05/05/2022 11:30:45 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:30:50 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:30:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:50 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:30:50 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:50 - INFO - __main__ -   Epoch: 0005 | Time: 0m_5s | train_loss: 4.059 | val_loss: 6.173
05/05/2022 11:30:50 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6335164835164836, 'f1': 0.5837574977046728, 'precision': 0.6374628843590638, 'recall': 0.6902444120125788}
05/05/2022 11:30:50 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:30:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:30:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:30:56 - INFO - training_utils.postprocess -   43 (2.07 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:30:56 - INFO - __main__ -   Epoch: 0006 | Time: 0m_5s | train_loss: 3.908 | val_loss: 5.669
05/05/2022 11:30:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6763736263736264, 'f1': 0.6119387887816241, 'precision': 0.6592508635970944, 'recall': 0.654450103023596}
05/05/2022 11:30:56 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:30:57 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:31:03 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:03 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:03 - INFO - training_utils.postprocess -   91 (4.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:03 - INFO - __main__ -   Epoch: 0007 | Time: 0m_5s | train_loss: 3.667 | val_loss: 5.863
05/05/2022 11:31:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6521978021978023, 'f1': 0.5644420730299757, 'precision': 0.6358728300008841, 'recall': 0.5868422499708627}
05/05/2022 11:31:03 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:31:08 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:08 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:08 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:08 - INFO - training_utils.postprocess -   9 (0.43 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:08 - INFO - __main__ -   Epoch: 0008 | Time: 0m_5s | train_loss: 3.482 | val_loss: 6.677
05/05/2022 11:31:08 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6788461538461539, 'f1': 0.599944976232486, 'precision': 0.6805160164431141, 'recall': 0.6487294806762189}
05/05/2022 11:31:08 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:31:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:14 - INFO - training_utils.postprocess -   117 (5.62 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:14 - INFO - __main__ -   Epoch: 0009 | Time: 0m_5s | train_loss: 3.453 | val_loss: 7.079
05/05/2022 11:31:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6431318681318681, 'f1': 0.569472487376506, 'precision': 0.6556848701842719, 'recall': 0.6751039802154584}
05/05/2022 11:31:14 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:31:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:19 - INFO - training_utils.postprocess -   6 (0.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:19 - INFO - __main__ -   Epoch: 0010 | Time: 0m_5s | train_loss: 3.413 | val_loss: 7.320
05/05/2022 11:31:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5821428571428572, 'f1': 0.5549315615134032, 'precision': 0.578921276466334, 'recall': 0.6885919696953967}
05/05/2022 11:31:19 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:31:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:25 - INFO - training_utils.postprocess -   20 (0.96 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:25 - INFO - __main__ -   Epoch: 0011 | Time: 0m_5s | train_loss: 3.232 | val_loss: 6.437
05/05/2022 11:31:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6557692307692307, 'f1': 0.6098060632021918, 'precision': 0.6260481898450762, 'recall': 0.6560966931827791}
05/05/2022 11:31:25 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:31:30 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:30 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:30 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:30 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 3.340 | val_loss: 6.921
05/05/2022 11:31:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6557692307692307, 'f1': 0.5640173379378864, 'precision': 0.6665974081015876, 'recall': 0.5982546417094311}
05/05/2022 11:31:30 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:31:36 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:36 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:36 - INFO - training_utils.postprocess -   55 (2.64 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:36 - INFO - __main__ -   Epoch: 0013 | Time: 0m_5s | train_loss: 3.092 | val_loss: 7.487
05/05/2022 11:31:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6587912087912089, 'f1': 0.5829678887077534, 'precision': 0.6602208156604427, 'recall': 0.6500107118284245}
05/05/2022 11:31:36 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:31:41 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:41 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:41 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:41 - INFO - training_utils.postprocess -   10 (0.48 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:41 - INFO - __main__ -   Epoch: 0014 | Time: 0m_5s | train_loss: 3.011 | val_loss: 8.054
05/05/2022 11:31:41 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6101648351648352, 'f1': 0.5590199431494082, 'precision': 0.6147067803324272, 'recall': 0.6691735509613297}
05/05/2022 11:31:41 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:31:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:47 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:47 - INFO - __main__ -   Epoch: 0015 | Time: 0m_5s | train_loss: 3.105 | val_loss: 11.159
05/05/2022 11:31:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5524725274725275, 'f1': 0.5220294823811518, 'precision': 0.6132063318159029, 'recall': 0.6873776146020159}
05/05/2022 11:31:47 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:31:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:52 - INFO - training_utils.postprocess -   35 (1.68 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:52 - INFO - __main__ -   Epoch: 0016 | Time: 0m_5s | train_loss: 2.996 | val_loss: 9.528
05/05/2022 11:31:52 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6200549450549451, 'f1': 0.5452436419634996, 'precision': 0.6365456122523389, 'recall': 0.6341316106716601}
05/05/2022 11:31:52 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:31:52 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:31:52 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_bert/fc256_lr0.005_frozen
05/05/2022 11:31:52 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_bert/fc256_lr0.005_frozen
05/05/2022 11:31:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:31:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:31:55 - INFO - training_utils.postprocess -   43 (2.07 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:31:55 - INFO - __main__ -   best_val_loss: 5.669
05/05/2022 11:31:55 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6763736263736264, 'f1': 0.6119387887816241, 'precision': 0.6592508635970944, 'recall': 0.654450103023596}
05/05/2022 11:31:55 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:32:00 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:00 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:00 - INFO - training_utils.postprocess -   63 (1.57 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:00 - INFO - __main__ -   test_loss: 5.909
05/05/2022 11:32:00 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6409999999999999, 'f1': 0.5434589647666056, 'precision': 0.5587770009908133, 'recall': 0.6321701085253336}
