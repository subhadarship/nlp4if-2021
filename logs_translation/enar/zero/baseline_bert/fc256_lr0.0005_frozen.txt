05/05/2022 11:17:07 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:17:07 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/prepared_additional
	test_data_dir: ../data/prepared_test_data
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/baseline_bert/fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/baseline_bert/fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:17:07 - INFO - __main__ -   device: cuda
05/05/2022 11:17:07 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:17:07 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
05/05/2022 11:17:07 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/prepared_test_data/test.ar.tsv
05/05/2022 11:17:07 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 11:17:08 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1701 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:17:09 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:17:09 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:17:09 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:17:09 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 11:17:09 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:17:09 - INFO - data_utils.preprocess_bert -   test sentence max len: 253
05/05/2022 11:17:09 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   val OOV: 367 (0.46%) out of 78943 running tokens are OOV
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   test OOV: 710 (0.59%) out of 119602 running tokens are OOV
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:17:10 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:17:12 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 11:17:14 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:17:14 - INFO - __main__ -   the model has 202,261 trainable parameters
05/05/2022 11:17:14 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:17:23 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:17:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:23 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:17:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:23 - INFO - __main__ -   Epoch: 0001 | Time: 0m_8s | train_loss: 5.624 | val_loss: 6.465
05/05/2022 11:17:23 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44053085586382895, 'precision': 0.33895417414490375, 'recall': 0.7106831602589241}
05/05/2022 11:17:23 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:17:23 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:17:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:17:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:17:32 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:32 - INFO - __main__ -   Epoch: 0002 | Time: 0m_8s | train_loss: 4.843 | val_loss: 6.398
05/05/2022 11:17:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4576923076923077, 'f1': 0.4418731477370758, 'precision': 0.409563396054974, 'recall': 0.6806336307451089}
05/05/2022 11:17:32 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:17:33 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:17:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:17:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:17:42 - INFO - training_utils.postprocess -   917 (44.09 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:42 - INFO - __main__ -   Epoch: 0003 | Time: 0m_8s | train_loss: 4.552 | val_loss: 6.739
05/05/2022 11:17:42 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5203296703296703, 'f1': 0.4378820073849914, 'precision': 0.3992839015182438, 'recall': 0.510269386988008}
05/05/2022 11:17:42 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:17:50 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:17:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:50 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:17:50 - INFO - training_utils.postprocess -   41 (1.97 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:17:50 - INFO - __main__ -   Epoch: 0004 | Time: 0m_8s | train_loss: 4.288 | val_loss: 6.850
05/05/2022 11:17:50 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.46565934065934067, 'f1': 0.45708407008663, 'precision': 0.405552164486609, 'recall': 0.6982162015419654}
05/05/2022 11:17:50 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:17:51 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:18:00 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:00 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:00 - INFO - training_utils.postprocess -   135 (6.49 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:00 - INFO - __main__ -   Epoch: 0005 | Time: 0m_8s | train_loss: 4.275 | val_loss: 6.948
05/05/2022 11:18:00 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.560989010989011, 'f1': 0.20254146866967734, 'precision': 0.19983911353663233, 'recall': 0.24933647605509698}
05/05/2022 11:18:00 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:18:09 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:09 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:09 - INFO - training_utils.postprocess -   33 (1.59 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:09 - INFO - __main__ -   Epoch: 0006 | Time: 0m_8s | train_loss: 4.101 | val_loss: 6.527
05/05/2022 11:18:09 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5653846153846154, 'f1': 0.2405768008660721, 'precision': 0.3478543794993674, 'recall': 0.2692426911398835}
05/05/2022 11:18:09 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:18:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:18 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:18 - INFO - training_utils.postprocess -   231 (11.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:18 - INFO - __main__ -   Epoch: 0007 | Time: 0m_8s | train_loss: 3.980 | val_loss: 7.147
05/05/2022 11:18:18 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5112637362637362, 'f1': 0.4689104317505891, 'precision': 0.41053761474791084, 'recall': 0.6161769527170023}
05/05/2022 11:18:18 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:18:19 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:18:28 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:28 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:28 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:28 - INFO - training_utils.postprocess -   214 (10.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:28 - INFO - __main__ -   Epoch: 0008 | Time: 0m_8s | train_loss: 3.759 | val_loss: 6.786
05/05/2022 11:18:28 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5623626373626374, 'f1': 0.31721526852230447, 'precision': 0.39949452573351646, 'recall': 0.322183742473792}
05/05/2022 11:18:28 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:18:36 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:36 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:36 - INFO - training_utils.postprocess -   162 (7.79 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:36 - INFO - __main__ -   Epoch: 0009 | Time: 0m_8s | train_loss: 3.832 | val_loss: 6.648
05/05/2022 11:18:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5255494505494506, 'f1': 0.44307391271397406, 'precision': 0.4086145441122512, 'recall': 0.5256047439305077}
05/05/2022 11:18:36 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:18:45 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:45 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:45 - INFO - training_utils.postprocess -   226 (10.87 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:45 - INFO - __main__ -   Epoch: 0010 | Time: 0m_8s | train_loss: 3.721 | val_loss: 6.536
05/05/2022 11:18:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5596153846153846, 'f1': 0.34091185756222486, 'precision': 0.4013288617199483, 'recall': 0.3425526062355129}
05/05/2022 11:18:45 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:18:54 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:18:54 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:54 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:18:54 - INFO - training_utils.postprocess -   95 (4.57 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:18:54 - INFO - __main__ -   Epoch: 0011 | Time: 0m_8s | train_loss: 3.546 | val_loss: 6.656
05/05/2022 11:18:54 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5681318681318681, 'f1': 0.21276845502467542, 'precision': 0.28162558769028706, 'recall': 0.25491406502554315}
05/05/2022 11:18:54 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:19:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:02 - INFO - training_utils.postprocess -   40 (1.92 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:02 - INFO - __main__ -   Epoch: 0012 | Time: 0m_8s | train_loss: 3.566 | val_loss: 7.297
05/05/2022 11:19:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5631868131868132, 'f1': 0.22675947319474082, 'precision': 0.32220465739627935, 'recall': 0.26200649104654056}
05/05/2022 11:19:02 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:19:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:11 - INFO - training_utils.postprocess -   104 (5.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:11 - INFO - __main__ -   Epoch: 0013 | Time: 0m_8s | train_loss: 3.453 | val_loss: 7.059
05/05/2022 11:19:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5554945054945055, 'f1': 0.3314382799458003, 'precision': 0.39753444555059925, 'recall': 0.33511024432886527}
05/05/2022 11:19:11 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:19:20 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:20 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:20 - INFO - training_utils.postprocess -   158 (7.60 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:20 - INFO - __main__ -   Epoch: 0014 | Time: 0m_8s | train_loss: 3.428 | val_loss: 6.780
05/05/2022 11:19:20 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5456043956043956, 'f1': 0.4150150124752882, 'precision': 0.4095792880975214, 'recall': 0.4423720665906875}
05/05/2022 11:19:20 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:19:29 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:29 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:29 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:29 - INFO - __main__ -   Epoch: 0015 | Time: 0m_8s | train_loss: 3.384 | val_loss: 6.862
05/05/2022 11:19:29 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5626373626373626, 'f1': 0.25740930209459056, 'precision': 0.35322233145976656, 'recall': 0.2774870245627884}
05/05/2022 11:19:29 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:19:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:37 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:37 - INFO - __main__ -   Epoch: 0016 | Time: 0m_8s | train_loss: 3.256 | val_loss: 8.310
05/05/2022 11:19:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5741758241758241, 'f1': 0.20097597467939757, 'precision': 0.17728971089905315, 'recall': 0.2508024730568083}
05/05/2022 11:19:37 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:19:46 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:46 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:46 - INFO - __main__ -   Epoch: 0017 | Time: 0m_8s | train_loss: 3.160 | val_loss: 7.569
05/05/2022 11:19:46 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5706043956043956, 'f1': 0.21039350779233804, 'precision': 0.3022219537716243, 'recall': 0.2540825408011617}
05/05/2022 11:19:46 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:19:46 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:19:46 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/baseline_bert/fc256_lr0.0005_frozen
05/05/2022 11:19:46 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/baseline_bert/fc256_lr0.0005_frozen
05/05/2022 11:19:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:19:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:19:52 - INFO - training_utils.postprocess -   231 (11.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:19:52 - INFO - __main__ -   best_val_loss: 7.147
05/05/2022 11:19:52 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.5112637362637362, 'f1': 0.4689104317505891, 'precision': 0.41053761474791084, 'recall': 0.6161769527170023}
05/05/2022 11:19:52 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:20:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:20:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:20:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:20:02 - INFO - training_utils.postprocess -   467 (11.68 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:20:02 - INFO - __main__ -   test_loss: 6.664
05/05/2022 11:20:02 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.5984285714285714, 'f1': 0.4571031430832703, 'precision': 0.40472062923339325, 'recall': 0.5666533059162953}
