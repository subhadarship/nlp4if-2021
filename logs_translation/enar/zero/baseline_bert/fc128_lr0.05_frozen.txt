05/05/2022 11:10:29 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:10:29 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/prepared_additional
	test_data_dir: ../data/prepared_test_data
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/baseline_bert/fc128_lr0.05_frozen.txt
	random_seed: 123
	lr: 0.05
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/baseline_bert/fc128_lr0.05_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:10:29 - INFO - __main__ -   device: cuda
05/05/2022 11:10:29 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:10:29 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
05/05/2022 11:10:29 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/prepared_test_data/test.ar.tsv
05/05/2022 11:10:29 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
05/05/2022 11:10:30 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1701 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
05/05/2022 11:10:31 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:10:31 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:10:31 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:10:31 - INFO - data_utils.preprocess_bert -   train sentence max len: 120
05/05/2022 11:10:31 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:10:31 - INFO - data_utils.preprocess_bert -   test sentence max len: 253
05/05/2022 11:10:31 - INFO - data_utils.preprocess_bert -   train OOV: 178 (0.36%) out of 49413 running tokens are OOV
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   val OOV: 367 (0.46%) out of 78943 running tokens are OOV
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   test OOV: 710 (0.59%) out of 119602 running tokens are OOV
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:10:32 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:10:34 - INFO - data_utils.preprocess_bert -   there are nearly 54 batches in an epoch
05/05/2022 11:10:36 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:10:36 - INFO - __main__ -   the model has 101,141 trainable parameters
05/05/2022 11:10:36 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:10:44 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:10:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:10:44 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:10:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:10:44 - INFO - __main__ -   Epoch: 0001 | Time: 0m_8s | train_loss: 10.928 | val_loss: 6.046
05/05/2022 11:10:44 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5038461538461538, 'f1': 0.435122706255207, 'precision': 0.4137627086425401, 'recall': 0.5903050388093741}
05/05/2022 11:10:44 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:10:45 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:10:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:10:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:10:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:10:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:10:54 - INFO - __main__ -   Epoch: 0002 | Time: 0m_8s | train_loss: 5.398 | val_loss: 5.882
05/05/2022 11:10:54 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5016483516483515, 'f1': 0.41323140237685624, 'precision': 0.35004192340656587, 'recall': 0.5483117837804047}
05/05/2022 11:10:54 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:11:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:11:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:11:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:02 - INFO - __main__ -   Epoch: 0003 | Time: 0m_8s | train_loss: 5.217 | val_loss: 5.854
05/05/2022 11:11:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4807692307692307, 'f1': 0.44946610712723284, 'precision': 0.41869068507883483, 'recall': 0.6664464274507628}
05/05/2022 11:11:02 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:11:03 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:11:12 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:11:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:12 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:11:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:12 - INFO - __main__ -   Epoch: 0004 | Time: 0m_8s | train_loss: 5.092 | val_loss: 5.973
05/05/2022 11:11:12 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44053085586382895, 'precision': 0.33895417414490375, 'recall': 0.7106831602589241}
05/05/2022 11:11:12 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:11:21 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:11:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:21 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:11:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:21 - INFO - __main__ -   Epoch: 0005 | Time: 0m_8s | train_loss: 5.577 | val_loss: 5.558
05/05/2022 11:11:21 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5527472527472527, 'f1': 0.17989735213714295, 'precision': 0.15819433586274403, 'recall': 0.2321211543754896}
05/05/2022 11:11:21 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:11:29 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:11:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:29 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:11:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:30 - INFO - __main__ -   Epoch: 0006 | Time: 0m_8s | train_loss: 5.365 | val_loss: 6.063
05/05/2022 11:11:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44053085586382895, 'precision': 0.33895417414490375, 'recall': 0.7106831602589241}
05/05/2022 11:11:30 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:11:38 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:11:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:38 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:11:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:38 - INFO - __main__ -   Epoch: 0007 | Time: 0m_8s | train_loss: 5.246 | val_loss: 11.034
05/05/2022 11:11:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4491758241758242, 'f1': 0.44344130128199577, 'precision': 0.34232638125321607, 'recall': 0.7061958923787992}
05/05/2022 11:11:38 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:11:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:11:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:11:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:47 - INFO - __main__ -   Epoch: 0008 | Time: 0m_8s | train_loss: 4.927 | val_loss: 5.681
05/05/2022 11:11:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5326923076923077, 'f1': 0.27803978307144533, 'precision': 0.3505554440114249, 'recall': 0.3794827251299175}
05/05/2022 11:11:47 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:11:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:11:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:11:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:11:56 - INFO - __main__ -   Epoch: 0009 | Time: 0m_8s | train_loss: 5.156 | val_loss: 11.497
05/05/2022 11:11:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4467032967032966, 'f1': 0.4410892044768295, 'precision': 0.3396761140926502, 'recall': 0.705603795179559}
05/05/2022 11:11:56 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:12:04 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:12:04 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:04 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:12:04 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:04 - INFO - __main__ -   Epoch: 0010 | Time: 0m_8s | train_loss: 5.119 | val_loss: 7.823
05/05/2022 11:12:04 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.445054945054945, 'f1': 0.44538166897163806, 'precision': 0.4103445682709531, 'recall': 0.7101406102520885}
05/05/2022 11:12:04 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:12:13 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:12:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:13 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:12:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:13 - INFO - __main__ -   Epoch: 0011 | Time: 0m_8s | train_loss: 4.772 | val_loss: 5.724
05/05/2022 11:12:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5082417582417582, 'f1': 0.3577560379902377, 'precision': 0.33375457698647726, 'recall': 0.5171259040230963}
05/05/2022 11:12:13 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:12:22 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:12:22 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:22 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:12:22 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:22 - INFO - __main__ -   Epoch: 0012 | Time: 0m_8s | train_loss: 4.966 | val_loss: 8.826
05/05/2022 11:12:22 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5211538461538462, 'f1': 0.43905924962295145, 'precision': 0.3909888029652763, 'recall': 0.6134508494551847}
05/05/2022 11:12:22 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:12:30 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:12:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:30 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:12:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:30 - INFO - __main__ -   Epoch: 0013 | Time: 0m_8s | train_loss: 5.071 | val_loss: 6.683
05/05/2022 11:12:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44057436228312713, 'precision': 0.3389869317961586, 'recall': 0.7106831602589241}
05/05/2022 11:12:30 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:12:30 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:12:30 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/baseline_bert/fc128_lr0.05_frozen
05/05/2022 11:12:31 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/baseline_bert/fc128_lr0.05_frozen
05/05/2022 11:12:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:12:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:12:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:37 - INFO - __main__ -   best_val_loss: 5.854
05/05/2022 11:12:37 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.4807692307692307, 'f1': 0.44946610712723284, 'precision': 0.41869068507883483, 'recall': 0.6664464274507628}
05/05/2022 11:12:37 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:12:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:12:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:12:47 - INFO - training_utils.postprocess -   1 (0.03 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:12:47 - INFO - __main__ -   test_loss: 5.532
05/05/2022 11:12:47 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.5567142857142857, 'f1': 0.4479904892482865, 'precision': 0.4162199734098398, 'recall': 0.6543154939283756}
