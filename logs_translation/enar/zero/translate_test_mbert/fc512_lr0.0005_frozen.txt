05/05/2022 12:01:35 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 12:01:35 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_mbert/fc512_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_mbert/fc512_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 12:01:35 - INFO - __main__ -   device: cuda
05/05/2022 12:01:35 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 12:01:35 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 12:01:35 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 12:01:35 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 12:01:36 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 12:01:36 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 12:01:36 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 12:01:36 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 12:01:36 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 12:01:36 - INFO - data_utils.preprocess_bert -   test sentence max len: 511
05/05/2022 12:01:36 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   val OOV: 0 (0.00%) out of 32851 running tokens are OOV
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   test OOV: 1 (0.00%) out of 51301 running tokens are OOV
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:01:37 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 12:01:40 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 12:01:43 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 12:01:43 - INFO - __main__ -   the model has 404,501 trainable parameters
05/05/2022 12:01:43 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 12:01:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:01:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:01:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:01:56 - INFO - __main__ -   Epoch: 0001 | Time: 0m_12s | train_loss: 5.592 | val_loss: 6.416
05/05/2022 12:01:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4461538461538462, 'f1': 0.4436024278660526, 'precision': 0.4458054174373444, 'recall': 0.7090446202275269}
05/05/2022 12:01:56 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:01:57 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:02:09 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:02:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:09 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:02:09 - INFO - training_utils.postprocess -   107 (5.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:09 - INFO - __main__ -   Epoch: 0002 | Time: 0m_12s | train_loss: 5.011 | val_loss: 6.123
05/05/2022 12:02:09 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5472527472527472, 'f1': 0.5001764957292173, 'precision': 0.49830565277819666, 'recall': 0.6698336628022837}
05/05/2022 12:02:09 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:02:11 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:02:23 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:02:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:23 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:02:23 - INFO - training_utils.postprocess -   139 (6.68 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:23 - INFO - __main__ -   Epoch: 0003 | Time: 0m_12s | train_loss: 4.792 | val_loss: 5.780
05/05/2022 12:02:23 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6695054945054946, 'f1': 0.5605138224892475, 'precision': 0.5256765830649356, 'recall': 0.6239864635622274}
05/05/2022 12:02:23 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:02:25 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:02:40 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:02:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:40 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:02:40 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:40 - INFO - __main__ -   Epoch: 0004 | Time: 0m_14s | train_loss: 4.650 | val_loss: 5.670
05/05/2022 12:02:40 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5870879120879121, 'f1': 0.552639910065306, 'precision': 0.5720685339776276, 'recall': 0.6850555831532297}
05/05/2022 12:02:40 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 12:02:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:02:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:02:47 - INFO - training_utils.postprocess -   35 (1.68 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:47 - INFO - __main__ -   Epoch: 0005 | Time: 0m_6s | train_loss: 4.574 | val_loss: 5.342
05/05/2022 12:02:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6420329670329671, 'f1': 0.5863311328827192, 'precision': 0.6135868985551977, 'recall': 0.673544788606721}
05/05/2022 12:02:47 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:02:49 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:02:58 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:02:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:58 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:02:58 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:02:58 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 4.464 | val_loss: 5.237
05/05/2022 12:02:58 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6395604395604396, 'f1': 0.5639335925278572, 'precision': 0.6109746185958608, 'recall': 0.6499402342084011}
05/05/2022 12:02:58 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 12:03:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:03:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:03:11 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:11 - INFO - __main__ -   Epoch: 0007 | Time: 0m_12s | train_loss: 4.330 | val_loss: 5.738
05/05/2022 12:03:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6167582417582418, 'f1': 0.5531752194641466, 'precision': 0.5995501272470467, 'recall': 0.6668462021063177}
05/05/2022 12:03:11 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 12:03:22 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:03:22 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:22 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:03:22 - INFO - training_utils.postprocess -   86 (4.13 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:22 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 4.154 | val_loss: 6.210
05/05/2022 12:03:22 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6346153846153845, 'f1': 0.5577376734474834, 'precision': 0.6181914448697835, 'recall': 0.664632897829636}
05/05/2022 12:03:22 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 12:03:35 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:03:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:35 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:03:35 - INFO - training_utils.postprocess -   16 (0.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:35 - INFO - __main__ -   Epoch: 0009 | Time: 0m_12s | train_loss: 4.086 | val_loss: 5.372
05/05/2022 12:03:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6557692307692308, 'f1': 0.5412068639429206, 'precision': 0.6404059618680574, 'recall': 0.5563075621333259}
05/05/2022 12:03:35 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 12:03:45 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:03:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:45 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:03:45 - INFO - training_utils.postprocess -   53 (2.55 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:45 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 4.285 | val_loss: 5.859
05/05/2022 12:03:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6607142857142858, 'f1': 0.5607573652274559, 'precision': 0.6424598897806043, 'recall': 0.610094846277753}
05/05/2022 12:03:45 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 12:03:57 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:03:57 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:57 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:03:57 - INFO - training_utils.postprocess -   19 (0.91 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:03:57 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 4.146 | val_loss: 6.326
05/05/2022 12:03:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6087912087912087, 'f1': 0.5512841464014996, 'precision': 0.6099099430911951, 'recall': 0.6736673581140964}
05/05/2022 12:03:57 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 12:04:09 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:04:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:09 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:04:09 - INFO - training_utils.postprocess -   40 (1.92 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:09 - INFO - __main__ -   Epoch: 0012 | Time: 0m_12s | train_loss: 4.174 | val_loss: 5.888
05/05/2022 12:04:09 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.646978021978022, 'f1': 0.5437152669474884, 'precision': 0.623162671592441, 'recall': 0.584539195414505}
05/05/2022 12:04:09 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 12:04:23 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:04:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:23 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:04:23 - INFO - training_utils.postprocess -   38 (1.83 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:23 - INFO - __main__ -   Epoch: 0013 | Time: 0m_13s | train_loss: 4.016 | val_loss: 5.945
05/05/2022 12:04:23 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6434065934065932, 'f1': 0.5644400395452204, 'precision': 0.6282888783189418, 'recall': 0.6401466729862684}
05/05/2022 12:04:23 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 12:04:36 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:04:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:36 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:04:36 - INFO - training_utils.postprocess -   28 (1.35 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:36 - INFO - __main__ -   Epoch: 0014 | Time: 0m_12s | train_loss: 4.134 | val_loss: 5.995
05/05/2022 12:04:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6359890109890111, 'f1': 0.5547782689326289, 'precision': 0.6102288813625656, 'recall': 0.6292106977645789}
05/05/2022 12:04:36 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 12:04:45 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:04:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:45 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:04:45 - INFO - training_utils.postprocess -   43 (2.07 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:45 - INFO - __main__ -   Epoch: 0015 | Time: 0m_9s | train_loss: 3.839 | val_loss: 6.569
05/05/2022 12:04:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6343406593406593, 'f1': 0.5536497480459759, 'precision': 0.6256357548894187, 'recall': 0.6432704207528733}
05/05/2022 12:04:45 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 12:04:45 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 12:04:45 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_mbert/fc512_lr0.0005_frozen
05/05/2022 12:04:45 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_mbert/fc512_lr0.0005_frozen
05/05/2022 12:04:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:04:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:04:52 - INFO - training_utils.postprocess -   35 (1.68 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:04:52 - INFO - __main__ -   best_val_loss: 5.342
05/05/2022 12:04:52 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6420329670329671, 'f1': 0.5863311328827192, 'precision': 0.6135868985551977, 'recall': 0.673544788606721}
05/05/2022 12:04:52 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 12:05:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:05:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:05:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:05:01 - INFO - training_utils.postprocess -   44 (1.10 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:05:01 - INFO - __main__ -   test_loss: 5.308
05/05/2022 12:05:01 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6639999999999999, 'f1': 0.5492050111299228, 'precision': 0.5663633246887048, 'recall': 0.6423954652706337}
