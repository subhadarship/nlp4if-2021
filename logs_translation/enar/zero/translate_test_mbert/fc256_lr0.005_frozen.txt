05/05/2022 11:32:02 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:32:02 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_mbert/fc256_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_mbert/fc256_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:32:02 - INFO - __main__ -   device: cuda
05/05/2022 11:32:02 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:32:02 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 11:32:02 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 11:32:02 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   test sentence max len: 511
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   val OOV: 0 (0.00%) out of 32851 running tokens are OOV
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   test OOV: 1 (0.00%) out of 51301 running tokens are OOV
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:32:04 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:32:06 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 11:32:09 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:32:09 - INFO - __main__ -   the model has 202,261 trainable parameters
05/05/2022 11:32:09 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:32:15 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:15 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:15 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:15 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:15 - INFO - __main__ -   Epoch: 0001 | Time: 0m_6s | train_loss: 5.743 | val_loss: 5.404
05/05/2022 11:32:15 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6123626373626374, 'f1': 0.5483743124807624, 'precision': 0.5624125598092833, 'recall': 0.6467616838374477}
05/05/2022 11:32:15 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:32:16 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:32:22 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:22 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:22 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:22 - INFO - training_utils.postprocess -   120 (5.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:22 - INFO - __main__ -   Epoch: 0002 | Time: 0m_6s | train_loss: 4.839 | val_loss: 7.126
05/05/2022 11:32:22 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6214285714285716, 'f1': 0.536852345798429, 'precision': 0.6060191842851647, 'recall': 0.6281267232877472}
05/05/2022 11:32:22 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:32:28 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:28 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:28 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:28 - INFO - training_utils.postprocess -   52 (2.50 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:28 - INFO - __main__ -   Epoch: 0003 | Time: 0m_6s | train_loss: 4.776 | val_loss: 7.966
05/05/2022 11:32:28 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6, 'f1': 0.5331428557706455, 'precision': 0.5807494876095551, 'recall': 0.6809890234219301}
05/05/2022 11:32:28 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:32:34 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:34 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:34 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:34 - INFO - training_utils.postprocess -   5 (0.24 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:34 - INFO - __main__ -   Epoch: 0004 | Time: 0m_6s | train_loss: 4.753 | val_loss: 5.339
05/05/2022 11:32:34 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6442307692307693, 'f1': 0.5931767173691674, 'precision': 0.6099198054789092, 'recall': 0.6615613582407553}
05/05/2022 11:32:34 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:32:37 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:32:43 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:43 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:44 - INFO - training_utils.postprocess -   45 (2.16 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:44 - INFO - __main__ -   Epoch: 0005 | Time: 0m_6s | train_loss: 4.590 | val_loss: 5.705
05/05/2022 11:32:44 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6142857142857142, 'f1': 0.5531431659678638, 'precision': 0.574296148187865, 'recall': 0.665503853244357}
05/05/2022 11:32:44 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:32:50 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:50 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:50 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:50 - INFO - __main__ -   Epoch: 0006 | Time: 0m_6s | train_loss: 4.447 | val_loss: 6.392
05/05/2022 11:32:50 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5945054945054945, 'f1': 0.5452189497536608, 'precision': 0.5679596295294846, 'recall': 0.6930412826665923}
05/05/2022 11:32:50 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:32:56 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:32:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:56 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:32:56 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:32:56 - INFO - __main__ -   Epoch: 0007 | Time: 0m_6s | train_loss: 4.369 | val_loss: 6.042
05/05/2022 11:32:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6087912087912087, 'f1': 0.54664479628799, 'precision': 0.5890132027663081, 'recall': 0.660841960110127}
05/05/2022 11:32:56 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:33:02 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:02 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:02 - INFO - training_utils.postprocess -   10 (0.48 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:02 - INFO - __main__ -   Epoch: 0008 | Time: 0m_6s | train_loss: 4.254 | val_loss: 5.918
05/05/2022 11:33:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6357142857142858, 'f1': 0.5684883940190177, 'precision': 0.5895907957421836, 'recall': 0.655909829235593}
05/05/2022 11:33:02 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:33:08 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:08 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:08 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:08 - INFO - training_utils.postprocess -   10 (0.48 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:08 - INFO - __main__ -   Epoch: 0009 | Time: 0m_6s | train_loss: 4.145 | val_loss: 5.413
05/05/2022 11:33:08 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6326923076923078, 'f1': 0.4675055553448633, 'precision': 0.6443627952288093, 'recall': 0.43857422832856363}
05/05/2022 11:33:08 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:33:14 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:14 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:14 - INFO - training_utils.postprocess -   34 (1.63 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:14 - INFO - __main__ -   Epoch: 0010 | Time: 0m_6s | train_loss: 4.282 | val_loss: 5.894
05/05/2022 11:33:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6571428571428571, 'f1': 0.5385457421995488, 'precision': 0.6017562808022469, 'recall': 0.5509127344170697}
05/05/2022 11:33:14 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:33:20 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:20 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:20 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:20 - INFO - __main__ -   Epoch: 0011 | Time: 0m_6s | train_loss: 4.102 | val_loss: 6.421
05/05/2022 11:33:20 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6142857142857144, 'f1': 0.5415157368638118, 'precision': 0.5671218498909635, 'recall': 0.6155023733522909}
05/05/2022 11:33:20 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:33:26 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:26 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:26 - INFO - training_utils.postprocess -   43 (2.07 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:26 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 4.256 | val_loss: 6.325
05/05/2022 11:33:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.65, 'f1': 0.5404347485295437, 'precision': 0.6120172295994183, 'recall': 0.5555992174468641}
05/05/2022 11:33:26 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:33:32 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:32 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:32 - INFO - training_utils.postprocess -   35 (1.68 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:32 - INFO - __main__ -   Epoch: 0013 | Time: 0m_6s | train_loss: 3.955 | val_loss: 6.461
05/05/2022 11:33:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6447802197802197, 'f1': 0.5598190414920928, 'precision': 0.6312319309389931, 'recall': 0.6177613893509847}
05/05/2022 11:33:32 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:33:38 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:38 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:38 - INFO - training_utils.postprocess -   40 (1.92 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:38 - INFO - __main__ -   Epoch: 0014 | Time: 0m_6s | train_loss: 4.052 | val_loss: 6.888
05/05/2022 11:33:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6241758241758243, 'f1': 0.5404465691977494, 'precision': 0.6128180997052949, 'recall': 0.6292955619070401}
05/05/2022 11:33:38 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:33:38 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:33:38 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_mbert/fc256_lr0.005_frozen
05/05/2022 11:33:38 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_mbert/fc256_lr0.005_frozen
05/05/2022 11:33:41 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:41 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:41 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:41 - INFO - training_utils.postprocess -   5 (0.24 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:42 - INFO - __main__ -   best_val_loss: 5.339
05/05/2022 11:33:42 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6442307692307693, 'f1': 0.5931767173691674, 'precision': 0.6099198054789092, 'recall': 0.6615613582407553}
05/05/2022 11:33:42 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:33:52 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:33:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:52 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:33:52 - INFO - training_utils.postprocess -   7 (0.17 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:33:52 - INFO - __main__ -   test_loss: 5.403
05/05/2022 11:33:52 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6538571428571428, 'f1': 0.548428685494909, 'precision': 0.5595687537346608, 'recall': 0.629241627953184}
