05/05/2022 11:24:20 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 11:24:20 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_mbert/fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_mbert/fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 11:24:20 - INFO - __main__ -   device: cuda
05/05/2022 11:24:20 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 11:24:20 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 11:24:20 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 11:24:20 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 11:24:21 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 11:24:21 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 11:24:21 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 11:24:21 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 11:24:21 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 11:24:21 - INFO - data_utils.preprocess_bert -   test sentence max len: 511
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   val OOV: 0 (0.00%) out of 32851 running tokens are OOV
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   test OOV: 1 (0.00%) out of 51301 running tokens are OOV
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 11:24:22 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 11:24:24 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 11:24:27 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 11:24:27 - INFO - __main__ -   the model has 202,261 trainable parameters
05/05/2022 11:24:27 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 11:24:33 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:33 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:33 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:33 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:33 - INFO - __main__ -   Epoch: 0001 | Time: 0m_6s | train_loss: 5.735 | val_loss: 6.302
05/05/2022 11:24:33 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.440934065934066, 'f1': 0.44153755591245236, 'precision': 0.3398851521337245, 'recall': 0.7106831602589241}
05/05/2022 11:24:33 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:24:34 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:24:40 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:40 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:40 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:40 - INFO - __main__ -   Epoch: 0002 | Time: 0m_6s | train_loss: 5.086 | val_loss: 5.932
05/05/2022 11:24:40 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4892857142857142, 'f1': 0.4654638655254794, 'precision': 0.475233844199814, 'recall': 0.687681795471845}
05/05/2022 11:24:40 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:24:42 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:24:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:48 - INFO - training_utils.postprocess -   70 (3.37 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:48 - INFO - __main__ -   Epoch: 0003 | Time: 0m_6s | train_loss: 4.840 | val_loss: 5.656
05/05/2022 11:24:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.632967032967033, 'f1': 0.5471801943877301, 'precision': 0.48920800564384653, 'recall': 0.6668777791321145}
05/05/2022 11:24:48 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:24:51 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:24:57 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:24:57 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:57 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:24:57 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:24:57 - INFO - __main__ -   Epoch: 0004 | Time: 0m_6s | train_loss: 4.706 | val_loss: 5.633
05/05/2022 11:24:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5796703296703297, 'f1': 0.5412678665738604, 'precision': 0.5797098175603214, 'recall': 0.6791024097299901}
05/05/2022 11:24:57 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:25:03 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:03 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:03 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:03 - INFO - __main__ -   Epoch: 0005 | Time: 0m_6s | train_loss: 4.616 | val_loss: 5.324
05/05/2022 11:25:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6326923076923077, 'f1': 0.5737272626016343, 'precision': 0.6124296465435496, 'recall': 0.664364458434442}
05/05/2022 11:25:03 - INFO - __main__ -   	--Found new best val f1
05/05/2022 11:25:06 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 11:25:12 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:12 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:12 - INFO - training_utils.postprocess -   25 (1.20 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:12 - INFO - __main__ -   Epoch: 0006 | Time: 0m_6s | train_loss: 4.544 | val_loss: 5.357
05/05/2022 11:25:12 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6291208791208792, 'f1': 0.5571270434355043, 'precision': 0.5978617162676935, 'recall': 0.6656442378985731}
05/05/2022 11:25:12 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 11:25:18 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:18 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:18 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:18 - INFO - training_utils.postprocess -   16 (0.77 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:18 - INFO - __main__ -   Epoch: 0007 | Time: 0m_6s | train_loss: 4.388 | val_loss: 5.717
05/05/2022 11:25:18 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6156593406593407, 'f1': 0.5467107355853001, 'precision': 0.5934515826541247, 'recall': 0.6682336198232152}
05/05/2022 11:25:18 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 11:25:24 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:24 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:24 - INFO - training_utils.postprocess -   90 (4.33 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:24 - INFO - __main__ -   Epoch: 0008 | Time: 0m_6s | train_loss: 4.236 | val_loss: 5.943
05/05/2022 11:25:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6293956043956044, 'f1': 0.5557690616899135, 'precision': 0.6013262456403214, 'recall': 0.6656394283004523}
05/05/2022 11:25:24 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 11:25:30 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:30 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:30 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:30 - INFO - __main__ -   Epoch: 0009 | Time: 0m_6s | train_loss: 4.148 | val_loss: 5.375
05/05/2022 11:25:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6615384615384616, 'f1': 0.565087888297837, 'precision': 0.6442438914715652, 'recall': 0.6086147476547972}
05/05/2022 11:25:30 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 11:25:36 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:36 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:36 - INFO - training_utils.postprocess -   93 (4.47 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:36 - INFO - __main__ -   Epoch: 0010 | Time: 0m_6s | train_loss: 4.349 | val_loss: 5.947
05/05/2022 11:25:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6543956043956045, 'f1': 0.5603394140526933, 'precision': 0.624137455013542, 'recall': 0.6383621736522231}
05/05/2022 11:25:36 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 11:25:42 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:42 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:42 - INFO - training_utils.postprocess -   19 (0.91 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:42 - INFO - __main__ -   Epoch: 0011 | Time: 0m_6s | train_loss: 4.198 | val_loss: 6.127
05/05/2022 11:25:42 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6098901098901098, 'f1': 0.5494545857816677, 'precision': 0.605653946075308, 'recall': 0.6733915741677922}
05/05/2022 11:25:42 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 11:25:48 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:48 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:48 - INFO - training_utils.postprocess -   58 (2.79 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:48 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 4.236 | val_loss: 5.867
05/05/2022 11:25:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6491758241758242, 'f1': 0.5499756997586102, 'precision': 0.6424420242080495, 'recall': 0.6021433753401135}
05/05/2022 11:25:48 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 11:25:54 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:25:54 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:54 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:25:54 - INFO - training_utils.postprocess -   36 (1.73 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:25:54 - INFO - __main__ -   Epoch: 0013 | Time: 0m_6s | train_loss: 4.109 | val_loss: 5.823
05/05/2022 11:25:54 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6431318681318681, 'f1': 0.5598854392271692, 'precision': 0.6380623986947525, 'recall': 0.6395628257952782}
05/05/2022 11:25:54 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 11:26:00 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:26:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:00 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:26:00 - INFO - training_utils.postprocess -   25 (1.20 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:00 - INFO - __main__ -   Epoch: 0014 | Time: 0m_6s | train_loss: 4.203 | val_loss: 5.923
05/05/2022 11:26:00 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6392857142857142, 'f1': 0.5545040401139143, 'precision': 0.638952158811205, 'recall': 0.627433451523047}
05/05/2022 11:26:00 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 11:26:06 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:26:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:06 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:26:06 - INFO - training_utils.postprocess -   22 (1.06 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:06 - INFO - __main__ -   Epoch: 0015 | Time: 0m_6s | train_loss: 3.950 | val_loss: 6.252
05/05/2022 11:26:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6365384615384616, 'f1': 0.5578450947342605, 'precision': 0.62642131386283, 'recall': 0.6532723830762642}
05/05/2022 11:26:06 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 11:26:06 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 11:26:06 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_mbert/fc256_lr0.0005_frozen
05/05/2022 11:26:07 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_mbert/fc256_lr0.0005_frozen
05/05/2022 11:26:10 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:26:10 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:10 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:26:10 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:10 - INFO - __main__ -   best_val_loss: 5.324
05/05/2022 11:26:10 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6326923076923077, 'f1': 0.5737272626016343, 'precision': 0.6124296465435496, 'recall': 0.664364458434442}
05/05/2022 11:26:10 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 11:26:15 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 11:26:15 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:15 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 11:26:15 - INFO - training_utils.postprocess -   30 (0.75 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 11:26:15 - INFO - __main__ -   test_loss: 5.316
05/05/2022 11:26:15 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.6575714285714286, 'f1': 0.5398375918529738, 'precision': 0.5566926712714737, 'recall': 0.6339313127296681}
