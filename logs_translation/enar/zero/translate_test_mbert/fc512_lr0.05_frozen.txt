05/05/2022 12:24:47 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

05/05/2022 12:24:47 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: ar.en
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/translations
	test_data_dir: ../data/translations
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_translation/enar/zero/translate_test_mbert/fc512_lr0.05_frozen.txt
	random_seed: 123
	lr: 0.05
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/translation/enar/zero/translate_test_mbert/fc512_lr0.05_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

05/05/2022 12:24:47 - INFO - __main__ -   device: cuda
05/05/2022 12:24:47 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
05/05/2022 12:24:47 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/translations/dev.ar.en.tsv
05/05/2022 12:24:47 - INFO - data_utils.load -   considered 1000 (100.00 %) samples out of 1000 total samples in ../data/translations/test.ar.en.tsv
05/05/2022 12:24:47 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   num train samples: 869
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   num val samples: 520
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   num test samples: 1000
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   train sentence max len: 163
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   test sentence max len: 511
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   train OOV: 587 (1.06%) out of 55172 running tokens are OOV
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   val OOV: 0 (0.00%) out of 32851 running tokens are OOV
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   test OOV: 1 (0.00%) out of 51301 running tokens are OOV
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
05/05/2022 12:24:49 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
05/05/2022 12:24:51 - INFO - data_utils.preprocess_bert -   there are nearly 60 batches in an epoch
05/05/2022 12:24:54 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

05/05/2022 12:24:54 - INFO - __main__ -   the model has 404,501 trainable parameters
05/05/2022 12:24:54 - INFO - __main__ -   ðŸŒ‹  starting training..
05/05/2022 12:25:00 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:00 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:00 - INFO - training_utils.postprocess -   7 (0.34 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:00 - INFO - __main__ -   Epoch: 0001 | Time: 0m_6s | train_loss: 39.473 | val_loss: 6.063
05/05/2022 12:25:00 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4384615384615384, 'f1': 0.43252271344533316, 'precision': 0.40057279833949655, 'recall': 0.6668587236568244}
05/05/2022 12:25:00 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:25:01 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:25:07 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:07 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:07 - INFO - __main__ -   Epoch: 0002 | Time: 0m_5s | train_loss: 5.986 | val_loss: 11.583
05/05/2022 12:25:07 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44053085586382895, 'precision': 0.33895417414490375, 'recall': 0.7106831602589241}
05/05/2022 12:25:07 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:25:09 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:25:15 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:15 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:15 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:15 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:15 - INFO - __main__ -   Epoch: 0003 | Time: 0m_6s | train_loss: 5.542 | val_loss: 6.501
05/05/2022 12:25:15 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5370879120879121, 'f1': 0.4535894774633103, 'precision': 0.5788877941305426, 'recall': 0.613177055252819}
05/05/2022 12:25:15 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:25:17 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:25:23 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:23 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:23 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:23 - INFO - __main__ -   Epoch: 0004 | Time: 0m_6s | train_loss: 5.750 | val_loss: 6.671
05/05/2022 12:25:23 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4395604395604395, 'f1': 0.44206420928367063, 'precision': 0.5245390659872493, 'recall': 0.7112326108083746}
05/05/2022 12:25:23 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 12:25:29 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:29 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:29 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:29 - INFO - __main__ -   Epoch: 0005 | Time: 0m_6s | train_loss: 5.676 | val_loss: 8.176
05/05/2022 12:25:29 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4395604395604395, 'f1': 0.44206420928367063, 'precision': 0.5245390659872493, 'recall': 0.7112326108083746}
05/05/2022 12:25:29 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 12:25:35 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:35 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:35 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:35 - INFO - __main__ -   Epoch: 0006 | Time: 0m_5s | train_loss: 6.289 | val_loss: 7.303
05/05/2022 12:25:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4392857142857142, 'f1': 0.4414911653994555, 'precision': 0.4203979489340047, 'recall': 0.7109578855336495}
05/05/2022 12:25:35 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 12:25:41 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:41 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:41 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:41 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:41 - INFO - __main__ -   Epoch: 0007 | Time: 0m_6s | train_loss: 5.368 | val_loss: 6.774
05/05/2022 12:25:41 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.49175824175824173, 'f1': 0.4479671091705989, 'precision': 0.5369043238226177, 'recall': 0.675677055252819}
05/05/2022 12:25:41 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 12:25:47 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:47 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:47 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:47 - INFO - __main__ -   Epoch: 0008 | Time: 0m_6s | train_loss: 5.410 | val_loss: 8.221
05/05/2022 12:25:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4395604395604395, 'f1': 0.44206420928367063, 'precision': 0.5245390659872493, 'recall': 0.7112326108083746}
05/05/2022 12:25:47 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 12:25:53 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:53 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:53 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:53 - INFO - __main__ -   Epoch: 0009 | Time: 0m_6s | train_loss: 6.221 | val_loss: 5.869
05/05/2022 12:25:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.475, 'f1': 0.4271597257801533, 'precision': 0.5603523875664668, 'recall': 0.6243600239357878}
05/05/2022 12:25:53 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 12:25:59 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:25:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:59 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:25:59 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:25:59 - INFO - __main__ -   Epoch: 0010 | Time: 0m_5s | train_loss: 5.392 | val_loss: 7.310
05/05/2022 12:25:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4403846153846153, 'f1': 0.44231141320547895, 'precision': 0.42077883557102425, 'recall': 0.7109573561978599}
05/05/2022 12:25:59 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 12:26:05 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:05 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:05 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:05 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:05 - INFO - __main__ -   Epoch: 0011 | Time: 0m_6s | train_loss: 5.167 | val_loss: 6.871
05/05/2022 12:26:05 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5815934065934066, 'f1': 0.4476020556219667, 'precision': 0.5274370468514087, 'recall': 0.5280600711577178}
05/05/2022 12:26:05 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 12:26:11 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:11 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:11 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:11 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 5.514 | val_loss: 6.073
05/05/2022 12:26:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4406593406593406, 'f1': 0.4428844570896941, 'precision': 0.5249199526242688, 'recall': 0.7112320814725851}
05/05/2022 12:26:11 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 12:26:17 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:17 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:17 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:17 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:17 - INFO - __main__ -   Epoch: 0013 | Time: 0m_6s | train_loss: 5.277 | val_loss: 9.119
05/05/2022 12:26:17 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5695054945054945, 'f1': 0.4882766330035525, 'precision': 0.6057564371448322, 'recall': 0.6211146426051463}
05/05/2022 12:26:17 - INFO - __main__ -   	--Found new best val f1
05/05/2022 12:26:19 - INFO - __main__ -   	current patience value: 0/10
05/05/2022 12:26:25 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:25 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:25 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:25 - INFO - __main__ -   Epoch: 0014 | Time: 0m_6s | train_loss: 5.252 | val_loss: 6.653
05/05/2022 12:26:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5708791208791208, 'f1': 0.44244593943930777, 'precision': 0.5923425608097485, 'recall': 0.5283376308995632}
05/05/2022 12:26:25 - INFO - __main__ -   	current patience value: 1/10
05/05/2022 12:26:31 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:31 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:31 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:31 - INFO - __main__ -   Epoch: 0015 | Time: 0m_6s | train_loss: 5.588 | val_loss: 10.498
05/05/2022 12:26:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5222527472527472, 'f1': 0.4630034773710912, 'precision': 0.5550894964316794, 'recall': 0.6698375236494558}
05/05/2022 12:26:31 - INFO - __main__ -   	current patience value: 2/10
05/05/2022 12:26:37 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:37 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:37 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:37 - INFO - __main__ -   Epoch: 0016 | Time: 0m_6s | train_loss: 7.430 | val_loss: 7.691
05/05/2022 12:26:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4406593406593406, 'f1': 0.4428844570896941, 'precision': 0.5249199526242688, 'recall': 0.7112320814725851}
05/05/2022 12:26:37 - INFO - __main__ -   	current patience value: 3/10
05/05/2022 12:26:43 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:43 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:43 - INFO - __main__ -   Epoch: 0017 | Time: 0m_6s | train_loss: 5.469 | val_loss: 9.003
05/05/2022 12:26:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.4873626373626373, 'f1': 0.4466050040880786, 'precision': 0.34945042021561795, 'recall': 0.679572049147813}
05/05/2022 12:26:43 - INFO - __main__ -   	current patience value: 4/10
05/05/2022 12:26:49 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:49 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:49 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:49 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:49 - INFO - __main__ -   Epoch: 0018 | Time: 0m_6s | train_loss: 5.148 | val_loss: 10.285
05/05/2022 12:26:49 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.560989010989011, 'f1': 0.46415616052832676, 'precision': 0.39958703258569966, 'recall': 0.6019360713332638}
05/05/2022 12:26:49 - INFO - __main__ -   	current patience value: 5/10
05/05/2022 12:26:55 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:26:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:55 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:26:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:26:55 - INFO - __main__ -   Epoch: 0019 | Time: 0m_6s | train_loss: 5.422 | val_loss: 6.394
05/05/2022 12:26:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44053085586382895, 'precision': 0.33895417414490375, 'recall': 0.7106831602589241}
05/05/2022 12:26:55 - INFO - __main__ -   	current patience value: 6/10
05/05/2022 12:27:01 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:27:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:01 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:27:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:01 - INFO - __main__ -   Epoch: 0020 | Time: 0m_6s | train_loss: 5.526 | val_loss: 9.245
05/05/2022 12:27:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.43791208791208786, 'f1': 0.44053085586382895, 'precision': 0.33895417414490375, 'recall': 0.7106831602589241}
05/05/2022 12:27:01 - INFO - __main__ -   	current patience value: 7/10
05/05/2022 12:27:07 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:27:07 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:07 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:27:07 - INFO - training_utils.postprocess -   461 (22.16 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:07 - INFO - __main__ -   Epoch: 0021 | Time: 0m_6s | train_loss: 5.401 | val_loss: 7.156
05/05/2022 12:27:07 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5093406593406593, 'f1': 0.2482588464638566, 'precision': 0.30816276038644463, 'recall': 0.27799482435630246}
05/05/2022 12:27:07 - INFO - __main__ -   	current patience value: 8/10
05/05/2022 12:27:13 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:27:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:13 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:27:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:13 - INFO - __main__ -   Epoch: 0022 | Time: 0m_6s | train_loss: 5.461 | val_loss: 7.992
05/05/2022 12:27:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5296703296703297, 'f1': 0.45285003393625595, 'precision': 0.38249463654625987, 'recall': 0.6240816863360216}
05/05/2022 12:27:13 - INFO - __main__ -   	current patience value: 9/10
05/05/2022 12:27:19 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:27:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:19 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:27:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:19 - INFO - __main__ -   Epoch: 0023 | Time: 0m_6s | train_loss: 5.085 | val_loss: 6.612
05/05/2022 12:27:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5769230769230769, 'f1': 0.45595013570671455, 'precision': 0.4314231205379572, 'recall': 0.5514149124192477}
05/05/2022 12:27:19 - INFO - __main__ -   	current patience value: 10/10
05/05/2022 12:27:19 - INFO - __main__ -   	--STOPPING EARLY
05/05/2022 12:27:19 - INFO - __main__ -   load checkpoint from ../models/translation/enar/zero/translate_test_mbert/fc512_lr0.05_frozen
05/05/2022 12:27:20 - INFO - __main__ -   load model weights from checkpoint in ../models/translation/enar/zero/translate_test_mbert/fc512_lr0.05_frozen
05/05/2022 12:27:23 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:27:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:23 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:27:23 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:23 - INFO - __main__ -   best_val_loss: 9.119
05/05/2022 12:27:23 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.5695054945054945, 'f1': 0.4882766330035525, 'precision': 0.6057564371448322, 'recall': 0.6211146426051463}
05/05/2022 12:27:23 - INFO - __main__ -   ðŸ”¥ start testing..
05/05/2022 12:27:28 - INFO - training_utils.train_loop -   postprocessing targets..
05/05/2022 12:27:28 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:28 - INFO - training_utils.train_loop -   postprocessing predictions..
05/05/2022 12:27:28 - INFO - training_utils.postprocess -   0 (0.00 %) out of 4000 q2, q3, q4, q5 predictions are changed during postprocessing
05/05/2022 12:27:28 - INFO - __main__ -   test_loss: 8.864
05/05/2022 12:27:28 - INFO - __main__ -   ðŸ“£ test metrics ðŸ“£ {'acc': 0.5552857142857143, 'f1': 0.41750377965517665, 'precision': 0.4194888410762426, 'recall': 0.5689174329089212}
