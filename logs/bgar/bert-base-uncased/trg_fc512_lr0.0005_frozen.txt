04/08/2021 13:28:39 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/08/2021 13:28:39 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: ar_all
	trglang: ar
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/prepared_additional
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/bgar/bert-base-uncased/trg_fc512_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models_additional/bgar/bert-base-uncased/trg_fc512_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/08/2021 13:28:39 - INFO - __main__ -   device: cuda
04/08/2021 13:28:39 - INFO - data_utils.load -   considered 2536 (100.00 %) samples out of 2536 total samples in ../data/prepared_additional/train.ar.tsv
04/08/2021 13:28:39 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
04/08/2021 13:28:39 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/08/2021 13:28:40 - WARNING - data_utils.bert_data -   trimming sentence 657 of length 2872 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 13:28:41 - WARNING - data_utils.bert_data -   trimming sentence 1004 of length 740 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 13:28:42 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1701 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 13:28:43 - INFO - data_utils.preprocess_bert -   num train samples: 2536
04/08/2021 13:28:43 - INFO - data_utils.preprocess_bert -   num val samples: 520
04/08/2021 13:28:43 - INFO - data_utils.preprocess_bert -   num test samples: None
04/08/2021 13:28:43 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/08/2021 13:28:43 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   train OOV: 1250 (0.36%) out of 351062 running tokens are OOV
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   val OOV: 367 (0.46%) out of 78943 running tokens are OOV
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   look at some train samples 👀
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: #عاجل #خادم_الحرمين_الشريفين يصدر أمره بمنع التجول للحد من انتشار #فيروس_كورونا الجديد ابتداءً من الساعة الـ 7 مساءً وحتى الساعة الـ 6 صباحًا لمدة ( 21 ) يومًا من مساء يوم الأثنين 28 رجب 1441هـ، الموافق 23 مارس 2020م. #واس URL, text ids: [101, 1001, 1288, 25573, 29819, 23673, 1001, 1277, 25573, 15394, 22192, 1035, 1270, 23673, 29820, 17149, 22192, 14498, 15915, 1035, 1270, 23673, 29825, 17149, 14498, 29833, 14498, 15915, 1300, 29826, 15394, 17149, 1270, 22192, 17149, 14157, 1271, 22192, 15915, 29830, 1270, 23673, 29817, 29819, 29836, 23673, 1294, 23673, 29820, 15394, 1295, 15915, 1270, 15915, 29817, 29825, 25573, 17149, 1001, 1291, 14498, 17149, 29836, 29824, 1035, 1293, 29836, 17149, 29836, 15915, 25573, 1270, 23673, 29819, 15394, 14498, 15394, 1270, 29816, 29817, 15394, 25573, 29815, 1295, 15915, 1270, 23673, 29824, 25573, 29830, 19433, 1270, 23673, 29832, 1021, 1295, 29824, 25573, 29815, 1298, 29820, 29817, 29837, 1270, 23673, 29824, 25573, 29830, 19433, 1270, 23673, 29832, 1020, 1284, 29816, 25573, 29820, 25573, 1294, 22192, 15394, 19433, 1006, 2538, 1007, 1300, 29836, 22192, 25573, 1295, 15915, 1295, 29824, 25573, 29815, 1300, 29836, 22192, 1270, 23673, 25573, 29818, 15915, 14498, 15915, 2654, 1280, 29819, 29816, 14748, 2487, 14157, 29832, 1268, 1270, 23673, 22192, 29836, 25573, 29833, 29834, 2603, 1295, 25573, 17149, 29824, 12609, 22192, 1012, 1001, 1298, 25573, 29824, 24471, 2140, 102], original labels: yes no yes no no no no, label ids: [[0], [1], [0], [1], [1], [1], [1]]
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: بعد كل الإجراءات الاحترازية التي تقوم بها #المملكة للحد من انتشار #كورونا . . . هل تؤيد فرض #حظر_تجول في #السعودية من الساعة (٧م) إلى الساعة (٧ص) ابتداء من يوم غدٍ الاحد . . - نعم أُوَيد ( #ريتويت ) ، ولماذا ؟ - لا أُوَيد ( #إعجاب ) ، ولماذا ؟ . .  #انا_مع_حظر_التجول_الاجباري URL, text ids: [101, 1271, 29830, 15394, 1293, 23673, 1270, 23673, 25573, 29819, 17149, 25573, 29815, 25573, 29817, 1270, 23673, 25573, 29820, 29817, 17149, 25573, 29823, 14498, 19433, 1270, 23673, 29817, 14498, 1273, 29834, 29836, 22192, 1271, 14157, 25573, 1001, 1270, 23673, 22192, 22192, 23673, 29835, 19433, 1294, 23673, 29820, 15394, 1295, 15915, 1270, 15915, 29817, 29825, 25573, 17149, 1001, 1293, 29836, 17149, 29836, 15915, 25573, 1012, 1012, 1012, 1297, 23673, 1273, 29836, 14498, 15394, 1291, 17149, 29827, 1001, 1276, 29829, 17149, 1035, 1273, 29819, 29836, 23673, 1291, 14498, 1001, 1270, 23673, 29824, 29830, 29836, 15394, 14498, 19433, 1295, 15915, 1270, 23673, 29824, 25573, 29830, 19433, 1006, 100, 1007, 1270, 23673, 29837, 1270, 23673, 29824, 25573, 29830, 19433, 1006, 100, 1007, 1270, 29816, 29817, 15394, 25573, 29815, 1295, 15915, 1300, 29836, 22192, 1289, 15394, 1270, 23673, 25573, 29820, 15394, 1012, 1012, 1011, 1296, 29830, 22192, 1270, 29836, 14498, 15394, 1006, 1001, 1280, 14498, 29817, 29836, 14498, 29817, 1007, 1268, 1298, 23673, 22192, 25573, 29822, 25573, 100, 1011, 1294, 25573, 1270, 29836, 14498, 15394, 1006, 1001, 1270, 29830, 29819, 25573, 29816, 1007, 1268, 1298, 23673, 22192, 25573, 29822, 25573, 100, 1012, 1012, 1001, 1270, 15915, 25573, 1035, 1295, 29830, 1035, 1276, 29829, 17149, 1035, 1270, 23673, 29817, 29819, 29836, 23673, 1035, 1270, 23673, 25573, 29819, 29816, 25573, 17149, 14498, 24471, 2140, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: تصويت 🔴 .  . هل تعتقد أن ( حظر التجول ) الذي تُطبقه بعض الدول يمنع انتشار فيروس كورونا .. ولماذا ؟. .  . نعم = رتويت  . لا = مفضلة, text ids: [101, 1273, 29826, 29836, 14498, 29817, 100, 1012, 1012, 1297, 23673, 1273, 29830, 29817, 29834, 15394, 1270, 15915, 1006, 1276, 29829, 17149, 1270, 23673, 29817, 29819, 29836, 23673, 1007, 1270, 23673, 29822, 14498, 1273, 29828, 29816, 29834, 14157, 1271, 29830, 29827, 1270, 23673, 15394, 29836, 23673, 1300, 22192, 15915, 29830, 1270, 15915, 29817, 29825, 25573, 17149, 1291, 14498, 17149, 29836, 29824, 1293, 29836, 17149, 29836, 15915, 25573, 1012, 1012, 1298, 23673, 22192, 25573, 29822, 25573, 100, 1012, 1012, 1012, 1296, 29830, 22192, 1027, 1280, 29817, 29836, 14498, 29817, 1012, 1294, 25573, 1027, 1295, 29833, 29827, 23673, 19433, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: ما هو دي دعواتنا, text ids: [101, 1295, 25573, 1297, 29836, 1278, 14498, 1278, 29830, 29836, 25573, 29817, 15915, 25573, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 13:28:44 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: #الصحة تعلن عن تسجيل (١١٩) حالة إصابة جديدة بفيروس #كورونا الجديد (كوفيد١٩). URL, text ids: [101, 1001, 1270, 23673, 29826, 29820, 19433, 1273, 29830, 23673, 15915, 1288, 15915, 1273, 29824, 29819, 14498, 23673, 1006, 100, 1007, 1276, 25573, 23673, 19433, 1270, 29826, 25573, 29816, 19433, 1275, 15394, 14498, 15394, 19433, 1271, 29833, 14498, 17149, 29836, 29824, 1001, 1293, 29836, 17149, 29836, 15915, 25573, 1270, 23673, 29819, 15394, 14498, 15394, 1006, 100, 1007, 1012, 24471, 2140, 102], original labels: yes no yes no no no no, label ids: [[0], [1], [0], [1], [1], [1], [1]]
04/08/2021 13:28:46 - INFO - data_utils.preprocess_bert -   there are nearly 377 batches in an epoch
04/08/2021 13:28:48 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/08/2021 13:28:48 - INFO - __main__ -   the model has 404,501 trainable parameters
04/08/2021 13:28:48 - INFO - __main__ -   🌋  starting training..
04/08/2021 13:29:15 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:29:15 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:29:15 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:29:15 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:29:15 - INFO - __main__ -   Epoch: 0001 | Time: 0m_26s | train_loss: 5.135 | val_loss: 7.190
04/08/2021 13:29:15 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5258241758241758, 'f1': 0.5116959076894212, 'precision': 0.5116959076894212, 'recall': 0.5116959076894212}
04/08/2021 13:29:15 - INFO - __main__ -   	--Found new best val f1
04/08/2021 13:29:15 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 13:29:42 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:29:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:29:42 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:29:42 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:29:42 - INFO - __main__ -   Epoch: 0002 | Time: 0m_27s | train_loss: 4.949 | val_loss: 6.648
04/08/2021 13:29:42 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5508241758241759, 'f1': 0.5268510638124136, 'precision': 0.5268510638124136, 'recall': 0.5268510638124136}
04/08/2021 13:29:42 - INFO - __main__ -   	--Found new best val f1
04/08/2021 13:29:46 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 13:30:13 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:30:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:30:13 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:30:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:30:13 - INFO - __main__ -   Epoch: 0003 | Time: 0m_26s | train_loss: 4.876 | val_loss: 6.993
04/08/2021 13:30:13 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5340659340659341, 'f1': 0.5399537119077926, 'precision': 0.5399537119077926, 'recall': 0.5399537119077926}
04/08/2021 13:30:13 - INFO - __main__ -   	--Found new best val f1
04/08/2021 13:30:18 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 13:30:45 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:30:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:30:45 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:30:45 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:30:45 - INFO - __main__ -   Epoch: 0004 | Time: 0m_26s | train_loss: 4.822 | val_loss: 5.955
04/08/2021 13:30:45 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5554945054945055, 'f1': 0.5293803015340173, 'precision': 0.5293803015340173, 'recall': 0.5293803015340173}
04/08/2021 13:30:45 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 13:31:12 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:31:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:31:12 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:31:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:31:12 - INFO - __main__ -   Epoch: 0005 | Time: 0m_27s | train_loss: 4.740 | val_loss: 8.182
04/08/2021 13:31:12 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5178571428571429, 'f1': 0.5300210561776733, 'precision': 0.5300210561776733, 'recall': 0.5300210561776733}
04/08/2021 13:31:12 - INFO - __main__ -   	current patience value: 2/10
04/08/2021 13:31:39 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:31:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:31:39 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:31:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:31:39 - INFO - __main__ -   Epoch: 0006 | Time: 0m_27s | train_loss: 4.709 | val_loss: 6.449
04/08/2021 13:31:39 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5475274725274725, 'f1': 0.5546204531622222, 'precision': 0.5546204531622222, 'recall': 0.5546204531622222}
04/08/2021 13:31:39 - INFO - __main__ -   	--Found new best val f1
04/08/2021 13:31:44 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 13:32:11 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:32:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:32:11 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:32:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:32:11 - INFO - __main__ -   Epoch: 0007 | Time: 0m_26s | train_loss: 4.752 | val_loss: 6.075
04/08/2021 13:32:11 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5499999999999999, 'f1': 0.5424889833610538, 'precision': 0.5424889833610538, 'recall': 0.5424889833610538}
04/08/2021 13:32:11 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 13:32:38 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:32:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:32:38 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:32:38 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:32:38 - INFO - __main__ -   Epoch: 0008 | Time: 0m_27s | train_loss: 4.680 | val_loss: 5.058
04/08/2021 13:32:38 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6620879120879121, 'f1': 0.6011580372082894, 'precision': 0.6011580372082894, 'recall': 0.6011580372082894}
04/08/2021 13:32:38 - INFO - __main__ -   	--Found new best val f1
04/08/2021 13:32:43 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 13:33:09 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:33:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:33:09 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:33:09 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:33:09 - INFO - __main__ -   Epoch: 0009 | Time: 0m_26s | train_loss: 4.706 | val_loss: 6.565
04/08/2021 13:33:09 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5425824175824175, 'f1': 0.5457006410915791, 'precision': 0.5457006410915791, 'recall': 0.5457006410915791}
04/08/2021 13:33:09 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 13:33:36 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:33:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:33:36 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:33:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:33:36 - INFO - __main__ -   Epoch: 0010 | Time: 0m_27s | train_loss: 4.695 | val_loss: 6.257
04/08/2021 13:33:36 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5587912087912088, 'f1': 0.5544322877030388, 'precision': 0.5544322877030388, 'recall': 0.5544322877030388}
04/08/2021 13:33:36 - INFO - __main__ -   	current patience value: 2/10
04/08/2021 13:34:04 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:34:04 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:34:04 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:34:04 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:34:04 - INFO - __main__ -   Epoch: 0011 | Time: 0m_27s | train_loss: 4.693 | val_loss: 6.771
04/08/2021 13:34:04 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5376373626373626, 'f1': 0.5414171367126246, 'precision': 0.5414171367126246, 'recall': 0.5414171367126246}
04/08/2021 13:34:04 - INFO - __main__ -   	current patience value: 3/10
04/08/2021 13:34:31 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:34:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:34:31 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:34:31 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:34:31 - INFO - __main__ -   Epoch: 0012 | Time: 0m_27s | train_loss: 4.666 | val_loss: 7.270
04/08/2021 13:34:31 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5381868131868132, 'f1': 0.5362710924212318, 'precision': 0.5362710924212318, 'recall': 0.5362710924212318}
04/08/2021 13:34:31 - INFO - __main__ -   	current patience value: 4/10
04/08/2021 13:34:58 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:34:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:34:58 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:34:58 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:34:58 - INFO - __main__ -   Epoch: 0013 | Time: 0m_27s | train_loss: 4.623 | val_loss: 5.657
04/08/2021 13:34:58 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5892857142857142, 'f1': 0.5794231920805524, 'precision': 0.5794231920805524, 'recall': 0.5794231920805524}
04/08/2021 13:34:58 - INFO - __main__ -   	current patience value: 5/10
04/08/2021 13:35:25 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:35:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:35:25 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:35:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:35:25 - INFO - __main__ -   Epoch: 0014 | Time: 0m_27s | train_loss: 4.620 | val_loss: 6.587
04/08/2021 13:35:25 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5494505494505495, 'f1': 0.5512593383858644, 'precision': 0.5512593383858644, 'recall': 0.5512593383858644}
04/08/2021 13:35:25 - INFO - __main__ -   	current patience value: 6/10
04/08/2021 13:35:52 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:35:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:35:52 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:35:52 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:35:52 - INFO - __main__ -   Epoch: 0015 | Time: 0m_27s | train_loss: 4.657 | val_loss: 7.478
04/08/2021 13:35:52 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5274725274725275, 'f1': 0.542712245614114, 'precision': 0.542712245614114, 'recall': 0.542712245614114}
04/08/2021 13:35:52 - INFO - __main__ -   	current patience value: 7/10
04/08/2021 13:36:20 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:36:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:36:20 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:36:20 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:36:20 - INFO - __main__ -   Epoch: 0016 | Time: 0m_27s | train_loss: 4.550 | val_loss: 7.498
04/08/2021 13:36:20 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5475274725274726, 'f1': 0.5456351292174525, 'precision': 0.5456351292174525, 'recall': 0.5456351292174525}
04/08/2021 13:36:20 - INFO - __main__ -   	current patience value: 8/10
04/08/2021 13:36:47 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:36:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:36:47 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:36:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:36:47 - INFO - __main__ -   Epoch: 0017 | Time: 0m_27s | train_loss: 4.643 | val_loss: 7.232
04/08/2021 13:36:47 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.535989010989011, 'f1': 0.5411971588316121, 'precision': 0.5411971588316121, 'recall': 0.5411971588316121}
04/08/2021 13:36:47 - INFO - __main__ -   	current patience value: 9/10
04/08/2021 13:37:14 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:37:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:37:14 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:37:14 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:37:14 - INFO - __main__ -   Epoch: 0018 | Time: 0m_27s | train_loss: 4.573 | val_loss: 5.236
04/08/2021 13:37:14 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6332417582417582, 'f1': 0.5998940736904176, 'precision': 0.5998940736904176, 'recall': 0.5998940736904176}
04/08/2021 13:37:14 - INFO - __main__ -   	current patience value: 10/10
04/08/2021 13:37:14 - INFO - __main__ -   	--STOPPING EARLY
04/08/2021 13:37:14 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models_additional/bgar/bert-base-uncased/trg_fc512_lr0.0005_frozen
04/08/2021 13:37:14 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models_additional/bgar/bert-base-uncased/trg_fc512_lr0.0005_frozen
04/08/2021 13:37:21 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 13:37:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:37:21 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 13:37:21 - INFO - training_utils.postprocess -   23 (1.11 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 13:37:21 - INFO - __main__ -   best_val_loss: 5.058
04/08/2021 13:37:21 - INFO - __main__ -   📣 best validation metrics 📣 {'acc': 0.6620879120879121, 'f1': 0.6011580372082894, 'precision': 0.6011580372082894, 'recall': 0.6011580372082894}
