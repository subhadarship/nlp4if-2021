04/06/2021 09:53:02 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/06/2021 09:53:02 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: ar_all,bg_200
	trglang: bg
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/arbg/bert-base-multilingual-cased/few200_fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/arbg/bert-base-multilingual-cased/few200_fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/06/2021 09:53:02 - INFO - __main__ -   device: cuda
04/06/2021 09:53:02 - INFO - data_utils.load -   considered 198 (100.00 %) samples out of 198 total samples in ../data/prepared/train.ar.tsv
04/06/2021 09:53:02 - INFO - data_utils.load -   considered 200 (6.67 %) samples out of 3000 total samples in ../data/prepared/train.bg.tsv
04/06/2021 09:53:02 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/prepared/dev.bg.tsv
04/06/2021 09:53:02 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
04/06/2021 09:53:03 - WARNING - data_utils.bert_data -   trimming sentence 232 of length 731 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/06/2021 09:53:03 - WARNING - data_utils.bert_data -   trimming sentence 292 of length 3668 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   num train samples: 398
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   num val samples: 350
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   num test samples: None
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   val sentence max len: 125
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   train OOV: 197 (0.67%) out of 29235 running tokens are OOV
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   val OOV: 65 (0.33%) out of 19421 running tokens are OOV
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   look at some train samples 👀
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: #عاجل #خادم_الحرمين_الشريفين يصدر أمره بمنع التجول للحد من انتشار #فيروس_كورونا الجديد ابتداءً من الساعة الـ 7 مساءً وحتى الساعة الـ 6 صباحًا لمدة ( 21 ) يومًا من مساء يوم الأثنين 28 رجب 1441هـ، الموافق 23 مارس 2020م. #واس URL, text ids: [101, 108, 781, 24728, 10961, 108, 770, 13761, 10700, 168, 59901, 102562, 11294, 168, 59901, 31330, 20884, 11294, 793, 34733, 89036, 10388, 764, 20623, 11693, 59901, 51731, 14358, 787, 87536, 10658, 10289, 49520, 108, 10210, 53797, 168, 786, 52274, 14695, 57150, 56744, 12611, 16275, 10289, 100736, 98050, 128, 788, 56779, 16275, 72035, 100736, 98050, 127, 777, 30877, 12616, 13633, 52237, 113, 10296, 114, 26566, 13633, 10289, 788, 56779, 26566, 59901, 35849, 106637, 10348, 773, 50576, 91280, 56100, 752, 59901, 54037, 51953, 10328, 17740, 23607, 10700, 119, 108, 791, 15995, 31191, 102], original labels: yes no yes no no no no, label ids: [[0], [1], [0], [1], [1], [1], [1]]
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: بعد كل الإجراءات الاحترازية التي تقوم بها #المملكة للحد من انتشار #كورونا . . . هل تؤيد فرض #حظر_تجول في #السعودية من الساعة (٧م) إلى الساعة (٧ص) ابتداء من يوم غدٍ الاحد . . - نعم أُوَيد ( #ريتويت ) ، ولماذا ؟ - لا أُوَيد ( #إعجاب ) ، ولماذا ؟ . .  #انا_مع_حظر_التجول_الاجباري URL, text ids: [101, 11866, 16333, 59901, 111171, 70520, 10564, 59901, 20609, 16506, 20688, 10535, 11702, 60316, 21016, 108, 21500, 787, 87536, 10658, 10289, 49520, 108, 786, 52274, 14695, 119, 119, 119, 790, 10961, 766, 45099, 14472, 95311, 108, 769, 34353, 168, 766, 54731, 10961, 10210, 108, 38658, 10289, 100736, 113, 100, 114, 10863, 100736, 113, 100, 114, 56744, 12611, 10289, 26566, 782, 10658, 48406, 59901, 20609, 10658, 119, 119, 118, 789, 41507, 759, 40381, 11145, 23112, 14472, 113, 108, 773, 31092, 108451, 114, 752, 39539, 56580, 10429, 756, 118, 13879, 759, 40381, 11145, 23112, 14472, 113, 108, 761, 11693, 98415, 114, 752, 39539, 56580, 10429, 756, 119, 119, 108, 14269, 10429, 168, 11797, 168, 769, 34353, 168, 59901, 51731, 14358, 168, 59901, 24728, 26764, 10461, 31191, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: تصويت 🔴 .  . هل تعتقد أن ( حظر التجول ) الذي تُطبقه بعض الدول يمنع انتشار فيروس كورونا .. ولماذا ؟. .  . نعم = رتويت  . لا = مفضلة, text ids: [101, 766, 15470, 108451, 100, 119, 119, 790, 10961, 766, 75501, 11341, 113, 769, 34353, 59901, 51731, 14358, 114, 13121, 766, 40381, 75000, 31501, 16845, 46084, 793, 20623, 11693, 49520, 10210, 53797, 786, 52274, 14695, 119, 119, 39539, 56580, 10429, 756, 119, 119, 119, 789, 41507, 134, 773, 40041, 31092, 119, 13879, 134, 788, 63638, 10382, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: ما هو دي دعواتنا, text ids: [101, 12441, 11917, 35640, 771, 98273, 10564, 14695, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/06/2021 09:53:03 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: #الصحة تعلن عن تسجيل (١١٩) حالة إصابة جديدة بفيروس #كورونا الجديد (كوفيد١٩). URL, text ids: [101, 108, 101107, 766, 70496, 10582, 11749, 766, 11091, 71625, 113, 805, 111175, 111180, 114, 40288, 761, 58863, 10382, 50759, 764, 77289, 16578, 108, 786, 52274, 14695, 57150, 113, 786, 22468, 14472, 111175, 111180, 114, 119, 31191, 102], original labels: yes no yes no no no no, label ids: [[0], [1], [0], [1], [1], [1], [1]]
04/06/2021 09:53:05 - INFO - data_utils.preprocess_bert -   there are nearly 33 batches in an epoch
04/06/2021 09:53:08 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/06/2021 09:53:08 - INFO - __main__ -   the model has 202,261 trainable parameters
04/06/2021 09:53:08 - INFO - __main__ -   🌋  starting training..
04/06/2021 09:53:11 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:53:11 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:11 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:53:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:11 - INFO - __main__ -   Epoch: 0001 | Time: 0m_3s | train_loss: 6.224 | val_loss: 4.208
04/06/2021 09:53:11 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8114285714285714, 'f1': 0.7939386848600304, 'precision': 0.7939386848600304, 'recall': 0.7939386848600304}
04/06/2021 09:53:11 - INFO - __main__ -   	--Found new best val f1
04/06/2021 09:53:12 - INFO - __main__ -   	current patience value: 0/10
04/06/2021 09:53:16 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:53:16 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:16 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:53:16 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:16 - INFO - __main__ -   Epoch: 0002 | Time: 0m_3s | train_loss: 5.443 | val_loss: 4.464
04/06/2021 09:53:16 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8359183673469388, 'f1': 0.8049036442777538, 'precision': 0.8049036442777538, 'recall': 0.8049036442777538}
04/06/2021 09:53:16 - INFO - __main__ -   	--Found new best val f1
04/06/2021 09:53:25 - INFO - __main__ -   	current patience value: 0/10
04/06/2021 09:53:29 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:53:29 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:29 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:53:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:29 - INFO - __main__ -   Epoch: 0003 | Time: 0m_3s | train_loss: 5.298 | val_loss: 4.041
04/06/2021 09:53:29 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8310204081632654, 'f1': 0.8027395100461868, 'precision': 0.8027395100461868, 'recall': 0.8027395100461868}
04/06/2021 09:53:29 - INFO - __main__ -   	current patience value: 1/10
04/06/2021 09:53:32 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:53:32 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:32 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:53:32 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:32 - INFO - __main__ -   Epoch: 0004 | Time: 0m_3s | train_loss: 5.095 | val_loss: 3.918
04/06/2021 09:53:32 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8322448979591837, 'f1': 0.8053962277968145, 'precision': 0.8053962277968145, 'recall': 0.8053962277968145}
04/06/2021 09:53:32 - INFO - __main__ -   	--Found new best val f1
04/06/2021 09:53:43 - INFO - __main__ -   	current patience value: 0/10
04/06/2021 09:53:46 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:53:46 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:46 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:53:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:46 - INFO - __main__ -   Epoch: 0005 | Time: 0m_3s | train_loss: 4.988 | val_loss: 3.745
04/06/2021 09:53:46 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8395918367346938, 'f1': 0.8108201506524952, 'precision': 0.8108201506524952, 'recall': 0.8108201506524952}
04/06/2021 09:53:46 - INFO - __main__ -   	--Found new best val f1
04/06/2021 09:53:56 - INFO - __main__ -   	current patience value: 0/10
04/06/2021 09:53:59 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:53:59 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:59 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:53:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:53:59 - INFO - __main__ -   Epoch: 0006 | Time: 0m_3s | train_loss: 4.695 | val_loss: 3.835
04/06/2021 09:53:59 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8424489795918367, 'f1': 0.8137795069822407, 'precision': 0.8137795069822407, 'recall': 0.8137795069822407}
04/06/2021 09:53:59 - INFO - __main__ -   	--Found new best val f1
04/06/2021 09:54:16 - INFO - __main__ -   	current patience value: 0/10
04/06/2021 09:54:20 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:20 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:20 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:20 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:20 - INFO - __main__ -   Epoch: 0007 | Time: 0m_3s | train_loss: 4.600 | val_loss: 4.103
04/06/2021 09:54:20 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8253061224489795, 'f1': 0.8056518806231006, 'precision': 0.8056518806231006, 'recall': 0.8056518806231006}
04/06/2021 09:54:20 - INFO - __main__ -   	current patience value: 1/10
04/06/2021 09:54:23 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:23 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:23 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:23 - INFO - training_utils.postprocess -   7 (0.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:23 - INFO - __main__ -   Epoch: 0008 | Time: 0m_3s | train_loss: 4.724 | val_loss: 3.705
04/06/2021 09:54:23 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8314285714285713, 'f1': 0.8092258292767801, 'precision': 0.8092258292767801, 'recall': 0.8092258292767801}
04/06/2021 09:54:23 - INFO - __main__ -   	current patience value: 2/10
04/06/2021 09:54:26 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:26 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:26 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:26 - INFO - __main__ -   Epoch: 0009 | Time: 0m_3s | train_loss: 4.348 | val_loss: 3.259
04/06/2021 09:54:26 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8485714285714286, 'f1': 0.8177427842242863, 'precision': 0.8177427842242863, 'recall': 0.8177427842242863}
04/06/2021 09:54:26 - INFO - __main__ -   	--Found new best val f1
04/06/2021 09:54:36 - INFO - __main__ -   	current patience value: 0/10
04/06/2021 09:54:39 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:39 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:39 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:39 - INFO - __main__ -   Epoch: 0010 | Time: 0m_3s | train_loss: 4.425 | val_loss: 3.404
04/06/2021 09:54:39 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8371428571428572, 'f1': 0.8113661246847966, 'precision': 0.8113661246847966, 'recall': 0.8113661246847966}
04/06/2021 09:54:39 - INFO - __main__ -   	current patience value: 1/10
04/06/2021 09:54:42 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:42 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:42 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:42 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:42 - INFO - __main__ -   Epoch: 0011 | Time: 0m_3s | train_loss: 4.293 | val_loss: 3.739
04/06/2021 09:54:42 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8118367346938776, 'f1': 0.7982447873082993, 'precision': 0.7982447873082993, 'recall': 0.7982447873082993}
04/06/2021 09:54:42 - INFO - __main__ -   	current patience value: 2/10
04/06/2021 09:54:46 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:46 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:46 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:46 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:46 - INFO - __main__ -   Epoch: 0012 | Time: 0m_3s | train_loss: 4.141 | val_loss: 3.396
04/06/2021 09:54:46 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8310204081632653, 'f1': 0.8082115223337126, 'precision': 0.8082115223337126, 'recall': 0.8082115223337126}
04/06/2021 09:54:46 - INFO - __main__ -   	current patience value: 3/10
04/06/2021 09:54:49 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:49 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:49 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:49 - INFO - training_utils.postprocess -   15 (1.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:49 - INFO - __main__ -   Epoch: 0013 | Time: 0m_3s | train_loss: 4.119 | val_loss: 3.767
04/06/2021 09:54:49 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.7873469387755102, 'f1': 0.7832866487604858, 'precision': 0.7832866487604858, 'recall': 0.7832866487604858}
04/06/2021 09:54:49 - INFO - __main__ -   	current patience value: 4/10
04/06/2021 09:54:52 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:52 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:52 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:52 - INFO - training_utils.postprocess -   14 (1.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:52 - INFO - __main__ -   Epoch: 0014 | Time: 0m_3s | train_loss: 4.177 | val_loss: 3.491
04/06/2021 09:54:52 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8326530612244898, 'f1': 0.8101284067956297, 'precision': 0.8101284067956297, 'recall': 0.8101284067956297}
04/06/2021 09:54:52 - INFO - __main__ -   	current patience value: 5/10
04/06/2021 09:54:56 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:56 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:56 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:56 - INFO - training_utils.postprocess -   8 (0.57 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:56 - INFO - __main__ -   Epoch: 0015 | Time: 0m_3s | train_loss: 4.078 | val_loss: 4.234
04/06/2021 09:54:56 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.7518367346938775, 'f1': 0.7599312774053564, 'precision': 0.7599312774053564, 'recall': 0.7599312774053564}
04/06/2021 09:54:56 - INFO - __main__ -   	current patience value: 6/10
04/06/2021 09:54:59 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:54:59 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:59 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:54:59 - INFO - training_utils.postprocess -   16 (1.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:54:59 - INFO - __main__ -   Epoch: 0016 | Time: 0m_3s | train_loss: 4.226 | val_loss: 4.040
04/06/2021 09:54:59 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.7669387755102041, 'f1': 0.7701438730546887, 'precision': 0.7701438730546887, 'recall': 0.7701438730546887}
04/06/2021 09:54:59 - INFO - __main__ -   	current patience value: 7/10
04/06/2021 09:55:02 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:55:02 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:02 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:55:02 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:02 - INFO - __main__ -   Epoch: 0017 | Time: 0m_3s | train_loss: 3.896 | val_loss: 3.834
04/06/2021 09:55:02 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.7848979591836736, 'f1': 0.7816556670785298, 'precision': 0.7816556670785298, 'recall': 0.7816556670785298}
04/06/2021 09:55:02 - INFO - __main__ -   	current patience value: 8/10
04/06/2021 09:55:06 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:55:06 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:06 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:55:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:06 - INFO - __main__ -   Epoch: 0018 | Time: 0m_3s | train_loss: 3.910 | val_loss: 3.184
04/06/2021 09:55:06 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8461224489795919, 'f1': 0.8159714804101503, 'precision': 0.8159714804101503, 'recall': 0.8159714804101503}
04/06/2021 09:55:06 - INFO - __main__ -   	current patience value: 9/10
04/06/2021 09:55:09 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:55:09 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:09 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:55:09 - INFO - training_utils.postprocess -   25 (1.79 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:09 - INFO - __main__ -   Epoch: 0019 | Time: 0m_3s | train_loss: 3.915 | val_loss: 3.695
04/06/2021 09:55:09 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8028571428571428, 'f1': 0.7923553182486742, 'precision': 0.7923553182486742, 'recall': 0.7923553182486742}
04/06/2021 09:55:09 - INFO - __main__ -   	current patience value: 10/10
04/06/2021 09:55:09 - INFO - __main__ -   	--STOPPING EARLY
04/06/2021 09:55:09 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/arbg/bert-base-multilingual-cased/few200_fc256_lr0.0005_frozen
04/06/2021 09:55:09 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/arbg/bert-base-multilingual-cased/few200_fc256_lr0.0005_frozen
04/06/2021 09:55:11 - INFO - training_utils.train_loop -   postprocessing targets..
04/06/2021 09:55:11 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:11 - INFO - training_utils.train_loop -   postprocessing predictions..
04/06/2021 09:55:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/06/2021 09:55:11 - INFO - __main__ -   best_val_loss: 3.259
04/06/2021 09:55:11 - INFO - __main__ -   📣 best validation metrics 📣 {'acc': 0.8485714285714286, 'f1': 0.8177427842242863, 'precision': 0.8177427842242863, 'recall': 0.8177427842242863}
