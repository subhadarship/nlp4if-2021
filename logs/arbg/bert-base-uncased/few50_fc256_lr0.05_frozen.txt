04/07/2021 02:30:56 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/07/2021 02:30:56 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: ar_all,bg_50
	trglang: bg
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/arbg/bert-base-uncased/few50_fc256_lr0.05_frozen.txt
	random_seed: 123
	lr: 0.05
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/arbg/bert-base-uncased/few50_fc256_lr0.05_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/07/2021 02:30:57 - INFO - __main__ -   device: cuda
04/07/2021 02:30:57 - INFO - data_utils.load -   considered 198 (100.00 %) samples out of 198 total samples in ../data/prepared/train.ar.tsv
04/07/2021 02:30:57 - INFO - data_utils.load -   considered 50 (1.67 %) samples out of 3000 total samples in ../data/prepared/train.bg.tsv
04/07/2021 02:30:57 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/prepared/dev.bg.tsv
04/07/2021 02:30:57 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/07/2021 02:30:57 - WARNING - data_utils.bert_data -   trimming sentence 232 of length 1441 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   num train samples: 248
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   num val samples: 350
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   num test samples: None
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   val sentence max len: 246
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   train OOV: 180 (0.49%) out of 37064 running tokens are OOV
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   val OOV: 7 (0.02%) out of 32956 running tokens are OOV
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   look at some train samples 👀
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: #عاجل #خادم_الحرمين_الشريفين يصدر أمره بمنع التجول للحد من انتشار #فيروس_كورونا الجديد ابتداءً من الساعة الـ 7 مساءً وحتى الساعة الـ 6 صباحًا لمدة ( 21 ) يومًا من مساء يوم الأثنين 28 رجب 1441هـ، الموافق 23 مارس 2020م. #واس URL, text ids: [101, 1001, 1288, 25573, 29819, 23673, 1001, 1277, 25573, 15394, 22192, 1035, 1270, 23673, 29820, 17149, 22192, 14498, 15915, 1035, 1270, 23673, 29825, 17149, 14498, 29833, 14498, 15915, 1300, 29826, 15394, 17149, 1270, 22192, 17149, 14157, 1271, 22192, 15915, 29830, 1270, 23673, 29817, 29819, 29836, 23673, 1294, 23673, 29820, 15394, 1295, 15915, 1270, 15915, 29817, 29825, 25573, 17149, 1001, 1291, 14498, 17149, 29836, 29824, 1035, 1293, 29836, 17149, 29836, 15915, 25573, 1270, 23673, 29819, 15394, 14498, 15394, 1270, 29816, 29817, 15394, 25573, 29815, 1295, 15915, 1270, 23673, 29824, 25573, 29830, 19433, 1270, 23673, 29832, 1021, 1295, 29824, 25573, 29815, 1298, 29820, 29817, 29837, 1270, 23673, 29824, 25573, 29830, 19433, 1270, 23673, 29832, 1020, 1284, 29816, 25573, 29820, 25573, 1294, 22192, 15394, 19433, 1006, 2538, 1007, 1300, 29836, 22192, 25573, 1295, 15915, 1295, 29824, 25573, 29815, 1300, 29836, 22192, 1270, 23673, 25573, 29818, 15915, 14498, 15915, 2654, 1280, 29819, 29816, 14748, 2487, 14157, 29832, 1268, 1270, 23673, 22192, 29836, 25573, 29833, 29834, 2603, 1295, 25573, 17149, 29824, 12609, 22192, 1012, 1001, 1298, 25573, 29824, 24471, 2140, 102], original labels: yes no yes no no no no, label ids: [[0], [1], [0], [1], [1], [1], [1]]
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: بعد كل الإجراءات الاحترازية التي تقوم بها #المملكة للحد من انتشار #كورونا . . . هل تؤيد فرض #حظر_تجول في #السعودية من الساعة (٧م) إلى الساعة (٧ص) ابتداء من يوم غدٍ الاحد . . - نعم أُوَيد ( #ريتويت ) ، ولماذا ؟ - لا أُوَيد ( #إعجاب ) ، ولماذا ؟ . .  #انا_مع_حظر_التجول_الاجباري URL, text ids: [101, 1271, 29830, 15394, 1293, 23673, 1270, 23673, 25573, 29819, 17149, 25573, 29815, 25573, 29817, 1270, 23673, 25573, 29820, 29817, 17149, 25573, 29823, 14498, 19433, 1270, 23673, 29817, 14498, 1273, 29834, 29836, 22192, 1271, 14157, 25573, 1001, 1270, 23673, 22192, 22192, 23673, 29835, 19433, 1294, 23673, 29820, 15394, 1295, 15915, 1270, 15915, 29817, 29825, 25573, 17149, 1001, 1293, 29836, 17149, 29836, 15915, 25573, 1012, 1012, 1012, 1297, 23673, 1273, 29836, 14498, 15394, 1291, 17149, 29827, 1001, 1276, 29829, 17149, 1035, 1273, 29819, 29836, 23673, 1291, 14498, 1001, 1270, 23673, 29824, 29830, 29836, 15394, 14498, 19433, 1295, 15915, 1270, 23673, 29824, 25573, 29830, 19433, 1006, 100, 1007, 1270, 23673, 29837, 1270, 23673, 29824, 25573, 29830, 19433, 1006, 100, 1007, 1270, 29816, 29817, 15394, 25573, 29815, 1295, 15915, 1300, 29836, 22192, 1289, 15394, 1270, 23673, 25573, 29820, 15394, 1012, 1012, 1011, 1296, 29830, 22192, 1270, 29836, 14498, 15394, 1006, 1001, 1280, 14498, 29817, 29836, 14498, 29817, 1007, 1268, 1298, 23673, 22192, 25573, 29822, 25573, 100, 1011, 1294, 25573, 1270, 29836, 14498, 15394, 1006, 1001, 1270, 29830, 29819, 25573, 29816, 1007, 1268, 1298, 23673, 22192, 25573, 29822, 25573, 100, 1012, 1012, 1001, 1270, 15915, 25573, 1035, 1295, 29830, 1035, 1276, 29829, 17149, 1035, 1270, 23673, 29817, 29819, 29836, 23673, 1035, 1270, 23673, 25573, 29819, 29816, 25573, 17149, 14498, 24471, 2140, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: تصويت 🔴 .  . هل تعتقد أن ( حظر التجول ) الذي تُطبقه بعض الدول يمنع انتشار فيروس كورونا .. ولماذا ؟. .  . نعم = رتويت  . لا = مفضلة, text ids: [101, 1273, 29826, 29836, 14498, 29817, 100, 1012, 1012, 1297, 23673, 1273, 29830, 29817, 29834, 15394, 1270, 15915, 1006, 1276, 29829, 17149, 1270, 23673, 29817, 29819, 29836, 23673, 1007, 1270, 23673, 29822, 14498, 1273, 29828, 29816, 29834, 14157, 1271, 29830, 29827, 1270, 23673, 15394, 29836, 23673, 1300, 22192, 15915, 29830, 1270, 15915, 29817, 29825, 25573, 17149, 1291, 14498, 17149, 29836, 29824, 1293, 29836, 17149, 29836, 15915, 25573, 1012, 1012, 1298, 23673, 22192, 25573, 29822, 25573, 100, 1012, 1012, 1012, 1296, 29830, 22192, 1027, 1280, 29817, 29836, 14498, 29817, 1012, 1294, 25573, 1027, 1295, 29833, 29827, 23673, 19433, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: ما هو دي دعواتنا, text ids: [101, 1295, 25573, 1297, 29836, 1278, 14498, 1278, 29830, 29836, 25573, 29817, 15915, 25573, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/07/2021 02:30:58 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: #الصحة تعلن عن تسجيل (١١٩) حالة إصابة جديدة بفيروس #كورونا الجديد (كوفيد١٩). URL, text ids: [101, 1001, 1270, 23673, 29826, 29820, 19433, 1273, 29830, 23673, 15915, 1288, 15915, 1273, 29824, 29819, 14498, 23673, 1006, 100, 1007, 1276, 25573, 23673, 19433, 1270, 29826, 25573, 29816, 19433, 1275, 15394, 14498, 15394, 19433, 1271, 29833, 14498, 17149, 29836, 29824, 1001, 1293, 29836, 17149, 29836, 15915, 25573, 1270, 23673, 29819, 15394, 14498, 15394, 1006, 100, 1007, 1012, 24471, 2140, 102], original labels: yes no yes no no no no, label ids: [[0], [1], [0], [1], [1], [1], [1]]
04/07/2021 02:31:00 - INFO - data_utils.preprocess_bert -   there are nearly 43 batches in an epoch
04/07/2021 02:31:01 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/07/2021 02:31:01 - INFO - __main__ -   the model has 202,261 trainable parameters
04/07/2021 02:31:01 - INFO - __main__ -   🌋  starting training..
04/07/2021 02:31:07 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:31:07 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:07 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:31:07 - INFO - training_utils.postprocess -   265 (18.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:07 - INFO - __main__ -   Epoch: 0001 | Time: 0m_5s | train_loss: 42.790 | val_loss: 9.074
04/07/2021 02:31:07 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.3604081632653061, 'f1': 0.3369388511442506, 'precision': 0.3369388511442506, 'recall': 0.3369388511442506}
04/07/2021 02:31:07 - INFO - __main__ -   	--Found new best val f1
04/07/2021 02:31:07 - INFO - __main__ -   	current patience value: 0/10
04/07/2021 02:31:12 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:31:12 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:12 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:31:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:12 - INFO - __main__ -   Epoch: 0002 | Time: 0m_5s | train_loss: 6.341 | val_loss: 5.361
04/07/2021 02:31:12 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6383673469387755, 'f1': 0.5880238617924356, 'precision': 0.5880238617924356, 'recall': 0.5880238617924356}
04/07/2021 02:31:12 - INFO - __main__ -   	--Found new best val f1
04/07/2021 02:31:24 - INFO - __main__ -   	current patience value: 0/10
04/07/2021 02:31:29 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:31:29 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:29 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:31:29 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:29 - INFO - __main__ -   Epoch: 0003 | Time: 0m_5s | train_loss: 7.769 | val_loss: 5.137
04/07/2021 02:31:29 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
04/07/2021 02:31:29 - INFO - __main__ -   	--Found new best val f1
04/07/2021 02:31:34 - INFO - __main__ -   	current patience value: 0/10
04/07/2021 02:31:39 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:31:39 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:39 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:31:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:39 - INFO - __main__ -   Epoch: 0004 | Time: 0m_5s | train_loss: 5.913 | val_loss: 5.008
04/07/2021 02:31:39 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
04/07/2021 02:31:39 - INFO - __main__ -   	current patience value: 1/10
04/07/2021 02:31:44 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:31:44 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:44 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:31:44 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:44 - INFO - __main__ -   Epoch: 0005 | Time: 0m_5s | train_loss: 6.063 | val_loss: 5.215
04/07/2021 02:31:44 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
04/07/2021 02:31:44 - INFO - __main__ -   	current patience value: 2/10
04/07/2021 02:31:50 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:31:50 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:50 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:31:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:50 - INFO - __main__ -   Epoch: 0006 | Time: 0m_5s | train_loss: 6.151 | val_loss: 5.213
04/07/2021 02:31:50 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.74, 'f1': 0.7064374994368425, 'precision': 0.7064374994368425, 'recall': 0.7064374994368425}
04/07/2021 02:31:50 - INFO - __main__ -   	current patience value: 3/10
04/07/2021 02:31:55 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:31:55 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:55 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:31:55 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:31:55 - INFO - __main__ -   Epoch: 0007 | Time: 0m_5s | train_loss: 8.828 | val_loss: 5.735
04/07/2021 02:31:55 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5261224489795918, 'f1': 0.4559548725805893, 'precision': 0.4559548725805893, 'recall': 0.4559548725805893}
04/07/2021 02:31:55 - INFO - __main__ -   	current patience value: 4/10
04/07/2021 02:32:00 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:32:00 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:00 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:32:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:00 - INFO - __main__ -   Epoch: 0008 | Time: 0m_5s | train_loss: 6.072 | val_loss: 5.250
04/07/2021 02:32:00 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
04/07/2021 02:32:00 - INFO - __main__ -   	current patience value: 5/10
04/07/2021 02:32:06 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:32:06 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:06 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:32:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:06 - INFO - __main__ -   Epoch: 0009 | Time: 0m_5s | train_loss: 5.902 | val_loss: 5.133
04/07/2021 02:32:06 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.74, 'f1': 0.7064374994368425, 'precision': 0.7064374994368425, 'recall': 0.7064374994368425}
04/07/2021 02:32:06 - INFO - __main__ -   	current patience value: 6/10
04/07/2021 02:32:11 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:32:11 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:11 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:32:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:11 - INFO - __main__ -   Epoch: 0010 | Time: 0m_5s | train_loss: 5.914 | val_loss: 5.424
04/07/2021 02:32:11 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.6383673469387755, 'f1': 0.5880238617924356, 'precision': 0.5880238617924356, 'recall': 0.5880238617924356}
04/07/2021 02:32:11 - INFO - __main__ -   	current patience value: 7/10
04/07/2021 02:32:16 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:32:16 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:16 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:32:16 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:16 - INFO - __main__ -   Epoch: 0011 | Time: 0m_5s | train_loss: 5.883 | val_loss: 4.947
04/07/2021 02:32:16 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
04/07/2021 02:32:16 - INFO - __main__ -   	current patience value: 8/10
04/07/2021 02:32:22 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:32:22 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:22 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:32:22 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:22 - INFO - __main__ -   Epoch: 0012 | Time: 0m_5s | train_loss: 5.851 | val_loss: 5.719
04/07/2021 02:32:22 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.5261224489795918, 'f1': 0.4559548725805893, 'precision': 0.4559548725805893, 'recall': 0.4559548725805893}
04/07/2021 02:32:22 - INFO - __main__ -   	current patience value: 9/10
04/07/2021 02:32:27 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:32:27 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:27 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:32:27 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:27 - INFO - __main__ -   Epoch: 0013 | Time: 0m_5s | train_loss: 5.869 | val_loss: 5.220
04/07/2021 02:32:27 - INFO - __main__ -   📣 val metrics 📣 {'acc': 0.74, 'f1': 0.7064374994368425, 'precision': 0.7064374994368425, 'recall': 0.7064374994368425}
04/07/2021 02:32:27 - INFO - __main__ -   	current patience value: 10/10
04/07/2021 02:32:27 - INFO - __main__ -   	--STOPPING EARLY
04/07/2021 02:32:27 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/arbg/bert-base-uncased/few50_fc256_lr0.05_frozen
04/07/2021 02:32:27 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/arbg/bert-base-uncased/few50_fc256_lr0.05_frozen
04/07/2021 02:32:30 - INFO - training_utils.train_loop -   postprocessing targets..
04/07/2021 02:32:30 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:30 - INFO - training_utils.train_loop -   postprocessing predictions..
04/07/2021 02:32:30 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/07/2021 02:32:30 - INFO - __main__ -   best_val_loss: 5.137
04/07/2021 02:32:30 - INFO - __main__ -   📣 best validation metrics 📣 {'acc': 0.8289795918367346, 'f1': 0.8027195058823173, 'precision': 0.8027195058823173, 'recall': 0.8027195058823173}
