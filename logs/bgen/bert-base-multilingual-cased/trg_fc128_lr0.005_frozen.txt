03/22/2021 15:14:54 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

03/22/2021 15:14:54 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all
	trglang: en
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/bgen/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/bgen/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

03/22/2021 15:14:55 - INFO - __main__ -   device: cuda
03/22/2021 15:14:55 - INFO - data_utils.load -   considered 375 (100.00 %) samples out of 375 total samples in ../data/prepared/train.en.tsv
03/22/2021 15:14:55 - INFO - data_utils.load -   considered 76 (100.00 %) samples out of 76 total samples in ../data/prepared/dev.en.tsv
03/22/2021 15:14:55 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   num train samples: 375
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   num val samples: 76
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   num test samples: None
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   train sentence max len: 121
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   val sentence max len: 123
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   train OOV: 230 (1.21%) out of 18980 running tokens are OOV
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   val OOV: 69 (1.73%) out of 3993 running tokens are OOV
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Can someone explain why people who came in contact with the CPAC attendee are doing self quarantine instead of getting a #coronavirus test? WouldnÃ¢Â€Â™t we want to know ASAP if anyone that attendee interacted with now has the virus? URL, text ids: [101, 14820, 30455, 67004, 31237, 11426, 10479, 13383, 10106, 20637, 10169, 10105, 40070, 30340, 34465, 13321, 10301, 30918, 16567, 14517, 89106, 10238, 17427, 10108, 34875, 169, 108, 31206, 37715, 10251, 15839, 136, 100393, 10115, 60993, 11951, 21528, 10114, 21852, 17421, 38423, 12277, 51747, 10189, 34465, 13321, 51476, 27756, 10169, 11858, 10393, 10105, 20399, 136, 31191, 102], original labels: yes no no no no no no, label ids: [[0], [1], [1], [1], [1], [1], [1]]
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: How did USERID fail to contain #coronavirus? 1. By focusing on China, he failed to stop the virus coming in from other countries; 2. By focusing on foreign nationals, he failed to stop virus carried by US travelers; 3. By not testing, he let the virus spread undetected. URL, text ids: [101, 14962, 12172, 10808, 24093, 28895, 84891, 10114, 36003, 108, 31206, 37715, 10251, 136, 122, 119, 12716, 74117, 10135, 11593, 117, 10261, 20775, 10114, 20517, 10105, 20399, 23959, 10106, 10188, 10684, 15911, 132, 123, 119, 12716, 74117, 10135, 20796, 11844, 10107, 117, 10261, 20775, 10114, 20517, 20399, 21086, 10155, 10808, 23595, 10901, 132, 124, 119, 12716, 10472, 38306, 117, 10261, 13595, 10105, 20399, 25609, 23650, 104796, 10162, 119, 31191, 102], original labels: yes yes yes yes yes yes yes, label ids: [[0], [0], [0], [0], [0], [0], [0]]
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: I've just been informed that my COVID-19 lab result was negative. In an abundance of caution, I will remain under self-quarantine at the advice of medical professionals through Thursday at 2pm. I continue to feel fine and show no symptoms., text ids: [101, 146, 112, 10323, 12820, 10590, 64330, 10189, 15127, 32992, 90939, 11490, 118, 10270, 93409, 14493, 10134, 25785, 119, 10167, 10151, 104735, 18285, 10419, 10108, 11135, 30861, 117, 146, 11337, 25430, 10571, 16567, 118, 14517, 89106, 10238, 10160, 10105, 53426, 10108, 19436, 53755, 11222, 67067, 10160, 123, 77484, 119, 146, 17734, 10114, 38008, 13435, 10111, 11897, 10192, 62319, 119, 102], original labels: yes no no no no no no, label ids: [[0], [1], [1], [1], [1], [1], [1]]
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: This is deadly serious:  Talking about corona-virus this morning, Trump said, 'We closed it down. We stopped it.'  There were 15 confirmed cases in the US a week ago.  There are 233 today.  There will be *5,000* in a week  TRUMP'S INCOMPETENCE KILLS. URL, text ids: [101, 10747, 10124, 23457, 10454, 32342, 131, 71432, 10978, 31206, 118, 20399, 10531, 28757, 117, 29846, 12415, 117, 112, 12865, 18440, 10271, 12935, 119, 12865, 40949, 10271, 119, 112, 11723, 10309, 10208, 27347, 16480, 10106, 10105, 10808, 169, 16118, 36390, 119, 11723, 10301, 25818, 18745, 119, 11723, 11337, 10347, 115, 126, 117, 10259, 115, 10106, 169, 16118, 80047, 72679, 11127, 112, 156, 36351, 82272, 79936, 52338, 50655, 43161, 148, 38850, 66934, 119, 31191, 102], original labels: yes no yes yes no no yes, label ids: [[0], [1], [0], [0], [1], [1], [0]]
03/22/2021 15:14:56 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: My mans House would pop 6 Vicodin on Thursday and have that cure by Saturday morning., text ids: [101, 11590, 17381, 11545, 10894, 13717, 127, 39574, 29034, 10115, 10135, 67067, 10111, 10529, 10189, 77298, 10155, 24848, 28757, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
03/22/2021 15:14:58 - INFO - data_utils.preprocess_bert -   there are nearly 23 batches in an epoch
03/22/2021 15:15:01 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

03/22/2021 15:15:01 - INFO - __main__ -   the model has 101,141 trainable parameters
03/22/2021 15:15:01 - INFO - __main__ -   ðŸŒ‹  starting training..
03/22/2021 15:15:02 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:02 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:02 - INFO - training_utils.postprocess -   3 (0.99 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:02 - INFO - __main__ -   Epoch: 0001 | Time: 0m_1s | train_loss: 6.393 | val_loss: 5.953
03/22/2021 15:15:02 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5845864661654135, 'f1': 0.49629962721709286, 'precision': 0.49629962721709286, 'recall': 0.49629962721709286}
03/22/2021 15:15:02 - INFO - __main__ -   	--Found new best val f1
03/22/2021 15:15:04 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:04 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:04 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:04 - INFO - training_utils.postprocess -   8 (2.63 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:04 - INFO - __main__ -   Epoch: 0002 | Time: 0m_1s | train_loss: 5.795 | val_loss: 5.131
03/22/2021 15:15:04 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6616541353383459, 'f1': 0.6207190861923169, 'precision': 0.6207190861923169, 'recall': 0.6207190861923169}
03/22/2021 15:15:04 - INFO - __main__ -   	--Found new best val f1
03/22/2021 15:15:13 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:13 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:13 - INFO - training_utils.postprocess -   9 (2.96 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:13 - INFO - __main__ -   Epoch: 0003 | Time: 0m_1s | train_loss: 5.256 | val_loss: 5.193
03/22/2021 15:15:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6372180451127819, 'f1': 0.5608595087919387, 'precision': 0.5608595087919387, 'recall': 0.5608595087919387}
03/22/2021 15:15:14 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:14 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:14 - INFO - training_utils.postprocess -   4 (1.32 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:14 - INFO - __main__ -   Epoch: 0004 | Time: 0m_1s | train_loss: 5.294 | val_loss: 5.322
03/22/2021 15:15:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6409774436090226, 'f1': 0.5803197714795821, 'precision': 0.5803197714795821, 'recall': 0.5803197714795821}
03/22/2021 15:15:16 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:16 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:16 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:16 - INFO - training_utils.postprocess -   1 (0.33 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:16 - INFO - __main__ -   Epoch: 0005 | Time: 0m_1s | train_loss: 4.763 | val_loss: 5.214
03/22/2021 15:15:16 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6710526315789472, 'f1': 0.6211141090121766, 'precision': 0.6211141090121766, 'recall': 0.6211141090121766}
03/22/2021 15:15:16 - INFO - __main__ -   	--Found new best val f1
03/22/2021 15:15:24 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:24 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:24 - INFO - __main__ -   Epoch: 0006 | Time: 0m_1s | train_loss: 4.914 | val_loss: 5.015
03/22/2021 15:15:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6879699248120301, 'f1': 0.6457983946245334, 'precision': 0.6457983946245334, 'recall': 0.6457983946245334}
03/22/2021 15:15:24 - INFO - __main__ -   	--Found new best val f1
03/22/2021 15:15:33 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:33 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:33 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:33 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:33 - INFO - __main__ -   Epoch: 0007 | Time: 0m_1s | train_loss: 4.429 | val_loss: 5.231
03/22/2021 15:15:33 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6860902255639098, 'f1': 0.6411290872042128, 'precision': 0.6411290872042128, 'recall': 0.6411290872042128}
03/22/2021 15:15:34 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:34 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:34 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:34 - INFO - training_utils.postprocess -   4 (1.32 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:34 - INFO - __main__ -   Epoch: 0008 | Time: 0m_1s | train_loss: 4.513 | val_loss: 5.132
03/22/2021 15:15:34 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6898496240601505, 'f1': 0.637506717317365, 'precision': 0.637506717317365, 'recall': 0.637506717317365}
03/22/2021 15:15:36 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:36 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:36 - INFO - training_utils.postprocess -   5 (1.64 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:36 - INFO - __main__ -   Epoch: 0009 | Time: 0m_1s | train_loss: 4.390 | val_loss: 5.261
03/22/2021 15:15:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6936090225563909, 'f1': 0.6441894109955525, 'precision': 0.6441894109955525, 'recall': 0.6441894109955525}
03/22/2021 15:15:37 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:37 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:37 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:37 - INFO - training_utils.postprocess -   1 (0.33 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:37 - INFO - __main__ -   Epoch: 0010 | Time: 0m_1s | train_loss: 4.486 | val_loss: 5.150
03/22/2021 15:15:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6823308270676691, 'f1': 0.6361109510522327, 'precision': 0.6361109510522327, 'recall': 0.6361109510522327}
03/22/2021 15:15:38 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:38 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:38 - INFO - training_utils.postprocess -   3 (0.99 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:38 - INFO - __main__ -   Epoch: 0011 | Time: 0m_1s | train_loss: 4.113 | val_loss: 5.560
03/22/2021 15:15:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6484962406015038, 'f1': 0.6287725916443128, 'precision': 0.6287725916443128, 'recall': 0.6287725916443128}
03/22/2021 15:15:38 - INFO - __main__ -   	--STOPPING EARLY
03/22/2021 15:15:38 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/bgen/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
03/22/2021 15:15:39 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/bgen/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
03/22/2021 15:15:39 - INFO - training_utils.train_loop -   postprocessing targets..
03/22/2021 15:15:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:39 - INFO - training_utils.train_loop -   postprocessing predictions..
03/22/2021 15:15:39 - INFO - training_utils.postprocess -   0 (0.00 %) out of 304 q2, q3, q4, q5 predictions are changed during postprocessing
03/22/2021 15:15:39 - INFO - __main__ -   best_val_loss: 5.015
03/22/2021 15:15:39 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6879699248120301, 'f1': 0.6457983946245334, 'precision': 0.6457983946245334, 'recall': 0.6457983946245334}
