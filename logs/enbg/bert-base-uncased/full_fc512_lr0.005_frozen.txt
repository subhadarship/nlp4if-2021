04/04/2021 22:51:38 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/04/2021 22:51:38 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all,bg_all
	trglang: bg
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/enbg/bert-base-uncased/full_fc512_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/full_fc512_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/04/2021 22:51:38 - INFO - __main__ -   device: cuda
04/04/2021 22:51:38 - INFO - data_utils.load -   considered 451 (100.00 %) samples out of 451 total samples in ../data/prepared/train.en.tsv
04/04/2021 22:51:38 - INFO - data_utils.load -   considered 3000 (100.00 %) samples out of 3000 total samples in ../data/prepared/train.bg.tsv
04/04/2021 22:51:38 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/prepared/dev.bg.tsv
04/04/2021 22:51:38 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/04/2021 22:51:40 - WARNING - data_utils.bert_data -   trimming sentence 2219 of length 7376 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/04/2021 22:51:41 - WARNING - data_utils.bert_data -   trimming sentence 2677 of length 1441 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/04/2021 22:51:42 - INFO - data_utils.preprocess_bert -   num train samples: 3451
04/04/2021 22:51:42 - INFO - data_utils.preprocess_bert -   num val samples: 350
04/04/2021 22:51:42 - INFO - data_utils.preprocess_bert -   num test samples: None
04/04/2021 22:51:42 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/04/2021 22:51:42 - INFO - data_utils.preprocess_bert -   val sentence max len: 246
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   train OOV: 624 (0.18%) out of 349545 running tokens are OOV
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   val OOV: 7 (0.02%) out of 32956 running tokens are OOV
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 22:51:43 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
04/04/2021 22:51:45 - INFO - data_utils.preprocess_bert -   there are nearly 374 batches in an epoch
04/04/2021 22:51:47 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=3, bias=True)
    (1): Linear(in_features=512, out_features=3, bias=True)
    (2): Linear(in_features=512, out_features=3, bias=True)
    (3): Linear(in_features=512, out_features=3, bias=True)
    (4): Linear(in_features=512, out_features=3, bias=True)
    (5): Linear(in_features=512, out_features=3, bias=True)
    (6): Linear(in_features=512, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/04/2021 22:51:47 - INFO - __main__ -   the model has 404,501 trainable parameters
04/04/2021 22:51:47 - INFO - __main__ -   ðŸŒ‹  starting training..
04/04/2021 22:52:10 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:52:10 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:52:10 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:52:10 - INFO - training_utils.postprocess -   5 (0.36 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:52:10 - INFO - __main__ -   Epoch: 0001 | Time: 0m_23s | train_loss: 4.861 | val_loss: 3.884
04/04/2021 22:52:10 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8420408163265306, 'f1': 0.8151139655280996, 'precision': 0.8151139655280996, 'recall': 0.8151139655280996}
04/04/2021 22:52:10 - INFO - __main__ -   	--Found new best val f1
04/04/2021 22:52:10 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 22:52:34 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:52:34 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:52:34 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:52:34 - INFO - training_utils.postprocess -   2 (0.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:52:34 - INFO - __main__ -   Epoch: 0002 | Time: 0m_23s | train_loss: 4.567 | val_loss: 3.462
04/04/2021 22:52:34 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8379591836734696, 'f1': 0.8114304448010995, 'precision': 0.8114304448010995, 'recall': 0.8114304448010995}
04/04/2021 22:52:34 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 22:52:57 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:52:57 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:52:57 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:52:57 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:52:57 - INFO - __main__ -   Epoch: 0003 | Time: 0m_23s | train_loss: 4.518 | val_loss: 3.644
04/04/2021 22:52:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.846938775510204, 'f1': 0.8182688652381113, 'precision': 0.8182688652381113, 'recall': 0.8182688652381113}
04/04/2021 22:52:57 - INFO - __main__ -   	--Found new best val f1
04/04/2021 22:53:01 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 22:53:25 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:53:25 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:53:25 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:53:25 - INFO - training_utils.postprocess -   7 (0.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:53:25 - INFO - __main__ -   Epoch: 0004 | Time: 0m_23s | train_loss: 4.410 | val_loss: 4.149
04/04/2021 22:53:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8248979591836735, 'f1': 0.8065613904861504, 'precision': 0.8065613904861504, 'recall': 0.8065613904861504}
04/04/2021 22:53:25 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 22:53:48 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:53:48 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:53:48 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:53:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:53:48 - INFO - __main__ -   Epoch: 0005 | Time: 0m_23s | train_loss: 4.372 | val_loss: 3.596
04/04/2021 22:53:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8477551020408163, 'f1': 0.8198497507429867, 'precision': 0.8198497507429867, 'recall': 0.8198497507429867}
04/04/2021 22:53:48 - INFO - __main__ -   	--Found new best val f1
04/04/2021 22:53:56 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 22:54:19 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:54:19 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:54:19 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:54:19 - INFO - training_utils.postprocess -   6 (0.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:54:19 - INFO - __main__ -   Epoch: 0006 | Time: 0m_23s | train_loss: 4.311 | val_loss: 3.705
04/04/2021 22:54:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8444897959183673, 'f1': 0.8174959335954408, 'precision': 0.8174959335954408, 'recall': 0.8174959335954408}
04/04/2021 22:54:19 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 22:54:43 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:54:43 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:54:43 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:54:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:54:43 - INFO - __main__ -   Epoch: 0007 | Time: 0m_23s | train_loss: 4.293 | val_loss: 4.180
04/04/2021 22:54:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8506122448979591, 'f1': 0.8210239884378284, 'precision': 0.8210239884378284, 'recall': 0.8210239884378284}
04/04/2021 22:54:43 - INFO - __main__ -   	--Found new best val f1
04/04/2021 22:54:50 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 22:55:13 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:55:13 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:55:13 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:55:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:55:13 - INFO - __main__ -   Epoch: 0008 | Time: 0m_23s | train_loss: 4.246 | val_loss: 4.557
04/04/2021 22:55:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7681632653061224, 'f1': 0.7703456724800513, 'precision': 0.7703456724800513, 'recall': 0.7703456724800513}
04/04/2021 22:55:13 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 22:55:36 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:55:36 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:55:36 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:55:36 - INFO - training_utils.postprocess -   2 (0.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:55:36 - INFO - __main__ -   Epoch: 0009 | Time: 0m_23s | train_loss: 4.273 | val_loss: 4.027
04/04/2021 22:55:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8257142857142857, 'f1': 0.8069971652001379, 'precision': 0.8069971652001379, 'recall': 0.8069971652001379}
04/04/2021 22:55:36 - INFO - __main__ -   	current patience value: 2/10
04/04/2021 22:56:00 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:56:00 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:56:00 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:56:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:56:00 - INFO - __main__ -   Epoch: 0010 | Time: 0m_23s | train_loss: 4.208 | val_loss: 3.678
04/04/2021 22:56:00 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8428571428571427, 'f1': 0.8147426313367979, 'precision': 0.8147426313367979, 'recall': 0.8147426313367979}
04/04/2021 22:56:00 - INFO - __main__ -   	current patience value: 3/10
04/04/2021 22:56:23 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:56:23 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:56:23 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:56:23 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:56:23 - INFO - __main__ -   Epoch: 0011 | Time: 0m_23s | train_loss: 4.243 | val_loss: 3.611
04/04/2021 22:56:23 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8465306122448979, 'f1': 0.8188875488629274, 'precision': 0.8188875488629274, 'recall': 0.8188875488629274}
04/04/2021 22:56:23 - INFO - __main__ -   	current patience value: 4/10
04/04/2021 22:56:47 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:56:47 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:56:47 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:56:47 - INFO - training_utils.postprocess -   5 (0.36 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:56:47 - INFO - __main__ -   Epoch: 0012 | Time: 0m_23s | train_loss: 4.192 | val_loss: 3.473
04/04/2021 22:56:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8420408163265306, 'f1': 0.8150945251975676, 'precision': 0.8150945251975676, 'recall': 0.8150945251975676}
04/04/2021 22:56:47 - INFO - __main__ -   	current patience value: 5/10
04/04/2021 22:57:10 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:57:10 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:57:10 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:57:10 - INFO - training_utils.postprocess -   4 (0.29 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:57:10 - INFO - __main__ -   Epoch: 0013 | Time: 0m_23s | train_loss: 4.254 | val_loss: 3.595
04/04/2021 22:57:10 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8351020408163266, 'f1': 0.812501771093446, 'precision': 0.812501771093446, 'recall': 0.812501771093446}
04/04/2021 22:57:10 - INFO - __main__ -   	current patience value: 6/10
04/04/2021 22:57:34 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:57:34 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:57:34 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:57:34 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:57:34 - INFO - __main__ -   Epoch: 0014 | Time: 0m_23s | train_loss: 4.180 | val_loss: 3.464
04/04/2021 22:57:34 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8453061224489796, 'f1': 0.8170938580240233, 'precision': 0.8170938580240233, 'recall': 0.8170938580240233}
04/04/2021 22:57:34 - INFO - __main__ -   	current patience value: 7/10
04/04/2021 22:57:57 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:57:57 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:57:57 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:57:57 - INFO - training_utils.postprocess -   4 (0.29 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:57:57 - INFO - __main__ -   Epoch: 0015 | Time: 0m_23s | train_loss: 4.256 | val_loss: 3.536
04/04/2021 22:57:57 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8473469387755103, 'f1': 0.8190248617275125, 'precision': 0.8190248617275125, 'recall': 0.8190248617275125}
04/04/2021 22:57:57 - INFO - __main__ -   	current patience value: 8/10
04/04/2021 22:58:20 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:58:20 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:58:20 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:58:20 - INFO - training_utils.postprocess -   5 (0.36 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:58:20 - INFO - __main__ -   Epoch: 0016 | Time: 0m_23s | train_loss: 4.200 | val_loss: 3.555
04/04/2021 22:58:20 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.849795918367347, 'f1': 0.8213430526263427, 'precision': 0.8213430526263427, 'recall': 0.8213430526263427}
04/04/2021 22:58:20 - INFO - __main__ -   	--Found new best val f1
04/04/2021 22:58:27 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 22:58:51 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:58:51 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:58:51 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:58:51 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:58:51 - INFO - __main__ -   Epoch: 0017 | Time: 0m_23s | train_loss: 4.217 | val_loss: 3.605
04/04/2021 22:58:51 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8493877551020408, 'f1': 0.8201992498054119, 'precision': 0.8201992498054119, 'recall': 0.8201992498054119}
04/04/2021 22:58:51 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 22:59:14 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:59:14 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:59:14 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:59:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:59:14 - INFO - __main__ -   Epoch: 0018 | Time: 0m_23s | train_loss: 4.193 | val_loss: 3.533
04/04/2021 22:59:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8477551020408163, 'f1': 0.8198610325984249, 'precision': 0.8198610325984249, 'recall': 0.8198610325984249}
04/04/2021 22:59:14 - INFO - __main__ -   	current patience value: 2/10
04/04/2021 22:59:38 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 22:59:38 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:59:38 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 22:59:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 22:59:38 - INFO - __main__ -   Epoch: 0019 | Time: 0m_23s | train_loss: 4.235 | val_loss: 3.655
04/04/2021 22:59:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8457142857142858, 'f1': 0.816977508218223, 'precision': 0.816977508218223, 'recall': 0.816977508218223}
04/04/2021 22:59:38 - INFO - __main__ -   	current patience value: 3/10
04/04/2021 23:00:01 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:00:01 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:00:01 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:00:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:00:01 - INFO - __main__ -   Epoch: 0020 | Time: 0m_23s | train_loss: 4.213 | val_loss: 3.560
04/04/2021 23:00:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.846530612244898, 'f1': 0.8191491347683385, 'precision': 0.8191491347683385, 'recall': 0.8191491347683385}
04/04/2021 23:00:01 - INFO - __main__ -   	current patience value: 4/10
04/04/2021 23:00:24 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:00:24 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:00:24 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:00:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:00:24 - INFO - __main__ -   Epoch: 0021 | Time: 0m_23s | train_loss: 4.140 | val_loss: 3.547
04/04/2021 23:00:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8453061224489796, 'f1': 0.8176170366159419, 'precision': 0.8176170366159419, 'recall': 0.8176170366159419}
04/04/2021 23:00:24 - INFO - __main__ -   	current patience value: 5/10
04/04/2021 23:00:48 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:00:48 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:00:48 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:00:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:00:48 - INFO - __main__ -   Epoch: 0022 | Time: 0m_23s | train_loss: 4.149 | val_loss: 3.546
04/04/2021 23:00:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.846530612244898, 'f1': 0.8186438632262949, 'precision': 0.8186438632262949, 'recall': 0.8186438632262949}
04/04/2021 23:00:48 - INFO - __main__ -   	current patience value: 6/10
04/04/2021 23:01:11 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:01:11 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:01:11 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:01:11 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:01:11 - INFO - __main__ -   Epoch: 0023 | Time: 0m_23s | train_loss: 4.193 | val_loss: 3.788
04/04/2021 23:01:11 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.843265306122449, 'f1': 0.8169049322591835, 'precision': 0.8169049322591835, 'recall': 0.8169049322591835}
04/04/2021 23:01:11 - INFO - __main__ -   	current patience value: 7/10
04/04/2021 23:01:35 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:01:35 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:01:35 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:01:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:01:35 - INFO - __main__ -   Epoch: 0024 | Time: 0m_23s | train_loss: 4.184 | val_loss: 3.589
04/04/2021 23:01:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8493877551020408, 'f1': 0.8204887047284174, 'precision': 0.8204887047284174, 'recall': 0.8204887047284174}
04/04/2021 23:01:35 - INFO - __main__ -   	current patience value: 8/10
04/04/2021 23:01:58 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:01:58 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:01:58 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:01:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:01:58 - INFO - __main__ -   Epoch: 0025 | Time: 0m_23s | train_loss: 4.209 | val_loss: 4.385
04/04/2021 23:01:58 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7612244897959185, 'f1': 0.7659928994900024, 'precision': 0.7659928994900024, 'recall': 0.7659928994900024}
04/04/2021 23:01:58 - INFO - __main__ -   	current patience value: 9/10
04/04/2021 23:02:21 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:02:21 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:02:21 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:02:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:02:21 - INFO - __main__ -   Epoch: 0026 | Time: 0m_23s | train_loss: 4.131 | val_loss: 3.710
04/04/2021 23:02:21 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8497959183673469, 'f1': 0.8207017358337344, 'precision': 0.8207017358337344, 'recall': 0.8207017358337344}
04/04/2021 23:02:21 - INFO - __main__ -   	current patience value: 10/10
04/04/2021 23:02:21 - INFO - __main__ -   	--STOPPING EARLY
04/04/2021 23:02:21 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/full_fc512_lr0.005_frozen
04/04/2021 23:02:22 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/full_fc512_lr0.005_frozen
04/04/2021 23:02:25 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 23:02:25 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:02:25 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 23:02:25 - INFO - training_utils.postprocess -   5 (0.36 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 23:02:25 - INFO - __main__ -   best_val_loss: 3.555
04/04/2021 23:02:25 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.849795918367347, 'f1': 0.8213430526263427, 'precision': 0.8213430526263427, 'recall': 0.8213430526263427}
