04/04/2021 21:28:41 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/04/2021 21:28:41 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all,bg_all
	trglang: bg
	train_data_dir: ../data/prepared
	dev_data_dir: ../data/prepared
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/enbg/bert-base-uncased/full_fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/full_fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/04/2021 21:28:41 - INFO - __main__ -   device: cuda
04/04/2021 21:28:41 - INFO - data_utils.load -   considered 451 (100.00 %) samples out of 451 total samples in ../data/prepared/train.en.tsv
04/04/2021 21:28:41 - INFO - data_utils.load -   considered 3000 (100.00 %) samples out of 3000 total samples in ../data/prepared/train.bg.tsv
04/04/2021 21:28:41 - INFO - data_utils.load -   considered 350 (100.00 %) samples out of 350 total samples in ../data/prepared/dev.bg.tsv
04/04/2021 21:28:41 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/04/2021 21:28:43 - WARNING - data_utils.bert_data -   trimming sentence 2219 of length 7376 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/04/2021 21:28:44 - WARNING - data_utils.bert_data -   trimming sentence 2677 of length 1441 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/04/2021 21:28:44 - INFO - data_utils.preprocess_bert -   num train samples: 3451
04/04/2021 21:28:44 - INFO - data_utils.preprocess_bert -   num val samples: 350
04/04/2021 21:28:44 - INFO - data_utils.preprocess_bert -   num test samples: None
04/04/2021 21:28:44 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/04/2021 21:28:44 - INFO - data_utils.preprocess_bert -   val sentence max len: 246
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   train OOV: 624 (0.18%) out of 349545 running tokens are OOV
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   val OOV: 7 (0.02%) out of 32956 running tokens are OOV
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/04/2021 21:28:46 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
04/04/2021 21:28:48 - INFO - data_utils.preprocess_bert -   there are nearly 374 batches in an epoch
04/04/2021 21:28:50 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/04/2021 21:28:50 - INFO - __main__ -   the model has 202,261 trainable parameters
04/04/2021 21:28:50 - INFO - __main__ -   ðŸŒ‹  starting training..
04/04/2021 21:29:13 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:29:13 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:29:13 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:29:13 - INFO - training_utils.postprocess -   12 (0.86 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:29:13 - INFO - __main__ -   Epoch: 0001 | Time: 0m_23s | train_loss: 4.742 | val_loss: 3.902
04/04/2021 21:29:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8424489795918367, 'f1': 0.8152070356611988, 'precision': 0.8152070356611988, 'recall': 0.8152070356611988}
04/04/2021 21:29:13 - INFO - __main__ -   	--Found new best val f1
04/04/2021 21:29:13 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 21:29:37 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:29:37 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:29:37 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:29:37 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:29:37 - INFO - __main__ -   Epoch: 0002 | Time: 0m_23s | train_loss: 4.523 | val_loss: 3.747
04/04/2021 21:29:37 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8440816326530612, 'f1': 0.8152690174731162, 'precision': 0.8152690174731162, 'recall': 0.8152690174731162}
04/04/2021 21:29:37 - INFO - __main__ -   	--Found new best val f1
04/04/2021 21:29:45 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 21:30:08 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:30:08 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:30:08 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:30:08 - INFO - training_utils.postprocess -   6 (0.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:30:08 - INFO - __main__ -   Epoch: 0003 | Time: 0m_23s | train_loss: 4.430 | val_loss: 3.827
04/04/2021 21:30:08 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8318367346938775, 'f1': 0.8103454047421484, 'precision': 0.8103454047421484, 'recall': 0.8103454047421484}
04/04/2021 21:30:08 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 21:30:32 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:30:32 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:30:32 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:30:32 - INFO - training_utils.postprocess -   4 (0.29 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:30:32 - INFO - __main__ -   Epoch: 0004 | Time: 0m_23s | train_loss: 4.349 | val_loss: 3.863
04/04/2021 21:30:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.830204081632653, 'f1': 0.8096734468930168, 'precision': 0.8096734468930168, 'recall': 0.8096734468930168}
04/04/2021 21:30:32 - INFO - __main__ -   	current patience value: 2/10
04/04/2021 21:30:55 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:30:55 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:30:55 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:30:55 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:30:55 - INFO - __main__ -   Epoch: 0005 | Time: 0m_23s | train_loss: 4.273 | val_loss: 3.521
04/04/2021 21:30:55 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8510204081632653, 'f1': 0.8217293399450202, 'precision': 0.8217293399450202, 'recall': 0.8217293399450202}
04/04/2021 21:30:55 - INFO - __main__ -   	--Found new best val f1
04/04/2021 21:30:59 - INFO - __main__ -   	current patience value: 0/10
04/04/2021 21:31:22 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:31:22 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:31:22 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:31:22 - INFO - training_utils.postprocess -   25 (1.79 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:31:22 - INFO - __main__ -   Epoch: 0006 | Time: 0m_23s | train_loss: 4.228 | val_loss: 3.740
04/04/2021 21:31:22 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8289795918367348, 'f1': 0.8088130345638765, 'precision': 0.8088130345638765, 'recall': 0.8088130345638765}
04/04/2021 21:31:22 - INFO - __main__ -   	current patience value: 1/10
04/04/2021 21:31:45 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:31:45 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:31:45 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:31:45 - INFO - training_utils.postprocess -   3 (0.21 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:31:45 - INFO - __main__ -   Epoch: 0007 | Time: 0m_23s | train_loss: 4.198 | val_loss: 3.464
04/04/2021 21:31:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8510204081632653, 'f1': 0.8209254880751791, 'precision': 0.8209254880751791, 'recall': 0.8209254880751791}
04/04/2021 21:31:45 - INFO - __main__ -   	current patience value: 2/10
04/04/2021 21:32:09 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:32:09 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:32:09 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:32:09 - INFO - training_utils.postprocess -   12 (0.86 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:32:09 - INFO - __main__ -   Epoch: 0008 | Time: 0m_23s | train_loss: 4.167 | val_loss: 4.198
04/04/2021 21:32:09 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7848979591836736, 'f1': 0.780954965396177, 'precision': 0.780954965396177, 'recall': 0.780954965396177}
04/04/2021 21:32:09 - INFO - __main__ -   	current patience value: 3/10
04/04/2021 21:32:32 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:32:32 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:32:32 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:32:32 - INFO - training_utils.postprocess -   20 (1.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:32:32 - INFO - __main__ -   Epoch: 0009 | Time: 0m_23s | train_loss: 4.165 | val_loss: 4.041
04/04/2021 21:32:32 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8008163265306123, 'f1': 0.7917898196358287, 'precision': 0.7917898196358287, 'recall': 0.7917898196358287}
04/04/2021 21:32:32 - INFO - __main__ -   	current patience value: 4/10
04/04/2021 21:32:56 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:32:56 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:32:56 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:32:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:32:56 - INFO - __main__ -   Epoch: 0010 | Time: 0m_23s | train_loss: 4.105 | val_loss: 3.251
04/04/2021 21:32:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8412244897959184, 'f1': 0.8142346281400332, 'precision': 0.8142346281400332, 'recall': 0.8142346281400332}
04/04/2021 21:32:56 - INFO - __main__ -   	current patience value: 5/10
04/04/2021 21:33:19 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:33:19 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:33:19 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:33:19 - INFO - training_utils.postprocess -   2 (0.14 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:33:19 - INFO - __main__ -   Epoch: 0011 | Time: 0m_23s | train_loss: 4.135 | val_loss: 3.357
04/04/2021 21:33:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.850204081632653, 'f1': 0.8211607372141405, 'precision': 0.8211607372141405, 'recall': 0.8211607372141405}
04/04/2021 21:33:19 - INFO - __main__ -   	current patience value: 6/10
04/04/2021 21:33:43 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:33:43 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:33:43 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:33:43 - INFO - training_utils.postprocess -   6 (0.43 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:33:43 - INFO - __main__ -   Epoch: 0012 | Time: 0m_23s | train_loss: 4.062 | val_loss: 3.447
04/04/2021 21:33:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8457142857142858, 'f1': 0.8178891494820882, 'precision': 0.8178891494820882, 'recall': 0.8178891494820882}
04/04/2021 21:33:43 - INFO - __main__ -   	current patience value: 7/10
04/04/2021 21:34:06 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:34:06 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:06 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:34:06 - INFO - training_utils.postprocess -   10 (0.71 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:06 - INFO - __main__ -   Epoch: 0013 | Time: 0m_23s | train_loss: 4.115 | val_loss: 3.601
04/04/2021 21:34:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8306122448979593, 'f1': 0.8100807840195813, 'precision': 0.8100807840195813, 'recall': 0.8100807840195813}
04/04/2021 21:34:06 - INFO - __main__ -   	current patience value: 8/10
04/04/2021 21:34:29 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:34:29 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:29 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:34:29 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:30 - INFO - __main__ -   Epoch: 0014 | Time: 0m_23s | train_loss: 4.075 | val_loss: 3.193
04/04/2021 21:34:30 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8404081632653061, 'f1': 0.8126477362146302, 'precision': 0.8126477362146302, 'recall': 0.8126477362146302}
04/04/2021 21:34:30 - INFO - __main__ -   	current patience value: 9/10
04/04/2021 21:34:53 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:34:53 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:53 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:34:53 - INFO - training_utils.postprocess -   7 (0.50 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:53 - INFO - __main__ -   Epoch: 0015 | Time: 0m_23s | train_loss: 4.088 | val_loss: 3.284
04/04/2021 21:34:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.8457142857142858, 'f1': 0.8180619044339473, 'precision': 0.8180619044339473, 'recall': 0.8180619044339473}
04/04/2021 21:34:53 - INFO - __main__ -   	current patience value: 10/10
04/04/2021 21:34:53 - INFO - __main__ -   	--STOPPING EARLY
04/04/2021 21:34:53 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/full_fc256_lr0.0005_frozen
04/04/2021 21:34:53 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models/enbg/bert-base-uncased/full_fc256_lr0.0005_frozen
04/04/2021 21:34:56 - INFO - training_utils.train_loop -   postprocessing targets..
04/04/2021 21:34:56 - INFO - training_utils.postprocess -   13 (0.93 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:56 - INFO - training_utils.train_loop -   postprocessing predictions..
04/04/2021 21:34:56 - INFO - training_utils.postprocess -   1 (0.07 %) out of 1400 q2, q3, q4, q5 predictions are changed during postprocessing
04/04/2021 21:34:56 - INFO - __main__ -   best_val_loss: 3.521
04/04/2021 21:34:56 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.8510204081632653, 'f1': 0.8217293399450202, 'precision': 0.8217293399450202, 'recall': 0.8217293399450202}
