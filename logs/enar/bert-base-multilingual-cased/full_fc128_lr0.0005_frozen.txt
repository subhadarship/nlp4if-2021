04/08/2021 02:51:31 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/08/2021 02:51:31 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all,ar_all
	trglang: ar
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/prepared_additional
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/enar/bert-base-multilingual-cased/full_fc128_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models_additional/enar/bert-base-multilingual-cased/full_fc128_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/08/2021 02:51:31 - INFO - __main__ -   device: cuda
04/08/2021 02:51:31 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
04/08/2021 02:51:31 - INFO - data_utils.load -   considered 2536 (100.00 %) samples out of 2536 total samples in ../data/prepared_additional/train.ar.tsv
04/08/2021 02:51:31 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
04/08/2021 02:51:31 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
04/08/2021 02:51:33 - WARNING - data_utils.bert_data -   trimming sentence 1526 of length 1473 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 02:51:34 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1110 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 02:51:34 - INFO - data_utils.preprocess_bert -   num train samples: 3405
04/08/2021 02:51:34 - INFO - data_utils.preprocess_bert -   num val samples: 520
04/08/2021 02:51:34 - INFO - data_utils.preprocess_bert -   num test samples: None
04/08/2021 02:51:34 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/08/2021 02:51:34 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   train OOV: 1387 (0.55%) out of 252885 running tokens are OOV
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   val OOV: 237 (0.53%) out of 44965 running tokens are OOV
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 11399, 10105, 13551, 10536, 10105, 12504, 13170, 10114, 41549, 12277, 13028, 10529, 11170, 32194, 118, 10270, 10124, 10114, 11170, 25905, 10106, 169, 33250, 15042, 100, 187, 13295, 10111, 83279, 10142, 10455, 15839, 17466, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 10531, 10124, 11005, 72453, 11499, 22881, 40762, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 14820, 193, 100, 10435, 20648, 42658, 10112, 12820, 28086, 10105, 12047, 100, 187, 68026, 10380, 11951, 10944, 96820, 21863, 10531, 32992, 90939, 11490, 118, 10270, 10950, 10111, 10347, 20378, 136, 106, 146, 38008, 11850, 169, 22282, 69248, 15391, 11129, 10189, 107781, 27817, 10798, 11639, 14585, 10107, 10635, 12373, 10464, 10345, 10551, 82808, 10944, 100, 188, 28086, 74674, 119, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 10657, 108902, 10473, 10105, 31206, 20399, 36474, 21092, 96025, 11360, 10780, 24376, 10198, 18676, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 02:51:35 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 10747, 10124, 10105, 13295, 10108, 30455, 10479, 12820, 18571, 130, 19573, 10106, 14927, 32949, 11942, 24518, 23557, 108889, 32941, 13098, 32194, 54055, 25965, 12166, 10829, 119, 146, 38008, 36197, 118, 10111, 11951, 10301, 10893, 10160, 10105, 15148, 119, 146, 10392, 10347, 54468, 11426, 117, 20648, 42658, 10112, 20648, 42658, 10112, 10149, 12142, 27920, 12059, 19113, 10111, 16567, 106750, 108, 11170, 32194, 54055, 31191, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
04/08/2021 02:51:42 - INFO - data_utils.preprocess_bert -   there are nearly 263 batches in an epoch
04/08/2021 02:51:45 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=3, bias=True)
    (1): Linear(in_features=128, out_features=3, bias=True)
    (2): Linear(in_features=128, out_features=3, bias=True)
    (3): Linear(in_features=128, out_features=3, bias=True)
    (4): Linear(in_features=128, out_features=3, bias=True)
    (5): Linear(in_features=128, out_features=3, bias=True)
    (6): Linear(in_features=128, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/08/2021 02:51:45 - INFO - __main__ -   the model has 101,141 trainable parameters
04/08/2021 02:51:45 - INFO - __main__ -   ðŸŒ‹  starting training..
04/08/2021 02:52:35 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:52:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:52:35 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:52:35 - INFO - training_utils.postprocess -   6 (0.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:52:35 - INFO - __main__ -   Epoch: 0001 | Time: 0m_49s | train_loss: 5.227 | val_loss: 5.086
04/08/2021 02:52:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6151098901098901, 'f1': 0.5824550397394076, 'precision': 0.5824550397394076, 'recall': 0.5824550397394076}
04/08/2021 02:52:35 - INFO - __main__ -   	--Found new best val f1
04/08/2021 02:52:36 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 02:53:26 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:53:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:53:26 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:53:26 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:53:26 - INFO - __main__ -   Epoch: 0002 | Time: 0m_49s | train_loss: 4.723 | val_loss: 5.111
04/08/2021 02:53:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6049450549450548, 'f1': 0.5770311495704775, 'precision': 0.5770311495704775, 'recall': 0.5770311495704775}
04/08/2021 02:53:26 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 02:54:16 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:54:16 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:54:16 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:54:16 - INFO - training_utils.postprocess -   14 (0.67 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:54:16 - INFO - __main__ -   Epoch: 0003 | Time: 0m_50s | train_loss: 4.572 | val_loss: 4.803
04/08/2021 02:54:16 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.676098901098901, 'f1': 0.6314474070860318, 'precision': 0.6314474070860318, 'recall': 0.6314474070860318}
04/08/2021 02:54:16 - INFO - __main__ -   	--Found new best val f1
04/08/2021 02:54:23 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 02:55:14 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:55:14 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:55:14 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:55:14 - INFO - training_utils.postprocess -   13 (0.62 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:55:14 - INFO - __main__ -   Epoch: 0004 | Time: 0m_50s | train_loss: 4.396 | val_loss: 4.107
04/08/2021 02:55:14 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7368131868131869, 'f1': 0.6586879787305043, 'precision': 0.6586879787305043, 'recall': 0.6586879787305043}
04/08/2021 02:55:14 - INFO - __main__ -   	--Found new best val f1
04/08/2021 02:55:33 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 02:56:16 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:56:16 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:56:16 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:56:16 - INFO - training_utils.postprocess -   9 (0.43 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:56:16 - INFO - __main__ -   Epoch: 0005 | Time: 0m_43s | train_loss: 4.341 | val_loss: 4.723
04/08/2021 02:56:16 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6857142857142857, 'f1': 0.6439744117392773, 'precision': 0.6439744117392773, 'recall': 0.6439744117392773}
04/08/2021 02:56:16 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 02:57:06 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:57:06 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:57:06 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:57:06 - INFO - training_utils.postprocess -   32 (1.54 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:57:06 - INFO - __main__ -   Epoch: 0006 | Time: 0m_49s | train_loss: 4.319 | val_loss: 4.175
04/08/2021 02:57:06 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7337912087912087, 'f1': 0.6679013035339665, 'precision': 0.6679013035339665, 'recall': 0.6679013035339665}
04/08/2021 02:57:06 - INFO - __main__ -   	--Found new best val f1
04/08/2021 02:57:13 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 02:57:59 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:57:59 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:57:59 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:57:59 - INFO - training_utils.postprocess -   6 (0.29 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:57:59 - INFO - __main__ -   Epoch: 0007 | Time: 0m_46s | train_loss: 4.258 | val_loss: 4.631
04/08/2021 02:57:59 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6936813186813187, 'f1': 0.6548219075307856, 'precision': 0.6548219075307856, 'recall': 0.6548219075307856}
04/08/2021 02:57:59 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 02:58:45 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:58:45 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:58:45 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:58:45 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:58:45 - INFO - __main__ -   Epoch: 0008 | Time: 0m_46s | train_loss: 4.297 | val_loss: 4.565
04/08/2021 02:58:45 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7038461538461537, 'f1': 0.6511059182307823, 'precision': 0.6511059182307823, 'recall': 0.6511059182307823}
04/08/2021 02:58:45 - INFO - __main__ -   	current patience value: 2/10
04/08/2021 02:59:31 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 02:59:31 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:59:31 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 02:59:31 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 02:59:31 - INFO - __main__ -   Epoch: 0009 | Time: 0m_45s | train_loss: 4.210 | val_loss: 4.410
04/08/2021 02:59:31 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7153846153846153, 'f1': 0.6716831816373304, 'precision': 0.6716831816373304, 'recall': 0.6716831816373304}
04/08/2021 02:59:31 - INFO - __main__ -   	--Found new best val f1
04/08/2021 02:59:38 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 03:00:27 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:00:27 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:00:27 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:00:27 - INFO - training_utils.postprocess -   5 (0.24 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:00:27 - INFO - __main__ -   Epoch: 0010 | Time: 0m_49s | train_loss: 4.221 | val_loss: 4.268
04/08/2021 03:00:27 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7293956043956044, 'f1': 0.6754720024651214, 'precision': 0.6754720024651214, 'recall': 0.6754720024651214}
04/08/2021 03:00:27 - INFO - __main__ -   	--Found new best val f1
04/08/2021 03:00:35 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 03:01:21 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:01:21 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:01:21 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:01:21 - INFO - training_utils.postprocess -   8 (0.38 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:01:21 - INFO - __main__ -   Epoch: 0011 | Time: 0m_46s | train_loss: 4.200 | val_loss: 4.371
04/08/2021 03:01:21 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7162087912087911, 'f1': 0.6659748444051223, 'precision': 0.6659748444051223, 'recall': 0.6659748444051223}
04/08/2021 03:01:21 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 03:02:12 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:02:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:02:12 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:02:12 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:02:12 - INFO - __main__ -   Epoch: 0012 | Time: 0m_50s | train_loss: 4.195 | val_loss: 4.439
04/08/2021 03:02:12 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7228021978021978, 'f1': 0.6640411428812693, 'precision': 0.6640411428812693, 'recall': 0.6640411428812693}
04/08/2021 03:02:12 - INFO - __main__ -   	current patience value: 2/10
04/08/2021 03:03:01 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:03:01 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:03:01 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:03:01 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:03:01 - INFO - __main__ -   Epoch: 0013 | Time: 0m_49s | train_loss: 4.215 | val_loss: 5.022
04/08/2021 03:03:01 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6527472527472528, 'f1': 0.6233540975914517, 'precision': 0.6233540975914517, 'recall': 0.6233540975914517}
04/08/2021 03:03:01 - INFO - __main__ -   	current patience value: 3/10
04/08/2021 03:03:48 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:03:48 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:03:48 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:03:48 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:03:48 - INFO - __main__ -   Epoch: 0014 | Time: 0m_46s | train_loss: 4.184 | val_loss: 4.178
04/08/2021 03:03:48 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.725, 'f1': 0.6575636438728943, 'precision': 0.6575636438728943, 'recall': 0.6575636438728943}
04/08/2021 03:03:48 - INFO - __main__ -   	current patience value: 4/10
04/08/2021 03:04:38 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:04:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:04:38 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:04:38 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:04:38 - INFO - __main__ -   Epoch: 0015 | Time: 0m_50s | train_loss: 4.123 | val_loss: 4.037
04/08/2021 03:04:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7467032967032967, 'f1': 0.6882145551660147, 'precision': 0.6882145551660147, 'recall': 0.6882145551660147}
04/08/2021 03:04:38 - INFO - __main__ -   	--Found new best val f1
04/08/2021 03:04:46 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 03:05:35 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:05:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:05:35 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:05:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:05:35 - INFO - __main__ -   Epoch: 0016 | Time: 0m_49s | train_loss: 4.155 | val_loss: 4.626
04/08/2021 03:05:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6766483516483516, 'f1': 0.638042808200894, 'precision': 0.638042808200894, 'recall': 0.638042808200894}
04/08/2021 03:05:35 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 03:06:25 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:06:25 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:06:25 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:06:25 - INFO - training_utils.postprocess -   5 (0.24 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:06:25 - INFO - __main__ -   Epoch: 0017 | Time: 0m_49s | train_loss: 4.114 | val_loss: 3.911
04/08/2021 03:06:25 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7494505494505495, 'f1': 0.6797363009954877, 'precision': 0.6797363009954877, 'recall': 0.6797363009954877}
04/08/2021 03:06:25 - INFO - __main__ -   	current patience value: 2/10
04/08/2021 03:07:15 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:07:15 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:07:15 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:07:15 - INFO - training_utils.postprocess -   13 (0.62 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:07:15 - INFO - __main__ -   Epoch: 0018 | Time: 0m_50s | train_loss: 4.065 | val_loss: 4.058
04/08/2021 03:07:15 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7357142857142858, 'f1': 0.6766014448740798, 'precision': 0.6766014448740798, 'recall': 0.6766014448740798}
04/08/2021 03:07:15 - INFO - __main__ -   	current patience value: 3/10
04/08/2021 03:07:58 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:07:58 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:07:58 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:07:58 - INFO - training_utils.postprocess -   4 (0.19 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:07:58 - INFO - __main__ -   Epoch: 0019 | Time: 0m_42s | train_loss: 4.095 | val_loss: 3.959
04/08/2021 03:07:58 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7478021978021978, 'f1': 0.6829698183586561, 'precision': 0.6829698183586561, 'recall': 0.6829698183586561}
04/08/2021 03:07:58 - INFO - __main__ -   	current patience value: 4/10
04/08/2021 03:08:47 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:08:47 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:08:47 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:08:47 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:08:47 - INFO - __main__ -   Epoch: 0020 | Time: 0m_49s | train_loss: 4.010 | val_loss: 4.040
04/08/2021 03:08:47 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7313186813186813, 'f1': 0.6621970715861878, 'precision': 0.6621970715861878, 'recall': 0.6621970715861878}
04/08/2021 03:08:47 - INFO - __main__ -   	current patience value: 5/10
04/08/2021 03:09:36 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:09:36 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:09:36 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:09:36 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:09:36 - INFO - __main__ -   Epoch: 0021 | Time: 0m_49s | train_loss: 4.027 | val_loss: 4.656
04/08/2021 03:09:36 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6884615384615385, 'f1': 0.6476624393248601, 'precision': 0.6476624393248601, 'recall': 0.6476624393248601}
04/08/2021 03:09:36 - INFO - __main__ -   	current patience value: 6/10
04/08/2021 03:10:26 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:10:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:10:26 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:10:26 - INFO - training_utils.postprocess -   14 (0.67 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:10:26 - INFO - __main__ -   Epoch: 0022 | Time: 0m_49s | train_loss: 4.012 | val_loss: 4.707
04/08/2021 03:10:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6791208791208792, 'f1': 0.6573410643244462, 'precision': 0.6573410643244462, 'recall': 0.6573410643244462}
04/08/2021 03:10:26 - INFO - __main__ -   	current patience value: 7/10
04/08/2021 03:11:12 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:11:12 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:11:12 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:11:12 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:11:12 - INFO - __main__ -   Epoch: 0023 | Time: 0m_46s | train_loss: 4.028 | val_loss: 3.909
04/08/2021 03:11:12 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7442307692307694, 'f1': 0.6818621160338998, 'precision': 0.6818621160338998, 'recall': 0.6818621160338998}
04/08/2021 03:11:12 - INFO - __main__ -   	current patience value: 8/10
04/08/2021 03:12:03 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:12:03 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:12:03 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:12:03 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:12:03 - INFO - __main__ -   Epoch: 0024 | Time: 0m_50s | train_loss: 4.066 | val_loss: 4.407
04/08/2021 03:12:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.720054945054945, 'f1': 0.6812301876269226, 'precision': 0.6812301876269226, 'recall': 0.6812301876269226}
04/08/2021 03:12:03 - INFO - __main__ -   	current patience value: 9/10
04/08/2021 03:12:53 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:12:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:12:53 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:12:53 - INFO - training_utils.postprocess -   5 (0.24 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:12:53 - INFO - __main__ -   Epoch: 0025 | Time: 0m_50s | train_loss: 4.011 | val_loss: 4.590
04/08/2021 03:12:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.7057692307692307, 'f1': 0.66449659575278, 'precision': 0.66449659575278, 'recall': 0.66449659575278}
04/08/2021 03:12:53 - INFO - __main__ -   	current patience value: 10/10
04/08/2021 03:12:53 - INFO - __main__ -   	--STOPPING EARLY
04/08/2021 03:12:53 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models_additional/enar/bert-base-multilingual-cased/full_fc128_lr0.0005_frozen
04/08/2021 03:12:54 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models_additional/enar/bert-base-multilingual-cased/full_fc128_lr0.0005_frozen
04/08/2021 03:13:00 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 03:13:00 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:13:00 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 03:13:00 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 03:13:00 - INFO - __main__ -   best_val_loss: 4.037
04/08/2021 03:13:00 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.7467032967032967, 'f1': 0.6882145551660147, 'precision': 0.6882145551660147, 'recall': 0.6882145551660147}
