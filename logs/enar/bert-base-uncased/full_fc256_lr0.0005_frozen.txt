04/08/2021 07:36:50 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

04/08/2021 07:36:50 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	srclangs_with_num_samples: en_all,ar_all
	trglang: ar
	train_data_dir: ../data/prepared_additional
	dev_data_dir: ../data/prepared_additional
	test_data_dir: None
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-uncased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/enar/bert-base-uncased/full_fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/nlp4if-2021/models_additional/enar/bert-base-uncased/full_fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-uncased
	freeze_bert: True
-----------------------------------------------------------------------------------------

04/08/2021 07:36:51 - INFO - __main__ -   device: cuda
04/08/2021 07:36:51 - INFO - data_utils.load -   considered 869 (100.00 %) samples out of 869 total samples in ../data/prepared_additional/train.en.tsv
04/08/2021 07:36:51 - INFO - data_utils.load -   considered 2536 (100.00 %) samples out of 2536 total samples in ../data/prepared_additional/train.ar.tsv
04/08/2021 07:36:51 - INFO - data_utils.load -   considered 520 (100.00 %) samples out of 520 total samples in ../data/prepared_additional/dev.ar.tsv
04/08/2021 07:36:51 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-uncased
04/08/2021 07:36:53 - WARNING - data_utils.bert_data -   trimming sentence 1526 of length 2872 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 07:36:53 - WARNING - data_utils.bert_data -   trimming sentence 1873 of length 740 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 07:36:54 - WARNING - data_utils.bert_data -   trimming sentence 123 of length 1701 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
04/08/2021 07:36:55 - INFO - data_utils.preprocess_bert -   num train samples: 3405
04/08/2021 07:36:55 - INFO - data_utils.preprocess_bert -   num val samples: 520
04/08/2021 07:36:55 - INFO - data_utils.preprocess_bert -   num test samples: None
04/08/2021 07:36:55 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
04/08/2021 07:36:55 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
04/08/2021 07:36:56 - INFO - data_utils.preprocess_bert -   train OOV: 1428 (0.36%) out of 400475 running tokens are OOV
04/08/2021 07:36:57 - INFO - data_utils.preprocess_bert -   val OOV: 367 (0.46%) out of 78943 running tokens are OOV
04/08/2021 07:36:57 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
04/08/2021 07:36:57 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: For the average American the best way to tell if you have covid-19 is to cough in a rich personâ€™s face and wait for their test results, text ids: [101, 2005, 1996, 2779, 2137, 1996, 2190, 2126, 2000, 2425, 2065, 2017, 2031, 2522, 17258, 1011, 2539, 2003, 2000, 19340, 1999, 1037, 4138, 2711, 1521, 1055, 2227, 1998, 3524, 2005, 2037, 3231, 3463, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 07:36:57 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: this is fucking bullshit, text ids: [101, 2023, 2003, 8239, 14636, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 07:36:57 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Can yâ€™all please just follow the governmentâ€™s instructions so we can knock this COVID-19 out and be done?! I feel like a kindergartner that keeps losing more recess time because one or two kids canâ€™t follow directions., text ids: [101, 2064, 1061, 1521, 2035, 3531, 2074, 3582, 1996, 2231, 1521, 1055, 8128, 2061, 2057, 2064, 7324, 2023, 2522, 17258, 1011, 2539, 2041, 1998, 2022, 2589, 1029, 999, 1045, 2514, 2066, 1037, 2785, 2121, 27378, 3678, 2008, 7906, 3974, 2062, 28290, 2051, 2138, 2028, 2030, 2048, 4268, 2064, 1521, 1056, 3582, 7826, 1012, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 07:36:57 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: No offense but the corona virus disappearing before April actually sucks, text ids: [101, 2053, 10048, 2021, 1996, 21887, 7865, 14489, 2077, 2258, 2941, 19237, 102], original labels: no nan nan nan nan no no, label ids: [[1], [2], [2], [2], [2], [1], [1]]
04/08/2021 07:36:57 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: This is the face of someone who just spent 9 hours in personal protective equipment moving critically ill Covid19 patients around London.  I feel broken - and we are only at the start. I am begging people, please please do social distancing and self isolation #covid19 URL, text ids: [101, 2023, 2003, 1996, 2227, 1997, 2619, 2040, 2074, 2985, 1023, 2847, 1999, 3167, 9474, 3941, 3048, 11321, 5665, 2522, 17258, 16147, 5022, 2105, 2414, 1012, 1045, 2514, 3714, 1011, 1998, 2057, 2024, 2069, 2012, 1996, 2707, 1012, 1045, 2572, 12858, 2111, 1010, 3531, 3531, 2079, 2591, 4487, 12693, 6129, 1998, 2969, 12477, 1001, 2522, 17258, 16147, 24471, 2140, 102], original labels: yes no yes no yes no no, label ids: [[0], [1], [0], [1], [0], [1], [1]]
04/08/2021 07:37:06 - INFO - data_utils.preprocess_bert -   there are nearly 430 batches in an epoch
04/08/2021 07:37:08 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30522, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=3, bias=True)
    (1): Linear(in_features=256, out_features=3, bias=True)
    (2): Linear(in_features=256, out_features=3, bias=True)
    (3): Linear(in_features=256, out_features=3, bias=True)
    (4): Linear(in_features=256, out_features=3, bias=True)
    (5): Linear(in_features=256, out_features=3, bias=True)
    (6): Linear(in_features=256, out_features=3, bias=True)
  )
)
-----------------------------------------------------------------------------------------

04/08/2021 07:37:08 - INFO - __main__ -   the model has 202,261 trainable parameters
04/08/2021 07:37:08 - INFO - __main__ -   ðŸŒ‹  starting training..
04/08/2021 07:38:40 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:38:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:38:40 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:38:40 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:38:40 - INFO - __main__ -   Epoch: 0001 | Time: 1m_31s | train_loss: 5.156 | val_loss: 6.448
04/08/2021 07:38:40 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5258241758241758, 'f1': 0.5291931503390709, 'precision': 0.5291931503390709, 'recall': 0.5291931503390709}
04/08/2021 07:38:40 - INFO - __main__ -   	--Found new best val f1
04/08/2021 07:38:41 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 07:40:02 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:40:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:40:02 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:40:02 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:40:03 - INFO - __main__ -   Epoch: 0002 | Time: 1m_21s | train_loss: 4.930 | val_loss: 6.326
04/08/2021 07:40:03 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5574175824175824, 'f1': 0.5452234972789969, 'precision': 0.5452234972789969, 'recall': 0.5452234972789969}
04/08/2021 07:40:03 - INFO - __main__ -   	--Found new best val f1
04/08/2021 07:40:07 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 07:41:38 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:41:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:41:38 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:41:38 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:41:38 - INFO - __main__ -   Epoch: 0003 | Time: 1m_31s | train_loss: 4.864 | val_loss: 6.541
04/08/2021 07:41:38 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5546703296703297, 'f1': 0.538878957676703, 'precision': 0.538878957676703, 'recall': 0.538878957676703}
04/08/2021 07:41:38 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 07:43:09 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:43:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:43:09 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:43:09 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:43:10 - INFO - __main__ -   Epoch: 0004 | Time: 1m_31s | train_loss: 4.760 | val_loss: 7.299
04/08/2021 07:43:10 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5395604395604395, 'f1': 0.547262600470641, 'precision': 0.547262600470641, 'recall': 0.547262600470641}
04/08/2021 07:43:10 - INFO - __main__ -   	--Found new best val f1
04/08/2021 07:43:14 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 07:44:35 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:44:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:44:35 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:44:35 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:44:35 - INFO - __main__ -   Epoch: 0005 | Time: 1m_21s | train_loss: 4.739 | val_loss: 6.208
04/08/2021 07:44:35 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.575, 'f1': 0.5594745909157045, 'precision': 0.5594745909157045, 'recall': 0.5594745909157045}
04/08/2021 07:44:35 - INFO - __main__ -   	--Found new best val f1
04/08/2021 07:44:39 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 07:46:13 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:46:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:46:13 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:46:13 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:46:13 - INFO - __main__ -   Epoch: 0006 | Time: 1m_33s | train_loss: 4.683 | val_loss: 8.226
04/08/2021 07:46:13 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5175824175824176, 'f1': 0.5264253341408236, 'precision': 0.5264253341408236, 'recall': 0.5264253341408236}
04/08/2021 07:46:13 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 07:47:43 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:47:43 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:47:43 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:47:43 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:47:43 - INFO - __main__ -   Epoch: 0007 | Time: 1m_30s | train_loss: 4.646 | val_loss: 5.438
04/08/2021 07:47:43 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.6065934065934065, 'f1': 0.5774363764827644, 'precision': 0.5774363764827644, 'recall': 0.5774363764827644}
04/08/2021 07:47:43 - INFO - __main__ -   	--Found new best val f1
04/08/2021 07:47:48 - INFO - __main__ -   	current patience value: 0/10
04/08/2021 07:49:19 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:49:19 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:49:19 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:49:19 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:49:19 - INFO - __main__ -   Epoch: 0008 | Time: 1m_31s | train_loss: 4.621 | val_loss: 7.010
04/08/2021 07:49:19 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5379120879120879, 'f1': 0.5492995438129047, 'precision': 0.5492995438129047, 'recall': 0.5492995438129047}
04/08/2021 07:49:19 - INFO - __main__ -   	current patience value: 1/10
04/08/2021 07:50:51 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:50:51 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:50:51 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:50:51 - INFO - training_utils.postprocess -   12 (0.58 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:50:51 - INFO - __main__ -   Epoch: 0009 | Time: 1m_31s | train_loss: 4.548 | val_loss: 5.942
04/08/2021 07:50:51 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.575, 'f1': 0.567582061832257, 'precision': 0.567582061832257, 'recall': 0.567582061832257}
04/08/2021 07:50:51 - INFO - __main__ -   	current patience value: 2/10
04/08/2021 07:52:23 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:52:23 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:52:23 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:52:23 - INFO - training_utils.postprocess -   2 (0.10 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:52:23 - INFO - __main__ -   Epoch: 0010 | Time: 1m_32s | train_loss: 4.630 | val_loss: 6.613
04/08/2021 07:52:23 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5365384615384615, 'f1': 0.544829016413859, 'precision': 0.544829016413859, 'recall': 0.544829016413859}
04/08/2021 07:52:23 - INFO - __main__ -   	current patience value: 3/10
04/08/2021 07:53:53 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:53:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:53:53 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:53:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:53:53 - INFO - __main__ -   Epoch: 0011 | Time: 1m_29s | train_loss: 4.559 | val_loss: 7.308
04/08/2021 07:53:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5494505494505495, 'f1': 0.5395282548316686, 'precision': 0.5395282548316686, 'recall': 0.5395282548316686}
04/08/2021 07:53:53 - INFO - __main__ -   	current patience value: 4/10
04/08/2021 07:55:24 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:55:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:55:24 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:55:24 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:55:24 - INFO - __main__ -   Epoch: 0012 | Time: 1m_31s | train_loss: 4.511 | val_loss: 7.467
04/08/2021 07:55:24 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5332417582417582, 'f1': 0.5372648865222871, 'precision': 0.5372648865222871, 'recall': 0.5372648865222871}
04/08/2021 07:55:24 - INFO - __main__ -   	current patience value: 5/10
04/08/2021 07:56:56 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:56:56 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:56:56 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:56:56 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:56:56 - INFO - __main__ -   Epoch: 0013 | Time: 1m_31s | train_loss: 4.542 | val_loss: 6.604
04/08/2021 07:56:56 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.560989010989011, 'f1': 0.5635203049338361, 'precision': 0.5635203049338361, 'recall': 0.5635203049338361}
04/08/2021 07:56:56 - INFO - __main__ -   	current patience value: 6/10
04/08/2021 07:58:26 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:58:26 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:58:26 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:58:26 - INFO - training_utils.postprocess -   3 (0.14 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:58:26 - INFO - __main__ -   Epoch: 0014 | Time: 1m_29s | train_loss: 4.479 | val_loss: 6.763
04/08/2021 07:58:26 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5464285714285715, 'f1': 0.5544631536825754, 'precision': 0.5544631536825754, 'recall': 0.5544631536825754}
04/08/2021 07:58:26 - INFO - __main__ -   	current patience value: 7/10
04/08/2021 07:59:50 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 07:59:50 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:59:50 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 07:59:50 - INFO - training_utils.postprocess -   5 (0.24 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 07:59:50 - INFO - __main__ -   Epoch: 0015 | Time: 1m_24s | train_loss: 4.484 | val_loss: 7.018
04/08/2021 07:59:50 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5491758241758241, 'f1': 0.5436428128375187, 'precision': 0.5436428128375187, 'recall': 0.5436428128375187}
04/08/2021 07:59:50 - INFO - __main__ -   	current patience value: 8/10
04/08/2021 08:01:22 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 08:01:22 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 08:01:22 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 08:01:22 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 08:01:22 - INFO - __main__ -   Epoch: 0016 | Time: 1m_31s | train_loss: 4.509 | val_loss: 5.775
04/08/2021 08:01:22 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5755494505494505, 'f1': 0.5604554258615773, 'precision': 0.5604554258615773, 'recall': 0.5604554258615773}
04/08/2021 08:01:22 - INFO - __main__ -   	current patience value: 9/10
04/08/2021 08:02:53 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 08:02:53 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 08:02:53 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 08:02:53 - INFO - training_utils.postprocess -   1 (0.05 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 08:02:53 - INFO - __main__ -   Epoch: 0017 | Time: 1m_31s | train_loss: 4.454 | val_loss: 6.204
04/08/2021 08:02:53 - INFO - __main__ -   ðŸ“£ val metrics ðŸ“£ {'acc': 0.5774725274725274, 'f1': 0.5660779333323032, 'precision': 0.5660779333323032, 'recall': 0.5660779333323032}
04/08/2021 08:02:53 - INFO - __main__ -   	current patience value: 10/10
04/08/2021 08:02:53 - INFO - __main__ -   	--STOPPING EARLY
04/08/2021 08:02:53 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/nlp4if-2021/models_additional/enar/bert-base-uncased/full_fc256_lr0.0005_frozen
04/08/2021 08:02:54 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/nlp4if-2021/models_additional/enar/bert-base-uncased/full_fc256_lr0.0005_frozen
04/08/2021 08:03:10 - INFO - training_utils.train_loop -   postprocessing targets..
04/08/2021 08:03:10 - INFO - training_utils.postprocess -   0 (0.00 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 08:03:10 - INFO - training_utils.train_loop -   postprocessing predictions..
04/08/2021 08:03:10 - INFO - training_utils.postprocess -   11 (0.53 %) out of 2080 q2, q3, q4, q5 predictions are changed during postprocessing
04/08/2021 08:03:10 - INFO - __main__ -   best_val_loss: 5.438
04/08/2021 08:03:10 - INFO - __main__ -   ðŸ“£ best validation metrics ðŸ“£ {'acc': 0.6065934065934065, 'f1': 0.5774363764827644, 'precision': 0.5774363764827644, 'recall': 0.5774363764827644}
